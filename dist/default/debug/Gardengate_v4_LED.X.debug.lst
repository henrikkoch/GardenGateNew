

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun May 02 22:29:37 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	12LF1822
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2,codecov
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,codecov
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,codecov
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,codecov
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,codecov
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,codecov
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,codecov
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,codecov
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,codecov
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,codecov
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,codecov
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,codecov
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,codecov
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,codecov
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	codecov_info_hdr,global,note,abs,reloc=1,space=6,split=0,delta=1,noexec
    29                           	psect	codecov_info,global,note,abs,reloc=1,space=6,split=0,delta=1,noexec
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC12LF1822 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  008C                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0095                     	;# 
    97  0096                     	;# 
    98  0097                     	;# 
    99  0098                     	;# 
   100  0099                     	;# 
   101  009A                     	;# 
   102  009B                     	;# 
   103  009B                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  010C                     	;# 
   108  0111                     	;# 
   109  0112                     	;# 
   110  0115                     	;# 
   111  0116                     	;# 
   112  0117                     	;# 
   113  0118                     	;# 
   114  0119                     	;# 
   115  011A                     	;# 
   116  011B                     	;# 
   117  011D                     	;# 
   118  011D                     	;# 
   119  018C                     	;# 
   120  0191                     	;# 
   121  0191                     	;# 
   122  0192                     	;# 
   123  0193                     	;# 
   124  0193                     	;# 
   125  0193                     	;# 
   126  0194                     	;# 
   127  0195                     	;# 
   128  0196                     	;# 
   129  0199                     	;# 
   130  019A                     	;# 
   131  019B                     	;# 
   132  019B                     	;# 
   133  019B                     	;# 
   134  019B                     	;# 
   135  019C                     	;# 
   136  019C                     	;# 
   137  019D                     	;# 
   138  019E                     	;# 
   139  019F                     	;# 
   140  020C                     	;# 
   141  0211                     	;# 
   142  0211                     	;# 
   143  0212                     	;# 
   144  0212                     	;# 
   145  0213                     	;# 
   146  0213                     	;# 
   147  0214                     	;# 
   148  0214                     	;# 
   149  0215                     	;# 
   150  0215                     	;# 
   151  0215                     	;# 
   152  0216                     	;# 
   153  0216                     	;# 
   154  0217                     	;# 
   155  0217                     	;# 
   156  0291                     	;# 
   157  0291                     	;# 
   158  0292                     	;# 
   159  0293                     	;# 
   160  0294                     	;# 
   161  0295                     	;# 
   162  0295                     	;# 
   163  0296                     	;# 
   164  0391                     	;# 
   165  0392                     	;# 
   166  0393                     	;# 
   167  039A                     	;# 
   168  039C                     	;# 
   169  039D                     	;# 
   170  039E                     	;# 
   171  039F                     	;# 
   172  0FE4                     	;# 
   173  0FE5                     	;# 
   174  0FE6                     	;# 
   175  0FE7                     	;# 
   176  0FE8                     	;# 
   177  0FE9                     	;# 
   178  0FEA                     	;# 
   179  0FEB                     	;# 
   180  0FED                     	;# 
   181  0FEE                     	;# 
   182  0FEF                     	;# 
   183  0000                     	;# 
   184  0001                     	;# 
   185  0002                     	;# 
   186  0003                     	;# 
   187  0004                     	;# 
   188  0005                     	;# 
   189  0006                     	;# 
   190  0007                     	;# 
   191  0008                     	;# 
   192  0009                     	;# 
   193  000A                     	;# 
   194  000B                     	;# 
   195  000C                     	;# 
   196  0011                     	;# 
   197  0012                     	;# 
   198  0015                     	;# 
   199  0016                     	;# 
   200  0016                     	;# 
   201  0017                     	;# 
   202  0018                     	;# 
   203  0019                     	;# 
   204  001A                     	;# 
   205  001B                     	;# 
   206  001C                     	;# 
   207  001E                     	;# 
   208  001F                     	;# 
   209  008C                     	;# 
   210  0091                     	;# 
   211  0092                     	;# 
   212  0095                     	;# 
   213  0096                     	;# 
   214  0097                     	;# 
   215  0098                     	;# 
   216  0099                     	;# 
   217  009A                     	;# 
   218  009B                     	;# 
   219  009B                     	;# 
   220  009C                     	;# 
   221  009D                     	;# 
   222  009E                     	;# 
   223  010C                     	;# 
   224  0111                     	;# 
   225  0112                     	;# 
   226  0115                     	;# 
   227  0116                     	;# 
   228  0117                     	;# 
   229  0118                     	;# 
   230  0119                     	;# 
   231  011A                     	;# 
   232  011B                     	;# 
   233  011D                     	;# 
   234  011D                     	;# 
   235  018C                     	;# 
   236  0191                     	;# 
   237  0191                     	;# 
   238  0192                     	;# 
   239  0193                     	;# 
   240  0193                     	;# 
   241  0193                     	;# 
   242  0194                     	;# 
   243  0195                     	;# 
   244  0196                     	;# 
   245  0199                     	;# 
   246  019A                     	;# 
   247  019B                     	;# 
   248  019B                     	;# 
   249  019B                     	;# 
   250  019B                     	;# 
   251  019C                     	;# 
   252  019C                     	;# 
   253  019D                     	;# 
   254  019E                     	;# 
   255  019F                     	;# 
   256  020C                     	;# 
   257  0211                     	;# 
   258  0211                     	;# 
   259  0212                     	;# 
   260  0212                     	;# 
   261  0213                     	;# 
   262  0213                     	;# 
   263  0214                     	;# 
   264  0214                     	;# 
   265  0215                     	;# 
   266  0215                     	;# 
   267  0215                     	;# 
   268  0216                     	;# 
   269  0216                     	;# 
   270  0217                     	;# 
   271  0217                     	;# 
   272  0291                     	;# 
   273  0291                     	;# 
   274  0292                     	;# 
   275  0293                     	;# 
   276  0294                     	;# 
   277  0295                     	;# 
   278  0295                     	;# 
   279  0296                     	;# 
   280  0391                     	;# 
   281  0392                     	;# 
   282  0393                     	;# 
   283  039A                     	;# 
   284  039C                     	;# 
   285  039D                     	;# 
   286  039E                     	;# 
   287  039F                     	;# 
   288  0FE4                     	;# 
   289  0FE5                     	;# 
   290  0FE6                     	;# 
   291  0FE7                     	;# 
   292  0FE8                     	;# 
   293  0FE9                     	;# 
   294  0FEA                     	;# 
   295  0FEB                     	;# 
   296  0FED                     	;# 
   297  0FEE                     	;# 
   298  0FEF                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  0011                     	;# 
   313  0012                     	;# 
   314  0015                     	;# 
   315  0016                     	;# 
   316  0016                     	;# 
   317  0017                     	;# 
   318  0018                     	;# 
   319  0019                     	;# 
   320  001A                     	;# 
   321  001B                     	;# 
   322  001C                     	;# 
   323  001E                     	;# 
   324  001F                     	;# 
   325  008C                     	;# 
   326  0091                     	;# 
   327  0092                     	;# 
   328  0095                     	;# 
   329  0096                     	;# 
   330  0097                     	;# 
   331  0098                     	;# 
   332  0099                     	;# 
   333  009A                     	;# 
   334  009B                     	;# 
   335  009B                     	;# 
   336  009C                     	;# 
   337  009D                     	;# 
   338  009E                     	;# 
   339  010C                     	;# 
   340  0111                     	;# 
   341  0112                     	;# 
   342  0115                     	;# 
   343  0116                     	;# 
   344  0117                     	;# 
   345  0118                     	;# 
   346  0119                     	;# 
   347  011A                     	;# 
   348  011B                     	;# 
   349  011D                     	;# 
   350  011D                     	;# 
   351  018C                     	;# 
   352  0191                     	;# 
   353  0191                     	;# 
   354  0192                     	;# 
   355  0193                     	;# 
   356  0193                     	;# 
   357  0193                     	;# 
   358  0194                     	;# 
   359  0195                     	;# 
   360  0196                     	;# 
   361  0199                     	;# 
   362  019A                     	;# 
   363  019B                     	;# 
   364  019B                     	;# 
   365  019B                     	;# 
   366  019B                     	;# 
   367  019C                     	;# 
   368  019C                     	;# 
   369  019D                     	;# 
   370  019E                     	;# 
   371  019F                     	;# 
   372  020C                     	;# 
   373  0211                     	;# 
   374  0211                     	;# 
   375  0212                     	;# 
   376  0212                     	;# 
   377  0213                     	;# 
   378  0213                     	;# 
   379  0214                     	;# 
   380  0214                     	;# 
   381  0215                     	;# 
   382  0215                     	;# 
   383  0215                     	;# 
   384  0216                     	;# 
   385  0216                     	;# 
   386  0217                     	;# 
   387  0217                     	;# 
   388  0291                     	;# 
   389  0291                     	;# 
   390  0292                     	;# 
   391  0293                     	;# 
   392  0294                     	;# 
   393  0295                     	;# 
   394  0295                     	;# 
   395  0296                     	;# 
   396  0391                     	;# 
   397  0392                     	;# 
   398  0393                     	;# 
   399  039A                     	;# 
   400  039C                     	;# 
   401  039D                     	;# 
   402  039E                     	;# 
   403  039F                     	;# 
   404  0FE4                     	;# 
   405  0FE5                     	;# 
   406  0FE6                     	;# 
   407  0FE7                     	;# 
   408  0FE8                     	;# 
   409  0FE9                     	;# 
   410  0FEA                     	;# 
   411  0FEB                     	;# 
   412  0FED                     	;# 
   413  0FEE                     	;# 
   414  0FEF                     	;# 
   415  0000                     	;# 
   416  0001                     	;# 
   417  0002                     	;# 
   418  0003                     	;# 
   419  0004                     	;# 
   420  0005                     	;# 
   421  0006                     	;# 
   422  0007                     	;# 
   423  0008                     	;# 
   424  0009                     	;# 
   425  000A                     	;# 
   426  000B                     	;# 
   427  000C                     	;# 
   428  0011                     	;# 
   429  0012                     	;# 
   430  0015                     	;# 
   431  0016                     	;# 
   432  0016                     	;# 
   433  0017                     	;# 
   434  0018                     	;# 
   435  0019                     	;# 
   436  001A                     	;# 
   437  001B                     	;# 
   438  001C                     	;# 
   439  001E                     	;# 
   440  001F                     	;# 
   441  008C                     	;# 
   442  0091                     	;# 
   443  0092                     	;# 
   444  0095                     	;# 
   445  0096                     	;# 
   446  0097                     	;# 
   447  0098                     	;# 
   448  0099                     	;# 
   449  009A                     	;# 
   450  009B                     	;# 
   451  009B                     	;# 
   452  009C                     	;# 
   453  009D                     	;# 
   454  009E                     	;# 
   455  010C                     	;# 
   456  0111                     	;# 
   457  0112                     	;# 
   458  0115                     	;# 
   459  0116                     	;# 
   460  0117                     	;# 
   461  0118                     	;# 
   462  0119                     	;# 
   463  011A                     	;# 
   464  011B                     	;# 
   465  011D                     	;# 
   466  011D                     	;# 
   467  018C                     	;# 
   468  0191                     	;# 
   469  0191                     	;# 
   470  0192                     	;# 
   471  0193                     	;# 
   472  0193                     	;# 
   473  0193                     	;# 
   474  0194                     	;# 
   475  0195                     	;# 
   476  0196                     	;# 
   477  0199                     	;# 
   478  019A                     	;# 
   479  019B                     	;# 
   480  019B                     	;# 
   481  019B                     	;# 
   482  019B                     	;# 
   483  019C                     	;# 
   484  019C                     	;# 
   485  019D                     	;# 
   486  019E                     	;# 
   487  019F                     	;# 
   488  020C                     	;# 
   489  0211                     	;# 
   490  0211                     	;# 
   491  0212                     	;# 
   492  0212                     	;# 
   493  0213                     	;# 
   494  0213                     	;# 
   495  0214                     	;# 
   496  0214                     	;# 
   497  0215                     	;# 
   498  0215                     	;# 
   499  0215                     	;# 
   500  0216                     	;# 
   501  0216                     	;# 
   502  0217                     	;# 
   503  0217                     	;# 
   504  0291                     	;# 
   505  0291                     	;# 
   506  0292                     	;# 
   507  0293                     	;# 
   508  0294                     	;# 
   509  0295                     	;# 
   510  0295                     	;# 
   511  0296                     	;# 
   512  0391                     	;# 
   513  0392                     	;# 
   514  0393                     	;# 
   515  039A                     	;# 
   516  039C                     	;# 
   517  039D                     	;# 
   518  039E                     	;# 
   519  039F                     	;# 
   520  0FE4                     	;# 
   521  0FE5                     	;# 
   522  0FE6                     	;# 
   523  0FE7                     	;# 
   524  0FE8                     	;# 
   525  0FE9                     	;# 
   526  0FEA                     	;# 
   527  0FEB                     	;# 
   528  0FED                     	;# 
   529  0FEE                     	;# 
   530  0FEF                     	;# 
   531  0011                     _PIR1bits	set	17
   532  001C                     _T2CONbits	set	28
   533  000C                     _PORTAbits	set	12
   534  0012                     _PIR2	set	18
   535  0011                     _PIR1	set	17
   536  000B                     _INTCONbits	set	11
   537  0059                     _INTF	set	89
   538  005C                     _INTE	set	92
   539  0097                     _WDTCONbits	set	151
   540  009B                     _ADRESL	set	155
   541  009C                     _ADRESH	set	156
   542  009D                     _ADCON0bits	set	157
   543  009E                     _ADCON1bits	set	158
   544  0091                     _PIE1bits	set	145
   545  0095                     _OPTION_REGbits	set	149
   546  008C                     _TRISAbits	set	140
   547  0099                     _OSCCONbits	set	153
   548  0117                     _FVRCONbits	set	279
   549  010C                     _LATAbits	set	268
   550  011A                     _SRCON0bits	set	282
   551  0111                     _CM1CON0bits	set	273
   552  0117                     _FVRCON	set	279
   553  019E                     _TXSTAbits	set	414
   554  019D                     _RCSTAbits	set	413
   555  018C                     _ANSELAbits	set	396
   556  018C                     _ANSELA	set	396
   557  0215                     _SSP1CON1bits	set	533
   558  020C                     _WPUAbits	set	524
   559  039E                     _MDCARLbits	set	926
   560  0393                     _IOCAF	set	915
   561  039D                     _MDSRCbits	set	925
   562  039C                     _MDCONbits	set	924
   563  039F                     _MDCARHbits	set	927
   564                           
   565                           	psect	cinit
   566  007A                     start_initialization:	
   567                           ; #config settings
   568                           
   569  007A                     __initialization:
   570                           
   571                           ; Clear objects allocated to BITCOMMON
   572  007A  01F0               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   573  007B  01F1               	clrf	((__pbitbssCOMMON/(0+8)+1))& (0+127)
   574  007C  01F2               	clrf	((__pbitbssCOMMON/(0+8)+2))& (0+127)
   575                           
   576                           ; Clear objects allocated to COMMON
   577  007D  01FC               	clrf	__pbssCOMMON& (0+127)
   578  007E  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   579                           
   580                           ; Clear objects allocated to BITBANK0
   581  007F  0020               	movlb	0	; select bank0
   582  0080  01A1               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   583  0081  01A2               	clrf	((__pbitbssBANK0/(0+8)+1))& (0+127)
   584  0082  01A3               	clrf	((__pbitbssBANK0/(0+8)+2))& (0+127)
   585  0083  01A4               	clrf	((__pbitbssBANK0/(0+8)+3))& (0+127)
   586  0084  01A5               	clrf	((__pbitbssBANK0/(0+8)+4))& (0+127)
   587                           
   588                           ; Clear objects allocated to BANK0
   589  0085  3026               	movlw	low __pbssBANK0
   590  0086  0084               	movwf	4
   591  0087  3000               	movlw	high __pbssBANK0
   592  0088  0085               	movwf	5
   593  0089  301A               	movlw	26
   594  008A  3184  2404  3180   	fcall	clear_ram0
   595  008D                     end_of_initialization:	
   596                           ;End of C runtime variable initialization code
   597                           
   598  008D                     __end_of__initialization:
   599  008D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   600  008E  0020               	movlb	0
   601  008F  29F9               	ljmp	_main	;jump to C main() function
   602                           
   603                           	psect	bitbssCOMMON
   604  0380                     __pbitbssCOMMON:
   605  0380                     __ccovbit1_21:
   606  0380                     	ds	1
   607  0381                     __ccovbit1_20:
   608  0381                     	ds	1
   609  0382                     __ccovbit1_19:
   610  0382                     	ds	1
   611  0383                     __ccovbit1_18:
   612  0383                     	ds	1
   613  0384                     __ccovbit1_17:
   614  0384                     	ds	1
   615  0385                     __ccovbit1_16:
   616  0385                     	ds	1
   617  0386                     __ccovbit1_15:
   618  0386                     	ds	1
   619  0387                     __ccovbit1_14:
   620  0387                     	ds	1
   621  0388                     __ccovbit1_13:
   622  0388                     	ds	1
   623  0389                     __ccovbit1_12:
   624  0389                     	ds	1
   625  038A                     __ccovbit22_11:
   626  038A                     	ds	1
   627  038B                     __ccovbit17_10:
   628  038B                     	ds	1
   629  038C                     __ccovbit14_9:
   630  038C                     	ds	1
   631  038D                     __ccovbit10_8:
   632  038D                     	ds	1
   633  038E                     __ccovbit6_7:
   634  038E                     	ds	1
   635  038F                     __ccovbit2_6:
   636  038F                     	ds	1
   637  0390                     __ccovbit18_5:
   638  0390                     	ds	1
   639  0391                     __ccovbit3_4:
   640  0391                     	ds	1
   641  0392                     __ccovbit68_3:
   642  0392                     	ds	1
   643  0393                     __ccovbit65_2:
   644  0393                     	ds	1
   645  0394                     __ccovbit50_1:
   646  0394                     	ds	1
   647  0395                     main@output_polarity:
   648  0395                     	ds	1
   649  0396                     _NewDoorPolarity:
   650  0396                     	ds	1
   651  0397                     _NewStateChangeDetected:
   652  0397                     	ds	1
   653                           
   654                           	psect	bssCOMMON
   655  007C                     __pbssCOMMON:
   656  007C                     _BatteryVoltage:
   657  007C                     	ds	2
   658                           
   659                           	psect	bitbssBANK0
   660  0108                     __pbitbssBANK0:
   661  0108                     __ccovbit82_54:
   662  0108                     	ds	1
   663  0109                     __ccovbit71_53:
   664  0109                     	ds	1
   665  010A                     __ccovbit70_52:
   666  010A                     	ds	1
   667  010B                     __ccovbit68_51:
   668  010B                     	ds	1
   669  010C                     __ccovbit67_50:
   670  010C                     	ds	1
   671  010D                     __ccovbit51_49:
   672  010D                     	ds	1
   673  010E                     __ccovbit48_48:
   674  010E                     	ds	1
   675  010F                     __ccovbit46_47:
   676  010F                     	ds	1
   677  0110                     __ccovbit41_46:
   678  0110                     	ds	1
   679  0111                     __ccovbit40_45:
   680  0111                     	ds	1
   681  0112                     __ccovbit38_44:
   682  0112                     	ds	1
   683  0113                     __ccovbit33_43:
   684  0113                     	ds	1
   685  0114                     __ccovbit29_42:
   686  0114                     	ds	1
   687  0115                     __ccovbit28_41:
   688  0115                     	ds	1
   689  0116                     __ccovbit22_40:
   690  0116                     	ds	1
   691  0117                     __ccovbit19_39:
   692  0117                     	ds	1
   693  0118                     __ccovbit17_38:
   694  0118                     	ds	1
   695  0119                     __ccovbit14_37:
   696  0119                     	ds	1
   697  011A                     __ccovbit11_36:
   698  011A                     	ds	1
   699  011B                     __ccovbit10_35:
   700  011B                     	ds	1
   701  011C                     __ccovbit8_34:
   702  011C                     	ds	1
   703  011D                     __ccovbit7_33:
   704  011D                     	ds	1
   705  011E                     __ccovbit6_32:
   706  011E                     	ds	1
   707  011F                     __ccovbit4_31:
   708  011F                     	ds	1
   709  0120                     __ccovbit3_30:
   710  0120                     	ds	1
   711  0121                     __ccovbit24_29:
   712  0121                     	ds	1
   713  0122                     __ccovbit21_28:
   714  0122                     	ds	1
   715  0123                     __ccovbit17_27:
   716  0123                     	ds	1
   717  0124                     __ccovbit15_26:
   718  0124                     	ds	1
   719  0125                     __ccovbit13_25:
   720  0125                     	ds	1
   721  0126                     __ccovbit11_24:
   722  0126                     	ds	1
   723  0127                     __ccovbit7_23:
   724  0127                     	ds	1
   725  0128                     __ccovbit3_22:
   726  0128                     	ds	1
   727                           
   728                           	psect	bssBANK0
   729  0026                     __pbssBANK0:
   730  0026                     _WakeUpCounter:
   731  0026                     	ds	2
   732  0028                     _sleep_256s_counter:
   733  0028                     	ds	2
   734  002A                     _sleep_4s_counter:
   735  002A                     	ds	2
   736  002C                     _sleep_1s_counter:
   737  002C                     	ds	2
   738  002E                     _sleep_256ms_counter:
   739  002E                     	ds	2
   740  0030                     _sleep_128ms_counter:
   741  0030                     	ds	2
   742  0032                     _sleep_64ms_counter:
   743  0032                     	ds	2
   744  0034                     _ihcPulseTimer:
   745  0034                     	ds	2
   746  0036                     _prelCounter:
   747  0036                     	ds	2
   748  0038                     _millivolts:
   749  0038                     	ds	2
   750  003A                     _state_selftest:
   751  003A                     	ds	1
   752  003B                     _state_output_pulse:
   753  003B                     	ds	1
   754  003C                     _DoorStateAfterPrel:
   755  003C                     	ds	1
   756  003D                     _DoorStateBeforePrel:
   757  003D                     	ds	1
   758  003E                     _state_machine:
   759  003E                     	ds	1
   760  003F                     _state_door:
   761  003F                     	ds	1
   762                           
   763                           	psect	clrtext
   764  0404                     clear_ram0:	
   765                           ;	Called with FSR0 containing the base address, and
   766                           ;	WREG with the size to clear
   767                           
   768  0404  0064               	clrwdt	;clear the watchdog before getting into this loop
   769  0405                     clrloop0:
   770  0405  0180               	clrf	0	;clear RAM location pointed to by FSR
   771  0406  3101               	addfsr 0,1
   772  0407  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   773  0408  2C05               	goto	clrloop0	;have we reached the end yet?
   774  0409  3400               	retlw	0	;all done for this memory range, return
   775                           
   776                           	psect	cstackCOMMON
   777  0073                     __pcstackCOMMON:
   778  0073                     ?_timer2_init:
   779  0073                     ?_disable_watchdog_timer:	
   780                           ; 1 bytes @ 0x0
   781                           
   782  0073                     ?_enable_external_interrupt:	
   783                           ; 1 bytes @ 0x0
   784                           
   785  0073                     ?_set_watchdog_timer_128ms:	
   786                           ; 1 bytes @ 0x0
   787                           
   788  0073                     ?_checkState1:	
   789                           ; 1 bytes @ 0x0
   790                           
   791  0073                     ?_watch_dog_incrementing_timer:	
   792                           ; 1 bytes @ 0x0
   793                           
   794  0073                     ?_set_watchdog_timer_256ms:	
   795                           ; 1 bytes @ 0x0
   796                           
   797  0073                     ?_set_watchdog_timer_1s:	
   798                           ; 1 bytes @ 0x0
   799                           
   800  0073                     ?_set_watchdog_timer_4s:	
   801                           ; 1 bytes @ 0x0
   802                           
   803  0073                     ?_set_watchdog_timer_256s:	
   804                           ; 1 bytes @ 0x0
   805                           
   806  0073                     ?_main:	
   807                           ; 1 bytes @ 0x0
   808                           
   809  0073                     ?_enable_watchdog_timer:	
   810                           ; 1 bytes @ 0x0
   811                           
   812  0073                     ?_disable_external_interrupt:	
   813                           ; 1 bytes @ 0x0
   814                           
   815  0073                     ?_my_isr:	
   816                           ; 1 bytes @ 0x0
   817                           
   818  0073                     ??_my_isr:	
   819                           ; 1 bytes @ 0x0
   820                           
   821                           
   822                           ; 1 bytes @ 0x0
   823  0073                     	ds	2
   824  0075                     ??_timer2_init:
   825  0075                     ??_disable_watchdog_timer:	
   826                           ; 1 bytes @ 0x2
   827                           
   828  0075                     ??_enable_external_interrupt:	
   829                           ; 1 bytes @ 0x2
   830                           
   831  0075                     ??_set_watchdog_timer_128ms:	
   832                           ; 1 bytes @ 0x2
   833                           
   834  0075                     ??_watch_dog_incrementing_timer:	
   835                           ; 1 bytes @ 0x2
   836                           
   837  0075                     ??_set_watchdog_timer_256ms:	
   838                           ; 1 bytes @ 0x2
   839                           
   840  0075                     ??_set_watchdog_timer_1s:	
   841                           ; 1 bytes @ 0x2
   842                           
   843  0075                     ??_set_watchdog_timer_4s:	
   844                           ; 1 bytes @ 0x2
   845                           
   846  0075                     ??_set_watchdog_timer_256s:	
   847                           ; 1 bytes @ 0x2
   848                           
   849  0075                     ??_enable_watchdog_timer:	
   850                           ; 1 bytes @ 0x2
   851                           
   852  0075                     ??_disable_external_interrupt:	
   853                           ; 1 bytes @ 0x2
   854                           
   855  0075                     ?_getBatteryVoltage:	
   856                           ; 1 bytes @ 0x2
   857                           
   858  0075                     ?___awdiv:	
   859                           ; 2 bytes @ 0x2
   860                           
   861  0075                     ___awdiv@divisor:	
   862                           ; 2 bytes @ 0x2
   863                           
   864                           
   865                           ; 2 bytes @ 0x2
   866  0075                     	ds	2
   867  0077                     ??_getBatteryVoltage:
   868  0077                     ___awdiv@dividend:	
   869                           ; 1 bytes @ 0x4
   870                           
   871                           
   872                           ; 2 bytes @ 0x4
   873  0077                     	ds	2
   874  0079                     ??___awdiv:
   875                           
   876                           ; 1 bytes @ 0x6
   877  0079                     	ds	1
   878  007A                     getBatteryVoltage@adc_val:
   879                           
   880                           ; 2 bytes @ 0x7
   881  007A                     	ds	2
   882                           
   883                           	psect	cstackBANK0
   884  0040                     __pcstackBANK0:
   885  0040                     ___awdiv@counter:
   886                           
   887                           ; 1 bytes @ 0x0
   888  0040                     	ds	1
   889  0041                     ___awdiv@sign:
   890                           
   891                           ; 1 bytes @ 0x1
   892  0041                     	ds	1
   893  0042                     ___awdiv@quotient:
   894                           
   895                           ; 2 bytes @ 0x2
   896  0042                     	ds	2
   897  0044                     ??_checkState1:
   898                           
   899                           ; 1 bytes @ 0x4
   900  0044                     	ds	2
   901  0046                     ??_main:
   902                           
   903                           ; 1 bytes @ 0x6
   904  0046                     	ds	2
   905                           
   906                           	psect	maintext
   907  01F9                     __pmaintext:	
   908 ;;
   909 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   910 ;;
   911 ;; *************** function _main *****************
   912 ;; Defined at:
   913 ;;		line 110 in file "main.c"
   914 ;; Parameters:    Size  Location     Type
   915 ;;		None
   916 ;; Auto vars:     Size  Location     Type
   917 ;;		None
   918 ;; Return value:  Size  Location     Type
   919 ;;                  1    wreg      void 
   920 ;; Registers used:
   921 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   922 ;; Tracked objects:
   923 ;;		On entry : B1F/0
   924 ;;		On exit  : 0/0
   925 ;;		Unchanged: 0/0
   926 ;; Data sizes:     COMMON   BANK0   BANK1
   927 ;;      Params:         0       0       0
   928 ;;      Locals:         0       0       0
   929 ;;      Temps:          0       2       0
   930 ;;      Totals:         0       2       0
   931 ;;Total ram usage:        2 bytes
   932 ;; Hardware stack levels required when called: 3
   933 ;; This function calls:
   934 ;;		___awdiv
   935 ;;		_checkState1
   936 ;;		_disable_watchdog_timer
   937 ;;		_enable_external_interrupt
   938 ;;		_getBatteryVoltage
   939 ;;		_set_watchdog_timer_128ms
   940 ;;		_timer2_init
   941 ;;		_watch_dog_incrementing_timer
   942 ;; This function is called by:
   943 ;;		Startup code after reset
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947                           
   948                           ;psect for function _main
   949  01F9                     _main:
   950                           
   951                           ;incstack = 0
   952                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   953  01F9                     l2166:
   954                           
   955                           ;main.c: 112:     static __bit output_polarity;;main.c: 122:     ANSELA = 0;
   956  01F9  0023               	movlb	3	; select bank3
   957  01FA  018C               	clrf	12	;volatile
   958  01FB                     __ccov1_end_blk0:
   959  01FB                     __ccov2_start_blk1:
   960  01FB                     l2168:
   961                           
   962                           ;main.c: 128:     OSCCONbits.IRCF = 0b1111;
   963  01FB  3078               	movlw	120
   964  01FC  0021               	movlb	1	; select bank1
   965  01FD  0499               	iorwf	25,f	;volatile
   966  01FE                     __ccov2_end_blk1:
   967  01FE                     __ccov3_start_blk2:
   968  01FE                     l2170:
   969                           
   970                           ;main.c: 129:     OSCCONbits.SPLLEN = 0;
   971  01FE  1399               	bcf	25,7	;volatile
   972  01FF                     __ccov3_end_blk2:
   973  01FF                     __ccov4_start_blk3:
   974  01FF                     l2172:
   975                           
   976                           ;main.c: 130:     OSCCONbits.SCS = 0b10;
   977  01FF  0819               	movf	25,w	;volatile
   978  0200  39FC               	andlw	-4
   979  0201  3802               	iorlw	2
   980  0202  0099               	movwf	25	;volatile
   981  0203                     __ccov4_end_blk3:
   982  0203                     __ccov5_start_blk4:
   983  0203                     l2174:
   984                           
   985                           ;main.c: 156:     TRISAbits.TRISA5 = 0;
   986  0203  128C               	bcf	12,5	;volatile
   987  0204                     __ccov5_end_blk4:
   988  0204                     __ccov6_start_blk5:
   989  0204                     l2176:
   990                           
   991                           ;main.c: 157:     TRISAbits.TRISA4 = 0;
   992  0204  120C               	bcf	12,4	;volatile
   993  0205                     __ccov6_end_blk5:
   994  0205                     __ccov7_start_blk6:
   995  0205                     l2178:
   996                           
   997                           ;main.c: 158:     TRISAbits.TRISA3 = 1;
   998  0205  158C               	bsf	12,3	;volatile
   999  0206                     __ccov7_end_blk6:
  1000  0206                     __ccov8_start_blk7:
  1001  0206                     l2180:
  1002                           
  1003                           ;main.c: 159:     TRISAbits.TRISA2 = 1;
  1004  0206  150C               	bsf	12,2	;volatile
  1005  0207                     __ccov8_end_blk7:
  1006  0207                     __ccov9_start_blk8:
  1007  0207                     l2182:
  1008                           
  1009                           ;main.c: 160:     TRISAbits.TRISA1 = 0;
  1010  0207  108C               	bcf	12,1	;volatile
  1011  0208                     __ccov9_end_blk8:
  1012  0208                     __ccov10_start_blk9:
  1013  0208                     l2184:
  1014                           
  1015                           ;main.c: 161:     TRISAbits.TRISA0 = 0;
  1016  0208  100C               	bcf	12,0	;volatile
  1017  0209                     __ccov10_end_blk9:
  1018  0209                     __ccov11_start_blk10:
  1019  0209                     l2186:
  1020                           
  1021                           ;main.c: 164:     ANSELAbits.ANSA4 = 0;
  1022  0209  0023               	movlb	3	; select bank3
  1023  020A  120C               	bcf	12,4	;volatile
  1024  020B                     __ccov11_end_blk10:
  1025  020B                     __ccov12_start_blk11:
  1026  020B                     l2188:
  1027                           
  1028                           ;main.c: 165:     ANSELAbits.ANSA2 = 0;
  1029  020B  110C               	bcf	12,2	;volatile
  1030  020C                     __ccov12_end_blk11:
  1031  020C                     __ccov13_start_blk12:
  1032  020C                     l2190:
  1033                           
  1034                           ;main.c: 166:     ANSELAbits.ANSA1 = 0;
  1035  020C  108C               	bcf	12,1	;volatile
  1036  020D                     __ccov13_end_blk12:
  1037  020D                     __ccov14_start_blk13:
  1038  020D                     l2192:
  1039                           
  1040                           ;main.c: 167:     ANSELAbits.ANSA0 = 0;
  1041  020D  100C               	bcf	12,0	;volatile
  1042  020E                     __ccov14_end_blk13:
  1043  020E                     __ccov15_start_blk14:
  1044  020E                     l2194:
  1045                           
  1046                           ;main.c: 174:     OPTION_REGbits.nWPUEN = 0;
  1047  020E  0021               	movlb	1	; select bank1
  1048  020F  1395               	bcf	21,7	;volatile
  1049  0210                     __ccov15_end_blk14:
  1050  0210                     __ccov16_start_blk15:
  1051  0210                     l2196:
  1052                           
  1053                           ;main.c: 176:     WPUAbits.WPUA3 = 1;
  1054  0210  0024               	movlb	4	; select bank4
  1055  0211  158C               	bsf	12,3	;volatile
  1056  0212                     __ccov16_end_blk15:
  1057  0212                     __ccov17_start_blk16:
  1058  0212                     l2198:
  1059                           
  1060                           ;main.c: 177:     WPUAbits.WPUA2 = 0;
  1061  0212  110C               	bcf	12,2	;volatile
  1062  0213                     __ccov17_end_blk16:
  1063  0213                     __ccov18_start_blk17:
  1064  0213                     l2200:
  1065                           
  1066                           ;main.c: 184:     INTCONbits.PEIE = 1;
  1067  0213  170B               	bsf	11,6	;volatile
  1068  0214                     __ccov18_end_blk17:
  1069  0214                     __ccov19_start_blk18:
  1070  0214                     l2202:
  1071                           
  1072                           ;main.c: 186:     PIE1bits.TMR1GIE = 0;
  1073  0214  0021               	movlb	1	; select bank1
  1074  0215  1391               	bcf	17,7	;volatile
  1075  0216                     __ccov19_end_blk18:
  1076  0216                     __ccov20_start_blk19:
  1077  0216                     l2204:
  1078                           
  1079                           ;main.c: 187:     PIE1bits.SSP1IE = 0;
  1080  0216  1191               	bcf	17,3	;volatile
  1081  0217                     __ccov20_end_blk19:
  1082  0217                     __ccov21_start_blk20:
  1083  0217                     l2206:
  1084                           
  1085                           ;main.c: 189:     INTCONbits.GIE = 1;
  1086  0217  178B               	bsf	11,7	;volatile
  1087  0218                     __ccov21_end_blk20:
  1088  0218                     __ccov22_start_blk21:
  1089  0218                     l2208:
  1090                           
  1091                           ;main.c: 191:     MDCARHbits.MDCH = 0b0100;
  1092  0218  0027               	movlb	7	; select bank7
  1093  0219  081F               	movf	31,w	;volatile
  1094  021A  39F0               	andlw	-16
  1095  021B  3804               	iorlw	4
  1096  021C  009F               	movwf	31	;volatile
  1097  021D                     __ccov22_end_blk21:
  1098  021D                     __ccov23_start_blk22:
  1099  021D                     l2210:
  1100                           
  1101                           ;main.c: 192:     MDCONbits.MDEN = 0;
  1102  021D  139C               	bcf	28,7	;volatile
  1103  021E                     __ccov23_end_blk22:
  1104  021E                     __ccov24_start_blk23:
  1105  021E                     l2212:
  1106                           
  1107                           ;main.c: 193:     MDSRCbits.MDMSODIS = 1;
  1108  021E  179D               	bsf	29,7	;volatile
  1109  021F                     __ccov24_end_blk23:
  1110  021F                     __ccov25_start_blk24:
  1111  021F                     l2214:
  1112                           
  1113                           ;main.c: 195:     PIE1bits.TMR2IE = 1;
  1114  021F  0021               	movlb	1	; select bank1
  1115  0220  1491               	bsf	17,1	;volatile
  1116  0221                     __ccov25_end_blk24:
  1117  0221                     __ccov26_start_blk25:
  1118  0221                     l2216:
  1119                           
  1120                           ;main.c: 197:     PIR1 = 0;
  1121  0221  0020               	movlb	0	; select bank0
  1122  0222  0191               	clrf	17	;volatile
  1123  0223                     __ccov26_end_blk25:
  1124  0223                     __ccov27_start_blk26:
  1125  0223                     l2218:
  1126                           
  1127                           ;main.c: 198:     PIR2 = 0;
  1128  0223  0192               	clrf	18	;volatile
  1129  0224                     __ccov27_end_blk26:
  1130  0224                     __ccov28_start_blk27:
  1131  0224                     l2220:
  1132                           
  1133                           ;main.c: 205:     IOCAF = 0;
  1134  0224  0027               	movlb	7	; select bank7
  1135  0225  0193               	clrf	19	;volatile
  1136  0226                     __ccov28_end_blk27:
  1137  0226                     __ccov29_start_blk28:
  1138  0226                     l2222:
  1139                           
  1140                           ;main.c: 209:     FVRCON = 0;
  1141  0226  0022               	movlb	2	; select bank2
  1142  0227  0197               	clrf	23	;volatile
  1143  0228                     __ccov29_end_blk28:
  1144  0228                     __ccov30_start_blk29:
  1145  0228                     l2224:
  1146                           
  1147                           ;main.c: 211:     MDSRCbits.MDMS = 0b0010;
  1148  0228  0027               	movlb	7	; select bank7
  1149  0229  081D               	movf	29,w	;volatile
  1150  022A  39F0               	andlw	-16
  1151  022B  3802               	iorlw	2
  1152  022C  009D               	movwf	29	;volatile
  1153  022D                     __ccov30_end_blk29:
  1154  022D                     __ccov31_start_blk30:
  1155  022D                     l2226:
  1156                           
  1157                           ;main.c: 212:     MDCARHbits.MDCH = 0b0100;
  1158  022D  081F               	movf	31,w	;volatile
  1159  022E  39F0               	andlw	-16
  1160  022F  3804               	iorlw	4
  1161  0230  009F               	movwf	31	;volatile
  1162  0231                     __ccov31_end_blk30:
  1163  0231                     __ccov32_start_blk31:
  1164  0231                     l2228:
  1165                           
  1166                           ;main.c: 213:     MDCARLbits.MDCL = 0b0100;
  1167  0231  081E               	movf	30,w	;volatile
  1168  0232  39F0               	andlw	-16
  1169  0233  3804               	iorlw	4
  1170  0234  009E               	movwf	30	;volatile
  1171  0235                     __ccov32_end_blk31:
  1172  0235                     __ccov33_start_blk32:
  1173  0235                     l2230:
  1174                           
  1175                           ;main.c: 215:     SSP1CON1bits.SSPEN = 0;
  1176  0235  0024               	movlb	4	; select bank4
  1177  0236  1295               	bcf	21,5	;volatile
  1178  0237                     __ccov33_end_blk32:
  1179  0237                     __ccov34_start_blk33:
  1180  0237                     l2232:
  1181                           
  1182                           ;main.c: 216:     RCSTAbits.SPEN = 0;
  1183  0237  0023               	movlb	3	; select bank3
  1184  0238  139D               	bcf	29,7	;volatile
  1185  0239                     __ccov34_end_blk33:
  1186  0239                     __ccov35_start_blk34:
  1187  0239                     l2234:
  1188                           
  1189                           ;main.c: 218:     CM1CON0bits.C1ON = 0;
  1190  0239  0022               	movlb	2	; select bank2
  1191  023A  1391               	bcf	17,7	;volatile
  1192  023B                     __ccov35_end_blk34:
  1193  023B                     __ccov36_start_blk35:
  1194  023B                     l2236:
  1195                           
  1196                           ;main.c: 222:     SRCON0bits.SRLEN = 0;
  1197  023B  139A               	bcf	26,7	;volatile
  1198  023C                     __ccov36_end_blk35:
  1199  023C                     __ccov37_start_blk36:
  1200  023C                     l2238:
  1201                           
  1202                           ;main.c: 224:     RCSTAbits.SREN = 0;
  1203  023C  0023               	movlb	3	; select bank3
  1204  023D  129D               	bcf	29,5	;volatile
  1205  023E                     __ccov37_end_blk36:
  1206  023E                     __ccov38_start_blk37:
  1207  023E                     l2240:
  1208                           
  1209                           ;main.c: 225:     TXSTAbits.TXEN = 0;
  1210  023E  129E               	bcf	30,5	;volatile
  1211  023F                     __ccov38_end_blk37:
  1212  023F                     __ccov39_start_blk38:
  1213  023F                     l2242:
  1214                           
  1215                           ;main.c: 227:     timer2_init();
  1216  023F  3183  23D2  3181   	fcall	_timer2_init
  1217  0242                     __ccov39_end_blk38:
  1218  0242                     __ccov40_start_blk39:
  1219  0242                     l2244:
  1220                           
  1221                           ;main.c: 241:    disable_watchdog_timer();
  1222  0242  3184  240E  3181   	fcall	_disable_watchdog_timer
  1223  0245                     __ccov40_end_blk39:
  1224  0245                     __ccov41_start_blk40:
  1225  0245                     l2246:
  1226                           
  1227                           ;main.c: 246:      _delay((unsigned long)((200)*(16000000/4000.0)));
  1228  0245  3005               	movlw	5
  1229  0246  0020               	movlb	0	; select bank0
  1230  0247  00C7               	movwf	??_main+1
  1231  0248  300F               	movlw	15
  1232  0249  00C6               	movwf	??_main
  1233  024A  30F1               	movlw	241
  1234  024B                     u757:
  1235  024B  0B89               	decfsz	9,f
  1236  024C  2A4B               	goto	u757
  1237  024D  0BC6               	decfsz	??_main,f
  1238  024E  2A4B               	goto	u757
  1239  024F  0BC7               	decfsz	??_main+1,f
  1240  0250  2A4B               	goto	u757
  1241  0251                     __ccov41_end_blk40:
  1242  0251                     __ccov42_start_blk41:
  1243  0251                     l2248:
  1244                           
  1245                           ;main.c: 248:     NewStateChangeDetected = 0;
  1246  0251  13F2               	bcf	_NewStateChangeDetected/(0+8),_NewStateChangeDetected& (0+7)
  1247  0252                     __ccov42_end_blk41:
  1248  0252                     __ccov43_start_blk42:
  1249  0252                     l2250:
  1250                           
  1251                           ;main.c: 251:     state_door = PORTAbits.RA2;
  1252  0252  3000               	movlw	0
  1253  0253  0020               	movlb	0	; select bank0
  1254  0254  190C               	btfsc	12,2	;volatile
  1255  0255  3001               	movlw	1
  1256  0256  00BF               	movwf	_state_door
  1257  0257                     __ccov43_end_blk42:
  1258  0257                     __ccov44_start_blk43:
  1259  0257                     l2252:
  1260                           
  1261                           ;main.c: 252:     state_machine = STATE_JUST_AWAKED;
  1262  0257  01BE               	clrf	_state_machine
  1263  0258                     __ccov44_end_blk43:
  1264  0258                     __ccov45_start_blk44:
  1265  0258                     l2254:
  1266                           
  1267                           ;main.c: 255:     BatteryVoltage = getBatteryVoltage();
  1268  0258  3183  239C  3181   	fcall	_getBatteryVoltage
  1269  025B  0876               	movf	?_getBatteryVoltage+1,w
  1270  025C  00FD               	movwf	_BatteryVoltage+1	;volatile
  1271  025D  0875               	movf	?_getBatteryVoltage,w
  1272  025E  00FC               	movwf	_BatteryVoltage	;volatile
  1273  025F                     __ccov45_end_blk44:
  1274  025F                     __ccov46_start_blk45:
  1275  025F                     l2256:
  1276                           
  1277                           ;main.c: 256:     millivolts = (8192 / BatteryVoltage) * 1024;
  1278  025F  087D               	movf	_BatteryVoltage+1,w	;volatile
  1279  0260  00F6               	movwf	___awdiv@divisor+1
  1280  0261  087C               	movf	_BatteryVoltage,w	;volatile
  1281  0262  00F5               	movwf	___awdiv@divisor
  1282  0263  3000               	movlw	0
  1283  0264  00F7               	movwf	___awdiv@dividend
  1284  0265  3020               	movlw	32
  1285  0266  00F8               	movwf	___awdiv@dividend+1
  1286  0267  3183  233C  3181   	fcall	___awdiv
  1287  026A  0875               	movf	?___awdiv,w
  1288  026B  0020               	movlb	0	; select bank0
  1289  026C  00C6               	movwf	??_main
  1290  026D  0876               	movf	?___awdiv+1,w
  1291  026E  00C7               	movwf	??_main+1
  1292  026F  300A               	movlw	10
  1293  0270                     u725:
  1294  0270  35C6               	lslf	??_main,f
  1295  0271  0DC7               	rlf	??_main+1,f
  1296  0272  0B89               	decfsz	9,f
  1297  0273  2A70               	goto	u725
  1298  0274  0846               	movf	??_main,w
  1299  0275  00B8               	movwf	_millivolts	;volatile
  1300  0276  0847               	movf	??_main+1,w
  1301  0277  00B9               	movwf	_millivolts+1	;volatile
  1302  0278                     __ccov46_end_blk45:
  1303  0278                     __ccov47_start_blk46:
  1304  0278                     l2258:
  1305                           
  1306                           ;main.c: 257:     millivolts = millivolts /8;
  1307  0278  3008               	movlw	8
  1308  0279  00F5               	movwf	___awdiv@divisor
  1309  027A  3000               	movlw	0
  1310  027B  00F6               	movwf	___awdiv@divisor+1
  1311  027C  0839               	movf	_millivolts+1,w	;volatile
  1312  027D  00F8               	movwf	___awdiv@dividend+1
  1313  027E  0838               	movf	_millivolts,w	;volatile
  1314  027F  00F7               	movwf	___awdiv@dividend
  1315  0280  3183  233C  3181   	fcall	___awdiv
  1316  0283  0876               	movf	?___awdiv+1,w
  1317  0284  0020               	movlb	0	; select bank0
  1318  0285  00B9               	movwf	_millivolts+1	;volatile
  1319  0286  0875               	movf	?___awdiv,w
  1320  0287  00B8               	movwf	_millivolts	;volatile
  1321  0288                     __ccov47_end_blk46:
  1322  0288                     __ccov48_start_blk47:
  1323  0288                     l2260:
  1324                           
  1325                           ;main.c: 258:     if (BatteryVoltage <= 2400) {
  1326  0288  087D               	movf	_BatteryVoltage+1,w	;volatile
  1327  0289  3A80               	xorlw	128
  1328  028A  00C6               	movwf	??_main
  1329  028B  3089               	movlw	137
  1330  028C  0246               	subwf	??_main,w
  1331  028D  1D03               	skipz
  1332  028E  2A91               	goto	u735
  1333  028F  3061               	movlw	97
  1334  0290  027C               	subwf	_BatteryVoltage,w	;volatile
  1335  0291                     u735:
  1336  0291  1803               	skipnc
  1337  0292  2A94               	goto	u731
  1338  0293  2A95               	goto	u730
  1339  0294                     u731:
  1340  0294  2AA3               	goto	l2268
  1341  0295                     __ccov48_end_blk47:
  1342  0295                     u730:
  1343  0295                     __ccov49_start_blk48:
  1344  0295                     l2262:
  1345                           
  1346                           ;main.c: 260:         LATAbits.LATA4 = 1;
  1347  0295  0022               	movlb	2	; select bank2
  1348  0296  160C               	bsf	12,4	;volatile
  1349  0297                     __ccov49_end_blk48:
  1350  0297                     __ccov50_start_blk49:
  1351  0297                     l2264:
  1352                           
  1353                           ;main.c: 261:         _delay((unsigned long)((5*8)*(16000000/4000.0)));
  1354  0297  30D0               	movlw	208
  1355  0298  0020               	movlb	0	; select bank0
  1356  0299  00C6               	movwf	??_main
  1357  029A  30C9               	movlw	201
  1358  029B                     u767:
  1359  029B  0B89               	decfsz	9,f
  1360  029C  2A9B               	goto	u767
  1361  029D  0BC6               	decfsz	??_main,f
  1362  029E  2A9B               	goto	u767
  1363  029F  3200               	nop2
  1364  02A0                     __ccov50_end_blk49:
  1365  02A0                     __ccov51_start_blk50:
  1366  02A0                     l2266:
  1367  02A0  1672               	bsf	__ccovbit50_1/(0+8),__ccovbit50_1& (0+7)	;volatile
  1368                           
  1369                           ;main.c: 262:         LATAbits.LATA4 = !1;
  1370  02A1  0022               	movlb	2	; select bank2
  1371  02A2  120C               	bcf	12,4	;volatile
  1372  02A3                     __ccov51_end_blk50:
  1373  02A3                     __ccov52_start_blk52:
  1374  02A3                     l2268:
  1375                           
  1376                           ;main.c: 265:     DoorStateBeforePrel = PORTAbits.RA2;
  1377  02A3  3000               	movlw	0
  1378  02A4  0020               	movlb	0	; select bank0
  1379  02A5  190C               	btfsc	12,2	;volatile
  1380  02A6  3001               	movlw	1
  1381  02A7  00BD               	movwf	_DoorStateBeforePrel
  1382  02A8                     __ccov52_end_blk52:
  1383  02A8                     __ccov53_start_blk53:
  1384  02A8                     l2270:
  1385                           
  1386                           ;main.c: 266:     DoorStateAfterPrel = PORTAbits.RA2;
  1387  02A8  3000               	movlw	0
  1388  02A9  190C               	btfsc	12,2	;volatile
  1389  02AA  3001               	movlw	1
  1390  02AB  00BC               	movwf	_DoorStateAfterPrel
  1391  02AC                     __ccov53_end_blk53:
  1392  02AC                     __ccov54_start_blk54:
  1393  02AC                     l2272:
  1394                           
  1395                           ;main.c: 268:     INTCONbits.INTF = 0;
  1396  02AC  108B               	bcf	11,1	;volatile
  1397  02AD                     __ccov54_end_blk54:
  1398  02AD                     __ccov55_start_blk55:
  1399  02AD                     l2274:
  1400                           
  1401                           ;main.c: 269:     INTCONbits.GIE = 1;
  1402  02AD  178B               	bsf	11,7	;volatile
  1403  02AE                     __ccov55_end_blk55:
  1404  02AE                     __ccov56_start_blk56:
  1405  02AE                     l2276:
  1406                           
  1407                           ;main.c: 271:     enable_external_interrupt();
  1408  02AE  3184  2412  3181   	fcall	_enable_external_interrupt
  1409  02B1                     __ccov56_end_blk56:
  1410  02B1                     __ccov57_start_blk57:
  1411  02B1                     l2278:
  1412                           
  1413                           ;main.c: 274:     sleep_128ms_counter = 0;
  1414  02B1  0020               	movlb	0	; select bank0
  1415  02B2  01B0               	clrf	_sleep_128ms_counter	;volatile
  1416  02B3  01B1               	clrf	_sleep_128ms_counter+1	;volatile
  1417  02B4                     __ccov57_end_blk57:
  1418  02B4                     __ccov58_start_blk58:
  1419  02B4                     l2280:
  1420                           
  1421                           ;main.c: 275:     sleep_256ms_counter = 0;
  1422  02B4  01AE               	clrf	_sleep_256ms_counter	;volatile
  1423  02B5  01AF               	clrf	_sleep_256ms_counter+1	;volatile
  1424  02B6                     __ccov58_end_blk58:
  1425  02B6                     __ccov59_start_blk59:
  1426  02B6                     l2282:
  1427                           
  1428                           ;main.c: 276:     sleep_1s_counter = 0;
  1429  02B6  01AC               	clrf	_sleep_1s_counter	;volatile
  1430  02B7  01AD               	clrf	_sleep_1s_counter+1	;volatile
  1431  02B8                     __ccov59_end_blk59:
  1432  02B8                     __ccov60_start_blk60:
  1433  02B8                     l2284:
  1434                           
  1435                           ;main.c: 277:     sleep_4s_counter = 0;
  1436  02B8  01AA               	clrf	_sleep_4s_counter	;volatile
  1437  02B9  01AB               	clrf	_sleep_4s_counter+1	;volatile
  1438  02BA                     __ccov60_end_blk60:
  1439  02BA                     __ccov61_start_blk61:
  1440  02BA                     l2286:
  1441                           
  1442                           ;main.c: 278:     sleep_256s_counter = 0;
  1443  02BA  01A8               	clrf	_sleep_256s_counter	;volatile
  1444  02BB  01A9               	clrf	_sleep_256s_counter+1	;volatile
  1445  02BC                     __ccov61_end_blk61:
  1446  02BC                     __ccov62_start_blk62:
  1447  02BC                     l2288:
  1448                           
  1449                           ;main.c: 279:     set_watchdog_timer_128ms();
  1450  02BC  3183  23FD  3181   	fcall	_set_watchdog_timer_128ms
  1451  02BF                     __ccov62_end_blk62:
  1452  02BF                     __ccov63_start_blk64:
  1453  02BF                     l2290:
  1454                           
  1455                           ;main.c: 283:         if (NewStateChangeDetected == 1) {
  1456  02BF  1FF2               	btfss	_NewStateChangeDetected/(0+8),_NewStateChangeDetected& (0+7)
  1457  02C0  2AC2               	goto	u741
  1458  02C1  2AC3               	goto	u740
  1459  02C2                     u741:
  1460  02C2  2AC8               	goto	l2294
  1461  02C3                     __ccov63_end_blk64:
  1462  02C3                     u740:
  1463  02C3                     __ccov64_start_blk65:
  1464  02C3                     l2292:
  1465  02C3  15F2               	bsf	__ccovbit65_2/(0+8),__ccovbit65_2& (0+7)	;volatile
  1466                           
  1467                           ;main.c: 284:             state_machine = STATE_NEW_DOOR_STATE;
  1468  02C4  0020               	movlb	0	; select bank0
  1469  02C5  01BE               	clrf	_state_machine
  1470  02C6  0ABE               	incf	_state_machine,f
  1471                           
  1472                           ;main.c: 285:             NewStateChangeDetected = 0;
  1473  02C7  13F2               	bcf	_NewStateChangeDetected/(0+8),_NewStateChangeDetected& (0+7)
  1474  02C8                     __ccov64_end_blk65:
  1475  02C8                     __ccov65_start_blk67:
  1476  02C8                     l2294:
  1477                           
  1478                           ;main.c: 298:         checkState1();
  1479  02C8  3180  2090  3181   	fcall	_checkState1
  1480  02CB                     __ccov65_end_blk67:
  1481  02CB                     __ccov66_start_blk68:
  1482  02CB                     l2296:
  1483  02CB  1572               	bsf	__ccovbit68_3/(0+8),__ccovbit68_3& (0+7)	;volatile
  1484                           
  1485                           ;main.c: 300:         watch_dog_incrementing_timer();
  1486  02CC  3182  22D1  3181   	fcall	_watch_dog_incrementing_timer
  1487  02CF  2ABF               	goto	l2290
  1488  02D0                     __ccov66_end_blk68:
  1489  02D0  2876               	ljmp	start
  1490  02D1                     __end_of_main:
  1491                           
  1492                           	psect	text1
  1493  02D1                     __ptext1:	
  1494 ;; *************** function _watch_dog_incrementing_timer *****************
  1495 ;; Defined at:
  1496 ;;		line 456 in file "main.c"
  1497 ;; Parameters:    Size  Location     Type
  1498 ;;		None
  1499 ;; Auto vars:     Size  Location     Type
  1500 ;;		None
  1501 ;; Return value:  Size  Location     Type
  1502 ;;                  1    wreg      void 
  1503 ;; Registers used:
  1504 ;;		wreg, status,2, status,0, pclath, cstack
  1505 ;; Tracked objects:
  1506 ;;		On entry : 0/0
  1507 ;;		On exit  : 0/0
  1508 ;;		Unchanged: 0/0
  1509 ;; Data sizes:     COMMON   BANK0   BANK1
  1510 ;;      Params:         0       0       0
  1511 ;;      Locals:         0       0       0
  1512 ;;      Temps:          1       0       0
  1513 ;;      Totals:         1       0       0
  1514 ;;Total ram usage:        1 bytes
  1515 ;; Hardware stack levels used: 1
  1516 ;; Hardware stack levels required when called: 2
  1517 ;; This function calls:
  1518 ;;		_set_watchdog_timer_128ms
  1519 ;;		_set_watchdog_timer_1s
  1520 ;;		_set_watchdog_timer_256ms
  1521 ;;		_set_watchdog_timer_256s
  1522 ;;		_set_watchdog_timer_4s
  1523 ;; This function is called by:
  1524 ;;		_main
  1525 ;; This function uses a non-reentrant model
  1526 ;;
  1527                           
  1528                           
  1529                           ;psect for function _watch_dog_incrementing_timer
  1530  02D1                     _watch_dog_incrementing_timer:
  1531                           
  1532                           ;incstack = 0
  1533                           ; Regs used in _watch_dog_incrementing_timer: [wreg+status,2+status,0+pclath+cstack]
  1534  02D1                     l1378:
  1535                           
  1536                           ;main.c: 458:     if (sleep_128ms_counter < 8) {
  1537  02D1  0020               	movlb	0	; select bank0
  1538  02D2  0831               	movf	_sleep_128ms_counter+1,w	;volatile
  1539  02D3  3A80               	xorlw	128
  1540  02D4  00F5               	movwf	??_watch_dog_incrementing_timer
  1541  02D5  3080               	movlw	128
  1542  02D6  0275               	subwf	??_watch_dog_incrementing_timer,w
  1543  02D7  1D03               	skipz
  1544  02D8  2ADB               	goto	u225
  1545  02D9  3008               	movlw	8
  1546  02DA  0230               	subwf	_sleep_128ms_counter,w	;volatile
  1547  02DB                     u225:
  1548  02DB  1803               	skipnc
  1549  02DC  2ADE               	goto	u221
  1550  02DD  2ADF               	goto	u220
  1551  02DE                     u221:
  1552  02DE  2AE9               	goto	l1384
  1553  02DF                     __ccov86_end_blk0:
  1554  02DF                     u220:
  1555  02DF                     __ccov87_start_blk1:
  1556  02DF                     l1380:
  1557                           
  1558                           ;main.c: 460:         sleep_128ms_counter++;
  1559  02DF  3001               	movlw	1
  1560  02E0  0020               	movlb	0	; select bank0
  1561  02E1  07B0               	addwf	_sleep_128ms_counter,f	;volatile
  1562  02E2  3000               	movlw	0
  1563  02E3  3DB1               	addwfc	_sleep_128ms_counter+1,f	;volatile
  1564  02E4                     __ccov87_end_blk1:
  1565  02E4                     __ccov88_start_blk2:
  1566  02E4                     l1382:
  1567  02E4  17F1               	bsf	__ccovbit2_6/(0+8),__ccovbit2_6& (0+7)	;volatile
  1568                           
  1569                           ;main.c: 461:         set_watchdog_timer_128ms();
  1570  02E5  3183  23FD  3182   	fcall	_set_watchdog_timer_128ms
  1571                           
  1572                           ;main.c: 462:     }
  1573  02E8  2B3A               	goto	l157
  1574  02E9                     __ccov88_end_blk2:
  1575  02E9                     __ccov89_start_blk4:
  1576  02E9                     l1384:
  1577  02E9  0020               	movlb	0	; select bank0
  1578  02EA  082F               	movf	_sleep_256ms_counter+1,w	;volatile
  1579  02EB  3A80               	xorlw	128
  1580  02EC  00F5               	movwf	??_watch_dog_incrementing_timer
  1581  02ED  3080               	movlw	128
  1582  02EE  0275               	subwf	??_watch_dog_incrementing_timer,w
  1583  02EF  1D03               	skipz
  1584  02F0  2AF3               	goto	u235
  1585  02F1  3028               	movlw	40
  1586  02F2  022E               	subwf	_sleep_256ms_counter,w	;volatile
  1587  02F3                     u235:
  1588  02F3  1803               	skipnc
  1589  02F4  2AF6               	goto	u231
  1590  02F5  2AF7               	goto	u230
  1591  02F6                     u231:
  1592  02F6  2B01               	goto	l1390
  1593  02F7                     __ccov89_end_blk4:
  1594  02F7                     u230:
  1595  02F7                     __ccov90_start_blk5:
  1596  02F7                     l1386:
  1597                           
  1598                           ;main.c: 465:         sleep_256ms_counter++;
  1599  02F7  3001               	movlw	1
  1600  02F8  0020               	movlb	0	; select bank0
  1601  02F9  07AE               	addwf	_sleep_256ms_counter,f	;volatile
  1602  02FA  3000               	movlw	0
  1603  02FB  3DAF               	addwfc	_sleep_256ms_counter+1,f	;volatile
  1604  02FC                     __ccov90_end_blk5:
  1605  02FC                     __ccov91_start_blk6:
  1606  02FC                     l1388:
  1607  02FC  1771               	bsf	__ccovbit6_7/(0+8),__ccovbit6_7& (0+7)	;volatile
  1608                           
  1609                           ;main.c: 466:         set_watchdog_timer_256ms();
  1610  02FD  3183  23EF  3182   	fcall	_set_watchdog_timer_256ms
  1611                           
  1612                           ;main.c: 467:     }
  1613  0300  2B3A               	goto	l157
  1614  0301                     __ccov91_end_blk6:
  1615  0301                     __ccov92_start_blk8:
  1616  0301                     l1390:
  1617  0301  0020               	movlb	0	; select bank0
  1618  0302  082D               	movf	_sleep_1s_counter+1,w	;volatile
  1619  0303  3A80               	xorlw	128
  1620  0304  00F5               	movwf	??_watch_dog_incrementing_timer
  1621  0305  3080               	movlw	128
  1622  0306  0275               	subwf	??_watch_dog_incrementing_timer,w
  1623  0307  1D03               	skipz
  1624  0308  2B0B               	goto	u245
  1625  0309  303C               	movlw	60
  1626  030A  022C               	subwf	_sleep_1s_counter,w	;volatile
  1627  030B                     u245:
  1628  030B  1803               	skipnc
  1629  030C  2B0E               	goto	u241
  1630  030D  2B0F               	goto	u240
  1631  030E                     u241:
  1632  030E  2B19               	goto	l1396
  1633  030F                     __ccov92_end_blk8:
  1634  030F                     u240:
  1635  030F                     __ccov93_start_blk9:
  1636  030F                     l1392:
  1637                           
  1638                           ;main.c: 470:         sleep_1s_counter++;
  1639  030F  3001               	movlw	1
  1640  0310  0020               	movlb	0	; select bank0
  1641  0311  07AC               	addwf	_sleep_1s_counter,f	;volatile
  1642  0312  3000               	movlw	0
  1643  0313  3DAD               	addwfc	_sleep_1s_counter+1,f	;volatile
  1644  0314                     __ccov93_end_blk9:
  1645  0314                     __ccov94_start_blk10:
  1646  0314                     l1394:
  1647  0314  16F1               	bsf	__ccovbit10_8/(0+8),__ccovbit10_8& (0+7)	;volatile
  1648                           
  1649                           ;main.c: 471:         set_watchdog_timer_1s();
  1650  0315  3183  23F6  3182   	fcall	_set_watchdog_timer_1s
  1651                           
  1652                           ;main.c: 472:     }
  1653  0318  2B3A               	goto	l157
  1654  0319                     __ccov94_end_blk10:
  1655  0319                     __ccov95_start_blk12:
  1656  0319                     l1396:
  1657  0319  0020               	movlb	0	; select bank0
  1658  031A  082B               	movf	_sleep_4s_counter+1,w	;volatile
  1659  031B  3A80               	xorlw	128
  1660  031C  00F5               	movwf	??_watch_dog_incrementing_timer
  1661  031D  3080               	movlw	128
  1662  031E  0275               	subwf	??_watch_dog_incrementing_timer,w
  1663  031F  1D03               	skipz
  1664  0320  2B23               	goto	u255
  1665  0321  304B               	movlw	75
  1666  0322  022A               	subwf	_sleep_4s_counter,w	;volatile
  1667  0323                     u255:
  1668  0323  1803               	skipnc
  1669  0324  2B26               	goto	u251
  1670  0325  2B27               	goto	u250
  1671  0326                     u251:
  1672  0326  2B31               	goto	l1402
  1673  0327                     __ccov95_end_blk12:
  1674  0327                     u250:
  1675  0327                     __ccov96_start_blk13:
  1676  0327                     l1398:
  1677                           
  1678                           ;main.c: 475:         sleep_4s_counter++;
  1679  0327  3001               	movlw	1
  1680  0328  0020               	movlb	0	; select bank0
  1681  0329  07AA               	addwf	_sleep_4s_counter,f	;volatile
  1682  032A  3000               	movlw	0
  1683  032B  3DAB               	addwfc	_sleep_4s_counter+1,f	;volatile
  1684  032C                     __ccov96_end_blk13:
  1685  032C                     __ccov97_start_blk14:
  1686  032C                     l1400:
  1687  032C  1671               	bsf	__ccovbit14_9/(0+8),__ccovbit14_9& (0+7)	;volatile
  1688                           
  1689                           ;main.c: 476:         set_watchdog_timer_4s();
  1690  032D  3183  23E1  3182   	fcall	_set_watchdog_timer_4s
  1691                           
  1692                           ;main.c: 477:     }
  1693  0330  2B3A               	goto	l157
  1694  0331                     __ccov97_end_blk14:
  1695  0331                     __ccov98_start_blk16:
  1696  0331                     l1402:
  1697                           
  1698                           ;main.c: 479:         sleep_256s_counter++;
  1699  0331  3001               	movlw	1
  1700  0332  0020               	movlb	0	; select bank0
  1701  0333  07A8               	addwf	_sleep_256s_counter,f	;volatile
  1702  0334  3000               	movlw	0
  1703  0335  3DA9               	addwfc	_sleep_256s_counter+1,f	;volatile
  1704  0336                     __ccov98_end_blk16:
  1705  0336                     __ccov99_start_blk17:
  1706  0336                     l1404:
  1707  0336  15F1               	bsf	__ccovbit17_10/(0+8),__ccovbit17_10& (0+7)	;volatile
  1708                           
  1709                           ;main.c: 480:         set_watchdog_timer_256s();
  1710  0337  3183  23E8  3182   	fcall	_set_watchdog_timer_256s
  1711  033A                     __ccov99_end_blk17:
  1712  033A                     __ccov100_start_blk22:
  1713  033A                     l157:
  1714  033A  1571               	bsf	__ccovbit22_11/(0+8),__ccovbit22_11& (0+7)	;volatile
  1715  033B  0008               	return
  1716  033C                     __end_of_watch_dog_incrementing_timer:
  1717  033C                     
  1718                           	psect	text2
  1719  03E1                     __ptext2:	
  1720 ;; *************** function _set_watchdog_timer_4s *****************
  1721 ;; Defined at:
  1722 ;;		line 495 in file "main.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;		None
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;		None
  1727 ;; Return value:  Size  Location     Type
  1728 ;;                  1    wreg      void 
  1729 ;; Registers used:
  1730 ;;		wreg, status,2, status,0
  1731 ;; Tracked objects:
  1732 ;;		On entry : 0/0
  1733 ;;		On exit  : 0/0
  1734 ;;		Unchanged: 0/0
  1735 ;; Data sizes:     COMMON   BANK0   BANK1
  1736 ;;      Params:         0       0       0
  1737 ;;      Locals:         0       0       0
  1738 ;;      Temps:          0       0       0
  1739 ;;      Totals:         0       0       0
  1740 ;;Total ram usage:        0 bytes
  1741 ;; Hardware stack levels used: 1
  1742 ;; Hardware stack levels required when called: 1
  1743 ;; This function calls:
  1744 ;;		Nothing
  1745 ;; This function is called by:
  1746 ;;		_watch_dog_incrementing_timer
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749                           
  1750                           
  1751                           ;psect for function _set_watchdog_timer_4s
  1752  03E1                     _set_watchdog_timer_4s:
  1753                           
  1754                           ;incstack = 0
  1755                           ; Regs used in _set_watchdog_timer_4s: [wreg+status,2+status,0]
  1756  03E1                     l1254:
  1757                           
  1758                           ;main.c: 496:     WDTCONbits.WDTPS = 0b01100;
  1759  03E1  0021               	movlb	1	; select bank1
  1760  03E2  0817               	movf	23,w	;volatile
  1761  03E3  39C1               	andlw	-63
  1762  03E4  3818               	iorlw	24
  1763  03E5  0097               	movwf	23	;volatile
  1764  03E6                     __ccov109_end_blk0:
  1765  03E6                     __ccov110_start_blk1:
  1766  03E6                     l172:
  1767  03E6  1770               	bsf	__ccovbit1_15/(0+8),__ccovbit1_15& (0+7)	;volatile
  1768  03E7  0008               	return
  1769  03E8                     __end_of_set_watchdog_timer_4s:
  1770  03E8                     
  1771                           	psect	text3
  1772  03E8                     __ptext3:	
  1773 ;; *************** function _set_watchdog_timer_256s *****************
  1774 ;; Defined at:
  1775 ;;		line 498 in file "main.c"
  1776 ;; Parameters:    Size  Location     Type
  1777 ;;		None
  1778 ;; Auto vars:     Size  Location     Type
  1779 ;;		None
  1780 ;; Return value:  Size  Location     Type
  1781 ;;                  1    wreg      void 
  1782 ;; Registers used:
  1783 ;;		wreg, status,2, status,0
  1784 ;; Tracked objects:
  1785 ;;		On entry : 0/0
  1786 ;;		On exit  : 0/0
  1787 ;;		Unchanged: 0/0
  1788 ;; Data sizes:     COMMON   BANK0   BANK1
  1789 ;;      Params:         0       0       0
  1790 ;;      Locals:         0       0       0
  1791 ;;      Temps:          0       0       0
  1792 ;;      Totals:         0       0       0
  1793 ;;Total ram usage:        0 bytes
  1794 ;; Hardware stack levels used: 1
  1795 ;; Hardware stack levels required when called: 1
  1796 ;; This function calls:
  1797 ;;		Nothing
  1798 ;; This function is called by:
  1799 ;;		_watch_dog_incrementing_timer
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           
  1803                           
  1804                           ;psect for function _set_watchdog_timer_256s
  1805  03E8                     _set_watchdog_timer_256s:
  1806                           
  1807                           ;incstack = 0
  1808                           ; Regs used in _set_watchdog_timer_256s: [wreg+status,2+status,0]
  1809  03E8                     l1256:
  1810                           
  1811                           ;main.c: 499:     WDTCONbits.WDTPS = 0b10010;
  1812  03E8  0021               	movlb	1	; select bank1
  1813  03E9  0817               	movf	23,w	;volatile
  1814  03EA  39C1               	andlw	-63
  1815  03EB  3824               	iorlw	36
  1816  03EC  0097               	movwf	23	;volatile
  1817  03ED                     __ccov111_end_blk0:
  1818  03ED                     __ccov112_start_blk1:
  1819  03ED                     l175:
  1820  03ED  16F0               	bsf	__ccovbit1_16/(0+8),__ccovbit1_16& (0+7)	;volatile
  1821  03EE  0008               	return
  1822  03EF                     __end_of_set_watchdog_timer_256s:
  1823  03EF                     
  1824                           	psect	text4
  1825  03EF                     __ptext4:	
  1826 ;; *************** function _set_watchdog_timer_256ms *****************
  1827 ;; Defined at:
  1828 ;;		line 489 in file "main.c"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;		None
  1831 ;; Auto vars:     Size  Location     Type
  1832 ;;		None
  1833 ;; Return value:  Size  Location     Type
  1834 ;;                  1    wreg      void 
  1835 ;; Registers used:
  1836 ;;		wreg, status,2, status,0
  1837 ;; Tracked objects:
  1838 ;;		On entry : 0/0
  1839 ;;		On exit  : 0/0
  1840 ;;		Unchanged: 0/0
  1841 ;; Data sizes:     COMMON   BANK0   BANK1
  1842 ;;      Params:         0       0       0
  1843 ;;      Locals:         0       0       0
  1844 ;;      Temps:          0       0       0
  1845 ;;      Totals:         0       0       0
  1846 ;;Total ram usage:        0 bytes
  1847 ;; Hardware stack levels used: 1
  1848 ;; Hardware stack levels required when called: 1
  1849 ;; This function calls:
  1850 ;;		Nothing
  1851 ;; This function is called by:
  1852 ;;		_watch_dog_incrementing_timer
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856                           
  1857                           ;psect for function _set_watchdog_timer_256ms
  1858  03EF                     _set_watchdog_timer_256ms:
  1859                           
  1860                           ;incstack = 0
  1861                           ; Regs used in _set_watchdog_timer_256ms: [wreg+status,2+status,0]
  1862  03EF                     l1250:
  1863                           
  1864                           ;main.c: 490:     WDTCONbits.WDTPS = 0b01000;
  1865  03EF  0021               	movlb	1	; select bank1
  1866  03F0  0817               	movf	23,w	;volatile
  1867  03F1  39C1               	andlw	-63
  1868  03F2  3810               	iorlw	16
  1869  03F3  0097               	movwf	23	;volatile
  1870  03F4                     __ccov105_end_blk0:
  1871  03F4                     __ccov106_start_blk1:
  1872  03F4                     l166:
  1873  03F4  1471               	bsf	__ccovbit1_13/(0+8),__ccovbit1_13& (0+7)	;volatile
  1874  03F5  0008               	return
  1875  03F6                     __end_of_set_watchdog_timer_256ms:
  1876  03F6                     
  1877                           	psect	text5
  1878  03F6                     __ptext5:	
  1879 ;; *************** function _set_watchdog_timer_1s *****************
  1880 ;; Defined at:
  1881 ;;		line 492 in file "main.c"
  1882 ;; Parameters:    Size  Location     Type
  1883 ;;		None
  1884 ;; Auto vars:     Size  Location     Type
  1885 ;;		None
  1886 ;; Return value:  Size  Location     Type
  1887 ;;                  1    wreg      void 
  1888 ;; Registers used:
  1889 ;;		wreg, status,2, status,0
  1890 ;; Tracked objects:
  1891 ;;		On entry : 0/0
  1892 ;;		On exit  : 0/0
  1893 ;;		Unchanged: 0/0
  1894 ;; Data sizes:     COMMON   BANK0   BANK1
  1895 ;;      Params:         0       0       0
  1896 ;;      Locals:         0       0       0
  1897 ;;      Temps:          0       0       0
  1898 ;;      Totals:         0       0       0
  1899 ;;Total ram usage:        0 bytes
  1900 ;; Hardware stack levels used: 1
  1901 ;; Hardware stack levels required when called: 1
  1902 ;; This function calls:
  1903 ;;		Nothing
  1904 ;; This function is called by:
  1905 ;;		_watch_dog_incrementing_timer
  1906 ;; This function uses a non-reentrant model
  1907 ;;
  1908                           
  1909                           
  1910                           ;psect for function _set_watchdog_timer_1s
  1911  03F6                     _set_watchdog_timer_1s:
  1912                           
  1913                           ;incstack = 0
  1914                           ; Regs used in _set_watchdog_timer_1s: [wreg+status,2+status,0]
  1915  03F6                     l1252:
  1916                           
  1917                           ;main.c: 493:     WDTCONbits.WDTPS = 0b01010;
  1918  03F6  0021               	movlb	1	; select bank1
  1919  03F7  0817               	movf	23,w	;volatile
  1920  03F8  39C1               	andlw	-63
  1921  03F9  3814               	iorlw	20
  1922  03FA  0097               	movwf	23	;volatile
  1923  03FB                     __ccov107_end_blk0:
  1924  03FB                     __ccov108_start_blk1:
  1925  03FB                     l169:
  1926  03FB  17F0               	bsf	__ccovbit1_14/(0+8),__ccovbit1_14& (0+7)	;volatile
  1927  03FC  0008               	return
  1928  03FD                     __end_of_set_watchdog_timer_1s:
  1929  03FD                     
  1930                           	psect	text6
  1931  03D2                     __ptext6:	
  1932 ;; *************** function _timer2_init *****************
  1933 ;; Defined at:
  1934 ;;		line 410 in file "main.c"
  1935 ;; Parameters:    Size  Location     Type
  1936 ;;		None
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;		None
  1939 ;; Return value:  Size  Location     Type
  1940 ;;                  1    wreg      void 
  1941 ;; Registers used:
  1942 ;;		wreg, status,2, status,0
  1943 ;; Tracked objects:
  1944 ;;		On entry : 0/0
  1945 ;;		On exit  : 0/0
  1946 ;;		Unchanged: 0/0
  1947 ;; Data sizes:     COMMON   BANK0   BANK1
  1948 ;;      Params:         0       0       0
  1949 ;;      Locals:         0       0       0
  1950 ;;      Temps:          0       0       0
  1951 ;;      Totals:         0       0       0
  1952 ;;Total ram usage:        0 bytes
  1953 ;; Hardware stack levels used: 1
  1954 ;; Hardware stack levels required when called: 1
  1955 ;; This function calls:
  1956 ;;		Nothing
  1957 ;; This function is called by:
  1958 ;;		_main
  1959 ;; This function uses a non-reentrant model
  1960 ;;
  1961                           
  1962                           
  1963                           ;psect for function _timer2_init
  1964  03D2                     _timer2_init:
  1965                           
  1966                           ;incstack = 0
  1967                           ; Regs used in _timer2_init: [wreg+status,2+status,0]
  1968  03D2                     l1262:
  1969                           
  1970                           ;main.c: 412:     T2CONbits.T2OUTPS = 0b1111;
  1971  03D2  3078               	movlw	120
  1972  03D3  0020               	movlb	0	; select bank0
  1973  03D4  049C               	iorwf	28,f	;volatile
  1974  03D5                     __ccov67_end_blk0:
  1975  03D5                     __ccov68_start_blk1:
  1976  03D5                     l1264:
  1977                           
  1978                           ;main.c: 413:     T2CONbits.TMR2ON = 1;
  1979  03D5  151C               	bsf	28,2	;volatile
  1980                           
  1981                           ;main.c: 415:     T2CONbits.T2CKPS = 0b10;
  1982  03D6  081C               	movf	28,w	;volatile
  1983  03D7  39FC               	andlw	-4
  1984  03D8  3802               	iorlw	2
  1985  03D9  009C               	movwf	28	;volatile
  1986                           
  1987                           ;main.c: 416:     T2CONbits.T2OUTPS = 0b111;
  1988  03DA  081C               	movf	28,w	;volatile
  1989  03DB  3987               	andlw	-121
  1990  03DC  3838               	iorlw	56
  1991  03DD  009C               	movwf	28	;volatile
  1992  03DE                     __ccov68_end_blk1:
  1993  03DE                     __ccov69_start_blk2:
  1994  03DE                     l1266:
  1995                           
  1996                           ;main.c: 417:     T2CONbits.TMR2ON = 1;
  1997  03DE  151C               	bsf	28,2	;volatile
  1998  03DF                     __ccov69_end_blk2:
  1999  03DF                     __ccov70_start_blk3:
  2000  03DF                     l137:
  2001  03DF  14F2               	bsf	__ccovbit3_4/(0+8),__ccovbit3_4& (0+7)	;volatile
  2002  03E0  0008               	return
  2003  03E1                     __end_of_timer2_init:
  2004  03E1                     
  2005                           	psect	text7
  2006  0090                     __ptext7:	
  2007 ;; *************** function _checkState1 *****************
  2008 ;; Defined at:
  2009 ;;		line 41 in file "statemachine.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;		None
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;		None
  2014 ;; Return value:  Size  Location     Type
  2015 ;;                  1    wreg      void 
  2016 ;; Registers used:
  2017 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2018 ;; Tracked objects:
  2019 ;;		On entry : 0/0
  2020 ;;		On exit  : 0/0
  2021 ;;		Unchanged: 0/0
  2022 ;; Data sizes:     COMMON   BANK0   BANK1
  2023 ;;      Params:         0       0       0
  2024 ;;      Locals:         0       0       0
  2025 ;;      Temps:          0       2       0
  2026 ;;      Totals:         0       2       0
  2027 ;;Total ram usage:        2 bytes
  2028 ;; Hardware stack levels used: 1
  2029 ;; Hardware stack levels required when called: 2
  2030 ;; This function calls:
  2031 ;;		___awdiv
  2032 ;;		_disable_external_interrupt
  2033 ;;		_disable_watchdog_timer
  2034 ;;		_enable_external_interrupt
  2035 ;;		_enable_watchdog_timer
  2036 ;;		_getBatteryVoltage
  2037 ;;		_set_watchdog_timer_128ms
  2038 ;; This function is called by:
  2039 ;;		_main
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           
  2043                           
  2044                           ;psect for function _checkState1
  2045  0090                     _checkState1:
  2046                           
  2047                           ;incstack = 0
  2048                           ; Regs used in _checkState1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2049  0090                     l2060:
  2050                           
  2051                           ;statemachine.c: 42:     switch(state_machine) {
  2052  0090  29D1               	goto	l2152
  2053  0091                     __ccov139_end_blk0:
  2054  0091                     __ccov140_start_blk2:
  2055  0091                     l2062:
  2056                           
  2057                           ;statemachine.c: 45:             disable_external_interrupt();
  2058  0091  3184  2415  3180   	fcall	_disable_external_interrupt
  2059                           
  2060                           ;statemachine.c: 46:             disable_watchdog_timer();
  2061  0094  3184  240E  3180   	fcall	_disable_watchdog_timer
  2062  0097                     __ccov140_end_blk2:
  2063  0097                     __ccov141_start_blk3:
  2064  0097                     l2064:
  2065  0097  0020               	movlb	0	; select bank0
  2066  0098  1424               	bsf	__ccovbit3_30/(0+8),__ccovbit3_30& (0+7)	;volatile
  2067                           
  2068                           ;statemachine.c: 47:             state_door = STATE_DOOR_UNKNOWN;
  2069  0099  3002               	movlw	2
  2070  009A  00C4               	movwf	??_checkState1
  2071  009B  0844               	movf	??_checkState1,w
  2072  009C  00BF               	movwf	_state_door
  2073  009D                     __ccov141_end_blk3:
  2074  009D                     __ccov142_start_blk4:
  2075  009D                     l2066:
  2076  009D  0020               	movlb	0	; select bank0
  2077  009E  17A3               	bsf	__ccovbit4_31/(0+8),__ccovbit4_31& (0+7)	;volatile
  2078                           
  2079                           ;statemachine.c: 48:             state_machine = STATE_CHECK_DOOR;
  2080  009F  3002               	movlw	2
  2081  00A0  00C4               	movwf	??_checkState1
  2082  00A1  0844               	movf	??_checkState1,w
  2083  00A2  00BE               	movwf	_state_machine
  2084                           
  2085                           ;statemachine.c: 49:             break;
  2086  00A3  29F7               	goto	l300
  2087  00A4                     __ccov142_end_blk4:
  2088  00A4                     __ccov143_start_blk6:
  2089  00A4                     l2068:
  2090  00A4  1723               	bsf	__ccovbit6_32/(0+8),__ccovbit6_32& (0+7)	;volatile
  2091                           
  2092                           ;statemachine.c: 55:             sleep_128ms_counter = 0;
  2093  00A5  01B0               	clrf	_sleep_128ms_counter	;volatile
  2094  00A6  01B1               	clrf	_sleep_128ms_counter+1	;volatile
  2095                           
  2096                           ;statemachine.c: 56:             sleep_256ms_counter = 0;
  2097  00A7  01AE               	clrf	_sleep_256ms_counter	;volatile
  2098  00A8  01AF               	clrf	_sleep_256ms_counter+1	;volatile
  2099                           
  2100                           ;statemachine.c: 57:             sleep_1s_counter = 0;
  2101  00A9  01AC               	clrf	_sleep_1s_counter	;volatile
  2102  00AA  01AD               	clrf	_sleep_1s_counter+1	;volatile
  2103                           
  2104                           ;statemachine.c: 58:             sleep_4s_counter = 0;
  2105  00AB  01AA               	clrf	_sleep_4s_counter	;volatile
  2106  00AC  01AB               	clrf	_sleep_4s_counter+1	;volatile
  2107  00AD                     __ccov143_end_blk6:
  2108  00AD                     __ccov144_start_blk7:
  2109  00AD                     l2070:
  2110  00AD  16A3               	bsf	__ccovbit7_33/(0+8),__ccovbit7_33& (0+7)	;volatile
  2111                           
  2112                           ;statemachine.c: 61:             prelCounter = 1;
  2113  00AE  3001               	movlw	1
  2114  00AF  00B6               	movwf	_prelCounter	;volatile
  2115  00B0  3000               	movlw	0
  2116  00B1  00B7               	movwf	_prelCounter+1	;volatile
  2117  00B2                     __ccov144_end_blk7:
  2118  00B2                     __ccov145_start_blk8:
  2119  00B2                     l2072:
  2120  00B2  0020               	movlb	0	; select bank0
  2121  00B3  1623               	bsf	__ccovbit8_34/(0+8),__ccovbit8_34& (0+7)	;volatile
  2122                           
  2123                           ;statemachine.c: 62:             state_machine = STATE_DOOR_CHANGED_WAIT_PREL;
  2124  00B4  3004               	movlw	4
  2125  00B5  00C4               	movwf	??_checkState1
  2126  00B6  0844               	movf	??_checkState1,w
  2127  00B7  00BE               	movwf	_state_machine
  2128                           
  2129                           ;statemachine.c: 63:             break;
  2130  00B8  29F7               	goto	l300
  2131  00B9                     __ccov145_end_blk8:
  2132  00B9                     __ccov146_start_blk10:
  2133  00B9                     l2074:
  2134  00B9  15A3               	bsf	__ccovbit10_35/(0+8),__ccovbit10_35& (0+7)	;volatile
  2135                           
  2136                           ;statemachine.c: 69:             if (state_door == PORTAbits.RA2) {
  2137  00BA  0C0C               	rrf	12,w	;volatile
  2138  00BB  0C89               	rrf	9,f
  2139  00BC  3901               	andlw	1
  2140  00BD  063F               	xorwf	_state_door,w
  2141  00BE  1D03               	skipz
  2142  00BF  28C1               	goto	u651
  2143  00C0  28C2               	goto	u650
  2144  00C1                     u651:
  2145  00C1  28C9               	goto	l2078
  2146  00C2                     __ccov146_end_blk10:
  2147  00C2                     u650:
  2148  00C2                     __ccov147_start_blk11:
  2149  00C2                     l2076:
  2150  00C2  0020               	movlb	0	; select bank0
  2151  00C3  1523               	bsf	__ccovbit11_36/(0+8),__ccovbit11_36& (0+7)	;volatile
  2152                           
  2153                           ;statemachine.c: 72:                 state_machine = STATE_GO_SLEEP;
  2154  00C4  3009               	movlw	9
  2155  00C5  00C4               	movwf	??_checkState1
  2156  00C6  0844               	movf	??_checkState1,w
  2157  00C7  00BE               	movwf	_state_machine
  2158                           
  2159                           ;statemachine.c: 73:             }
  2160  00C8  29F7               	goto	l300
  2161  00C9                     __ccov147_end_blk11:
  2162  00C9                     __ccov148_start_blk13:
  2163  00C9                     l2078:
  2164                           
  2165                           ;statemachine.c: 77:                 state_door = PORTAbits.RA2;
  2166  00C9  3000               	movlw	0
  2167  00CA  190C               	btfsc	12,2	;volatile
  2168  00CB  3001               	movlw	1
  2169  00CC  00BF               	movwf	_state_door
  2170  00CD                     __ccov148_end_blk13:
  2171  00CD                     __ccov149_start_blk14:
  2172  00CD                     l2080:
  2173  00CD  14A3               	bsf	__ccovbit14_37/(0+8),__ccovbit14_37& (0+7)	;volatile
  2174                           
  2175                           ;statemachine.c: 78:                 DoorStateBeforePrel = state_door;
  2176  00CE  083F               	movf	_state_door,w
  2177  00CF  00C4               	movwf	??_checkState1
  2178  00D0  0844               	movf	??_checkState1,w
  2179  00D1  00BD               	movwf	_DoorStateBeforePrel
  2180  00D2  28AD               	goto	l2070
  2181  00D3                     __ccov149_end_blk14:
  2182  00D3                     __ccov150_start_blk17:
  2183  00D3                     l271:	
  2184                           ;statemachine.c: 81:             }
  2185                           
  2186  00D3  1423               	bsf	__ccovbit17_38/(0+8),__ccovbit17_38& (0+7)	;volatile
  2187                           
  2188                           ;statemachine.c: 82:             break;
  2189  00D4  29F7               	goto	l300
  2190  00D5                     __ccov150_end_blk17:
  2191  00D5                     __ccov151_start_blk19:
  2192  00D5                     l2086:
  2193  00D5  17A2               	bsf	__ccovbit19_39/(0+8),__ccovbit19_39& (0+7)	;volatile
  2194                           
  2195                           ;statemachine.c: 85:             if (prelCounter > 0) {
  2196  00D6  0837               	movf	_prelCounter+1,w	;volatile
  2197  00D7  3A80               	xorlw	128
  2198  00D8  00C4               	movwf	??_checkState1
  2199  00D9  3080               	movlw	128
  2200  00DA  0244               	subwf	??_checkState1,w
  2201  00DB  1D03               	skipz
  2202  00DC  28DF               	goto	u665
  2203  00DD  3001               	movlw	1
  2204  00DE  0236               	subwf	_prelCounter,w	;volatile
  2205  00DF                     u665:
  2206  00DF  1C03               	skipc
  2207  00E0  28E2               	goto	u661
  2208  00E1  28E3               	goto	u660
  2209  00E2                     u661:
  2210  00E2  28E4               	goto	l2090
  2211  00E3                     u660:
  2212  00E3  28B2               	goto	l2072
  2213  00E4                     __ccov151_end_blk19:
  2214  00E4                     __ccov152_start_blk22:
  2215  00E4                     l2090:
  2216  00E4  0020               	movlb	0	; select bank0
  2217  00E5  1722               	bsf	__ccovbit22_40/(0+8),__ccovbit22_40& (0+7)	;volatile
  2218                           
  2219                           ;statemachine.c: 89:                 state_machine = STATE_DOOR_CHECK_AFTER_PREL;
  2220  00E6  3005               	movlw	5
  2221  00E7  00C4               	movwf	??_checkState1
  2222  00E8  0844               	movf	??_checkState1,w
  2223  00E9  00BE               	movwf	_state_machine
  2224  00EA  29F7               	goto	l300
  2225  00EB                     __ccov152_end_blk22:
  2226  00EB                     __ccov153_start_blk25:
  2227  00EB                     l2092:
  2228                           
  2229                           ;statemachine.c: 96:             DoorStateAfterPrel = PORTAbits.RA2;
  2230  00EB  3000               	movlw	0
  2231  00EC  190C               	btfsc	12,2	;volatile
  2232  00ED  3001               	movlw	1
  2233  00EE  00BC               	movwf	_DoorStateAfterPrel
  2234  00EF                     __ccov153_end_blk25:
  2235  00EF                     __ccov154_start_blk26:
  2236  00EF                     l2094:
  2237                           
  2238                           ;statemachine.c: 99:             if (DoorStateAfterPrel == DoorStateBeforePrel) {
  2239  00EF  083C               	movf	_DoorStateAfterPrel,w
  2240  00F0  063D               	xorwf	_DoorStateBeforePrel,w
  2241  00F1  1D03               	skipz
  2242  00F2  28F4               	goto	u671
  2243  00F3  28F5               	goto	u670
  2244  00F4                     u671:
  2245  00F4  2922               	goto	l2106
  2246  00F5                     __ccov154_end_blk26:
  2247  00F5                     u670:
  2248  00F5                     __ccov155_start_blk27:
  2249  00F5                     l2096:
  2250                           
  2251                           ;statemachine.c: 102:                 state_door = DoorStateAfterPrel;
  2252  00F5  083C               	movf	_DoorStateAfterPrel,w
  2253  00F6  00C4               	movwf	??_checkState1
  2254  00F7  0844               	movf	??_checkState1,w
  2255  00F8  00BF               	movwf	_state_door
  2256                           
  2257                           ;statemachine.c: 105:                 switch (state_door) {
  2258  00F9  2904               	goto	l2102
  2259  00FA                     __ccov155_end_blk27:
  2260  00FA                     __ccov156_start_blk28:
  2261  00FA                     l278:	
  2262                           ;statemachine.c: 106:                     case STATE_DOOR_OPEN:
  2263                           
  2264  00FA  16A2               	bsf	__ccovbit28_41/(0+8),__ccovbit28_41& (0+7)	;volatile
  2265                           
  2266                           ;statemachine.c: 107:                         LATAbits.LATA0 = 1;
  2267  00FB  0022               	movlb	2	; select bank2
  2268  00FC  140C               	bsf	12,0	;volatile
  2269                           
  2270                           ;statemachine.c: 108:                         break;
  2271  00FD  2917               	goto	l2104
  2272  00FE                     __ccov156_end_blk28:
  2273  00FE                     __ccov157_start_blk29:
  2274  00FE                     l280:	
  2275                           ;statemachine.c: 109:                     case STATE_DOOR_CLOSED:
  2276                           
  2277  00FE  1622               	bsf	__ccovbit29_42/(0+8),__ccovbit29_42& (0+7)	;volatile
  2278                           
  2279                           ;statemachine.c: 110:                         LATAbits.LATA1 = 1;
  2280  00FF  0022               	movlb	2	; select bank2
  2281  0100  148C               	bsf	12,1	;volatile
  2282                           
  2283                           ;statemachine.c: 111:                         break;
  2284  0101  2917               	goto	l2104
  2285  0102                     __ccov157_end_blk29:
  2286  0102                     __ccov158_start_blk33:
  2287  0102                     l283:
  2288  0102  15A2               	bsf	__ccovbit33_43/(0+8),__ccovbit33_43& (0+7)	;volatile
  2289                           
  2290                           ;statemachine.c: 116:                         break;
  2291  0103  2917               	goto	l2104
  2292  0104                     __ccov158_end_blk33:
  2293  0104                     __ccov159_start_blk36:
  2294  0104                     l2102:
  2295  0104  083F               	movf	_state_door,w
  2296  0105  00C4               	movwf	??_checkState1
  2297  0106  01C5               	clrf	??_checkState1+1
  2298                           
  2299                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2300                           ; Switch size 1, requested type "simple"
  2301                           ; Number of cases is 1, Range of values is 0 to 0
  2302                           ; switch strategies available:
  2303                           ; Name         Instructions Cycles
  2304                           ; simple_byte            4     3 (average)
  2305                           ; direct_byte            8     6 (fixed)
  2306                           ; jumptable            260     6 (fixed)
  2307                           ;	Chosen strategy is simple_byte
  2308  0107  0845               	movf	??_checkState1+1,w
  2309  0108  3A00               	xorlw	0	; case 0
  2310  0109  1903               	skipnz
  2311  010A  290C               	goto	l2438
  2312  010B  2917               	goto	l2104
  2313  010C                     l2438:
  2314                           
  2315                           ; Switch size 1, requested type "simple"
  2316                           ; Number of cases is 3, Range of values is 0 to 2
  2317                           ; switch strategies available:
  2318                           ; Name         Instructions Cycles
  2319                           ; simple_byte           10     6 (average)
  2320                           ; direct_byte           12     6 (fixed)
  2321                           ; jumptable            260     6 (fixed)
  2322                           ;	Chosen strategy is simple_byte
  2323  010C  0844               	movf	??_checkState1,w
  2324  010D  3A00               	xorlw	0	; case 0
  2325  010E  1903               	skipnz
  2326  010F  28FE               	goto	l280
  2327  0110  3A01               	xorlw	1	; case 1
  2328  0111  1903               	skipnz
  2329  0112  28FA               	goto	l278
  2330  0113  3A03               	xorlw	3	; case 2
  2331  0114  1903               	skipnz
  2332  0115  2902               	goto	l283
  2333  0116  2917               	goto	l2104
  2334  0117                     __ccov159_end_blk36:
  2335  0117                     __ccov160_start_blk38:
  2336  0117                     l2104:
  2337  0117  0020               	movlb	0	; select bank0
  2338  0118  1522               	bsf	__ccovbit38_44/(0+8),__ccovbit38_44& (0+7)	;volatile
  2339                           
  2340                           ;statemachine.c: 118:                 ihcPulseTimer = 5;
  2341  0119  3005               	movlw	5
  2342  011A  00B4               	movwf	_ihcPulseTimer	;volatile
  2343  011B  3000               	movlw	0
  2344  011C  00B5               	movwf	_ihcPulseTimer+1	;volatile
  2345                           
  2346                           ;statemachine.c: 119:                 state_machine = STATE_SEND_IHC_PULSE;
  2347  011D  3006               	movlw	6
  2348  011E  00C4               	movwf	??_checkState1
  2349  011F  0844               	movf	??_checkState1,w
  2350  0120  00BE               	movwf	_state_machine
  2351                           
  2352                           ;statemachine.c: 120:             }
  2353  0121  29F7               	goto	l300
  2354  0122                     __ccov160_end_blk38:
  2355  0122                     __ccov161_start_blk40:
  2356  0122                     l2106:
  2357  0122  14A2               	bsf	__ccovbit40_45/(0+8),__ccovbit40_45& (0+7)	;volatile
  2358                           
  2359                           ;statemachine.c: 126:                 sleep_64ms_counter = 0;
  2360  0123  01B2               	clrf	_sleep_64ms_counter	;volatile
  2361  0124  01B3               	clrf	_sleep_64ms_counter+1	;volatile
  2362                           
  2363                           ;statemachine.c: 127:                 sleep_256ms_counter = 0;
  2364  0125  01AE               	clrf	_sleep_256ms_counter	;volatile
  2365  0126  01AF               	clrf	_sleep_256ms_counter+1	;volatile
  2366                           
  2367                           ;statemachine.c: 128:                 sleep_1s_counter = 0;
  2368  0127  01AC               	clrf	_sleep_1s_counter	;volatile
  2369  0128  01AD               	clrf	_sleep_1s_counter+1	;volatile
  2370                           
  2371                           ;statemachine.c: 129:                 sleep_4s_counter = 0;
  2372  0129  01AA               	clrf	_sleep_4s_counter	;volatile
  2373  012A  01AB               	clrf	_sleep_4s_counter+1	;volatile
  2374  012B                     __ccov161_end_blk40:
  2375  012B                     __ccov162_start_blk41:
  2376  012B                     l2108:
  2377  012B  1422               	bsf	__ccovbit41_46/(0+8),__ccovbit41_46& (0+7)	;volatile
  2378                           
  2379                           ;statemachine.c: 132:                 set_watchdog_timer_128ms();
  2380  012C  3183  23FD  3180   	fcall	_set_watchdog_timer_128ms
  2381  012F  28C2               	goto	l2076
  2382  0130                     __ccov162_end_blk41:
  2383  0130                     __ccov163_start_blk45:
  2384  0130                     l2112:
  2385                           
  2386                           ;statemachine.c: 138:             if (ihcPulseTimer > 0)
  2387  0130  0835               	movf	_ihcPulseTimer+1,w	;volatile
  2388  0131  3A80               	xorlw	128
  2389  0132  00C4               	movwf	??_checkState1
  2390  0133  3080               	movlw	128
  2391  0134  0244               	subwf	??_checkState1,w
  2392  0135  1D03               	skipz
  2393  0136  2939               	goto	u685
  2394  0137  3001               	movlw	1
  2395  0138  0234               	subwf	_ihcPulseTimer,w	;volatile
  2396  0139                     u685:
  2397  0139  1C03               	skipc
  2398  013A  293C               	goto	u681
  2399  013B  293D               	goto	u680
  2400  013C                     u681:
  2401  013C  2944               	goto	l2116
  2402  013D                     __ccov163_end_blk45:
  2403  013D                     u680:
  2404  013D                     __ccov164_start_blk46:
  2405  013D                     l2114:
  2406  013D  0020               	movlb	0	; select bank0
  2407  013E  17A1               	bsf	__ccovbit46_47/(0+8),__ccovbit46_47& (0+7)	;volatile
  2408                           
  2409                           ;statemachine.c: 139:                 state_machine = STATE_SEND_IHC_PULSE;
  2410  013F  3006               	movlw	6
  2411  0140  00C4               	movwf	??_checkState1
  2412  0141  0844               	movf	??_checkState1,w
  2413  0142  00BE               	movwf	_state_machine
  2414  0143  29F7               	goto	l300
  2415  0144                     __ccov164_end_blk46:
  2416  0144                     __ccov165_start_blk48:
  2417  0144                     l2116:
  2418  0144  0020               	movlb	0	; select bank0
  2419  0145  1721               	bsf	__ccovbit48_48/(0+8),__ccovbit48_48& (0+7)	;volatile
  2420                           
  2421                           ;statemachine.c: 141:                 state_machine = STATE_STOP_SENDING_IHC_PULSE;
  2422  0146  3007               	movlw	7
  2423  0147  00C4               	movwf	??_checkState1
  2424  0148  0844               	movf	??_checkState1,w
  2425  0149  00BE               	movwf	_state_machine
  2426  014A  29F7               	goto	l300
  2427  014B                     __ccov165_end_blk48:
  2428  014B                     __ccov166_start_blk50:
  2429  014B                     l288:	
  2430                           ;statemachine.c: 144:         case STATE_STOP_SENDING_IHC_PULSE:
  2431                           
  2432                           
  2433                           ;statemachine.c: 146:             LATAbits.LATA0 = !1;
  2434  014B  0022               	movlb	2	; select bank2
  2435  014C  100C               	bcf	12,0	;volatile
  2436                           
  2437                           ;statemachine.c: 147:             LATAbits.LATA1 = !1;
  2438  014D  108C               	bcf	12,1	;volatile
  2439                           
  2440                           ;statemachine.c: 148:             LATAbits.LATA4 = !1;
  2441  014E  120C               	bcf	12,4	;volatile
  2442  014F                     __ccov166_end_blk50:
  2443  014F                     __ccov167_start_blk51:
  2444  014F                     l2118:
  2445  014F  0020               	movlb	0	; select bank0
  2446  0150  16A1               	bsf	__ccovbit51_49/(0+8),__ccovbit51_49& (0+7)	;volatile
  2447                           
  2448                           ;statemachine.c: 151:             sleep_64ms_counter = 0;
  2449  0151  01B2               	clrf	_sleep_64ms_counter	;volatile
  2450  0152  01B3               	clrf	_sleep_64ms_counter+1	;volatile
  2451                           
  2452                           ;statemachine.c: 152:             sleep_128ms_counter = 0;
  2453  0153  01B0               	clrf	_sleep_128ms_counter	;volatile
  2454  0154  01B1               	clrf	_sleep_128ms_counter+1	;volatile
  2455                           
  2456                           ;statemachine.c: 153:             sleep_256ms_counter = 0;
  2457  0155  01AE               	clrf	_sleep_256ms_counter	;volatile
  2458  0156  01AF               	clrf	_sleep_256ms_counter+1	;volatile
  2459                           
  2460                           ;statemachine.c: 154:             sleep_1s_counter = 0;
  2461  0157  01AC               	clrf	_sleep_1s_counter	;volatile
  2462  0158  01AD               	clrf	_sleep_1s_counter+1	;volatile
  2463                           
  2464                           ;statemachine.c: 155:             sleep_4s_counter = 0;
  2465  0159  01AA               	clrf	_sleep_4s_counter	;volatile
  2466  015A  01AB               	clrf	_sleep_4s_counter+1	;volatile
  2467  015B  292B               	goto	l2108
  2468  015C                     __ccov167_end_blk51:
  2469  015C                     __ccov168_start_blk55:
  2470  015C                     l2124:
  2471                           
  2472                           ;statemachine.c: 184:             enable_watchdog_timer();
  2473  015C  3184  240A  3180   	fcall	_enable_watchdog_timer
  2474                           
  2475                           ;statemachine.c: 185:             enable_external_interrupt();
  2476  015F  3184  2412  3180   	fcall	_enable_external_interrupt
  2477  0162  0063               	sleep	;# 
  2478  0163                     __ccov168_end_blk55:
  2479  0163                     __ccov169_start_blk56:
  2480  0163                     l2126:
  2481                           
  2482                           ;statemachine.c: 188:             __nop();
  2483  0163  0000               	nop
  2484                           
  2485                           ;statemachine.c: 190:             disable_watchdog_timer();
  2486  0164  3184  240E  3180   	fcall	_disable_watchdog_timer
  2487  0167                     __ccov169_end_blk56:
  2488  0167                     __ccov170_start_blk62:
  2489  0167                     l2134:
  2490                           
  2491                           ;statemachine.c: 212:             if (sleep_256s_counter >= 337) {
  2492  0167  0020               	movlb	0	; select bank0
  2493  0168  0829               	movf	_sleep_256s_counter+1,w	;volatile
  2494  0169  3A80               	xorlw	128
  2495  016A  00C4               	movwf	??_checkState1
  2496  016B  3081               	movlw	129
  2497  016C  0244               	subwf	??_checkState1,w
  2498  016D  1D03               	skipz
  2499  016E  2971               	goto	u695
  2500  016F  3051               	movlw	81
  2501  0170  0228               	subwf	_sleep_256s_counter,w	;volatile
  2502  0171                     u695:
  2503  0171  1C03               	skipc
  2504  0172  2974               	goto	u691
  2505  0173  2975               	goto	u690
  2506  0174                     u691:
  2507  0174  29CD               	goto	l292
  2508  0175                     __ccov170_end_blk62:
  2509  0175                     u690:
  2510  0175                     __ccov171_start_blk63:
  2511  0175                     l2136:
  2512                           
  2513                           ;statemachine.c: 214:                 BatteryVoltage = getBatteryVoltage();
  2514  0175  3183  239C  3180   	fcall	_getBatteryVoltage
  2515  0178  0876               	movf	?_getBatteryVoltage+1,w
  2516  0179  00FD               	movwf	_BatteryVoltage+1	;volatile
  2517  017A  0875               	movf	?_getBatteryVoltage,w
  2518  017B  00FC               	movwf	_BatteryVoltage	;volatile
  2519                           
  2520                           ;statemachine.c: 218:                 millivolts = (8192 / BatteryVoltage) * 1024;
  2521  017C  087D               	movf	_BatteryVoltage+1,w	;volatile
  2522  017D  00F6               	movwf	___awdiv@divisor+1
  2523  017E  087C               	movf	_BatteryVoltage,w	;volatile
  2524  017F  00F5               	movwf	___awdiv@divisor
  2525  0180  3000               	movlw	0
  2526  0181  00F7               	movwf	___awdiv@dividend
  2527  0182  3020               	movlw	32
  2528  0183  00F8               	movwf	___awdiv@dividend+1
  2529  0184  3183  233C  3180   	fcall	___awdiv
  2530  0187  0875               	movf	?___awdiv,w
  2531  0188  0020               	movlb	0	; select bank0
  2532  0189  00C4               	movwf	??_checkState1
  2533  018A  0876               	movf	?___awdiv+1,w
  2534  018B  00C5               	movwf	??_checkState1+1
  2535  018C  300A               	movlw	10
  2536  018D                     u705:
  2537  018D  35C4               	lslf	??_checkState1,f
  2538  018E  0DC5               	rlf	??_checkState1+1,f
  2539  018F  0B89               	decfsz	9,f
  2540  0190  298D               	goto	u705
  2541  0191  0844               	movf	??_checkState1,w
  2542  0192  00B8               	movwf	_millivolts	;volatile
  2543  0193  0845               	movf	??_checkState1+1,w
  2544  0194  00B9               	movwf	_millivolts+1	;volatile
  2545                           
  2546                           ;statemachine.c: 219:                 millivolts = millivolts /8;
  2547  0195  3008               	movlw	8
  2548  0196  00F5               	movwf	___awdiv@divisor
  2549  0197  3000               	movlw	0
  2550  0198  00F6               	movwf	___awdiv@divisor+1
  2551  0199  0839               	movf	_millivolts+1,w	;volatile
  2552  019A  00F8               	movwf	___awdiv@dividend+1
  2553  019B  0838               	movf	_millivolts,w	;volatile
  2554  019C  00F7               	movwf	___awdiv@dividend
  2555  019D  3183  233C  3180   	fcall	___awdiv
  2556  01A0  0876               	movf	?___awdiv+1,w
  2557  01A1  0020               	movlb	0	; select bank0
  2558  01A2  00B9               	movwf	_millivolts+1	;volatile
  2559  01A3  0875               	movf	?___awdiv,w
  2560  01A4  00B8               	movwf	_millivolts	;volatile
  2561  01A5                     __ccov171_end_blk63:
  2562  01A5                     __ccov172_start_blk64:
  2563  01A5                     l2138:
  2564                           
  2565                           ;statemachine.c: 229:                 if (BatteryVoltage <= 2400) {
  2566  01A5  087D               	movf	_BatteryVoltage+1,w	;volatile
  2567  01A6  3A80               	xorlw	128
  2568  01A7  00C4               	movwf	??_checkState1
  2569  01A8  3089               	movlw	137
  2570  01A9  0244               	subwf	??_checkState1,w
  2571  01AA  1D03               	skipz
  2572  01AB  29AE               	goto	u715
  2573  01AC  3061               	movlw	97
  2574  01AD  027C               	subwf	_BatteryVoltage,w	;volatile
  2575  01AE                     u715:
  2576  01AE  1803               	skipnc
  2577  01AF  29B1               	goto	u711
  2578  01B0  29B2               	goto	u710
  2579  01B1                     u711:
  2580  01B1  29C2               	goto	l293
  2581  01B2                     __ccov172_end_blk64:
  2582  01B2                     u710:
  2583  01B2                     __ccov173_start_blk65:
  2584  01B2                     l2140:
  2585                           
  2586                           ;statemachine.c: 230:                     LATAbits.LATA4 = 1;
  2587  01B2  0022               	movlb	2	; select bank2
  2588  01B3  160C               	bsf	12,4	;volatile
  2589  01B4                     __ccov173_end_blk65:
  2590  01B4                     __ccov174_start_blk66:
  2591  01B4                     l2142:
  2592                           
  2593                           ;statemachine.c: 231:                     _delay((unsigned long)((5*8)*(16000000/4000.0)
      +                          ));
  2594  01B4  30D0               	movlw	208
  2595  01B5  0020               	movlb	0	; select bank0
  2596  01B6  00C4               	movwf	??_checkState1
  2597  01B7  30C9               	movlw	201
  2598  01B8                     u777:
  2599  01B8  0B89               	decfsz	9,f
  2600  01B9  29B8               	goto	u777
  2601  01BA  0BC4               	decfsz	??_checkState1,f
  2602  01BB  29B8               	goto	u777
  2603  01BC  3200               	nop2
  2604  01BD                     __ccov174_end_blk66:
  2605  01BD                     __ccov175_start_blk67:
  2606  01BD                     l2144:
  2607  01BD  0020               	movlb	0	; select bank0
  2608  01BE  1621               	bsf	__ccovbit67_50/(0+8),__ccovbit67_50& (0+7)	;volatile
  2609                           
  2610                           ;statemachine.c: 232:                     LATAbits.LATA4 = !1;
  2611  01BF  0022               	movlb	2	; select bank2
  2612  01C0  120C               	bcf	12,4	;volatile
  2613                           
  2614                           ;statemachine.c: 233:                 }
  2615  01C1  29C6               	goto	l2146
  2616  01C2                     __ccov175_end_blk67:
  2617  01C2                     __ccov176_start_blk68:
  2618  01C2                     l293:	
  2619                           ;statemachine.c: 234:                 else
  2620                           
  2621  01C2  0020               	movlb	0	; select bank0
  2622  01C3  15A1               	bsf	__ccovbit68_51/(0+8),__ccovbit68_51& (0+7)	;volatile
  2623                           
  2624                           ;statemachine.c: 235:                     LATAbits.LATA4 = !1;
  2625  01C4  0022               	movlb	2	; select bank2
  2626  01C5  120C               	bcf	12,4	;volatile
  2627  01C6                     __ccov176_end_blk68:
  2628  01C6                     __ccov177_start_blk70:
  2629  01C6                     l2146:
  2630  01C6  0020               	movlb	0	; select bank0
  2631  01C7  1521               	bsf	__ccovbit70_52/(0+8),__ccovbit70_52& (0+7)	;volatile
  2632                           
  2633                           ;statemachine.c: 236:                 sleep_256s_counter = 1;
  2634  01C8  3001               	movlw	1
  2635  01C9  00A8               	movwf	_sleep_256s_counter	;volatile
  2636  01CA  3000               	movlw	0
  2637  01CB  00A9               	movwf	_sleep_256s_counter+1	;volatile
  2638                           
  2639                           ;statemachine.c: 237:             }
  2640  01CC  289D               	goto	l2066
  2641  01CD                     __ccov177_end_blk70:
  2642  01CD                     __ccov178_start_blk71:
  2643  01CD                     l292:	
  2644                           ;statemachine.c: 238:             else {
  2645                           
  2646  01CD  0020               	movlb	0	; select bank0
  2647  01CE  14A1               	bsf	__ccovbit71_53/(0+8),__ccovbit71_53& (0+7)	;volatile
  2648                           
  2649                           ;statemachine.c: 241:                 __nop();
  2650  01CF  0000               	nop
  2651  01D0  289D               	goto	l2066
  2652  01D1                     __ccov178_end_blk71:
  2653  01D1                     __ccov179_start_blk80:
  2654  01D1                     l2152:
  2655  01D1  0020               	movlb	0	; select bank0
  2656  01D2  083E               	movf	_state_machine,w
  2657  01D3  00C4               	movwf	??_checkState1
  2658  01D4  01C5               	clrf	??_checkState1+1
  2659                           
  2660                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2661                           ; Switch size 1, requested type "simple"
  2662                           ; Number of cases is 1, Range of values is 0 to 0
  2663                           ; switch strategies available:
  2664                           ; Name         Instructions Cycles
  2665                           ; simple_byte            4     3 (average)
  2666                           ; direct_byte            8     6 (fixed)
  2667                           ; jumptable            260     6 (fixed)
  2668                           ;	Chosen strategy is simple_byte
  2669  01D5  0845               	movf	??_checkState1+1,w
  2670  01D6  3A00               	xorlw	0	; case 0
  2671  01D7  1903               	skipnz
  2672  01D8  29DA               	goto	l2440
  2673  01D9  29F7               	goto	l300
  2674  01DA                     l2440:
  2675                           
  2676                           ; Switch size 1, requested type "simple"
  2677                           ; Number of cases is 9, Range of values is 0 to 9
  2678                           ; switch strategies available:
  2679                           ; Name         Instructions Cycles
  2680                           ; direct_byte           26     6 (fixed)
  2681                           ; simple_byte           28    15 (average)
  2682                           ; jumptable            260     6 (fixed)
  2683                           ;	Chosen strategy is simple_byte
  2684  01DA  0844               	movf	??_checkState1,w
  2685  01DB  3A00               	xorlw	0	; case 0
  2686  01DC  1903               	skipnz
  2687  01DD  2891               	goto	l2062
  2688  01DE  3A01               	xorlw	1	; case 1
  2689  01DF  1903               	skipnz
  2690  01E0  28A4               	goto	l2068
  2691  01E1  3A03               	xorlw	3	; case 2
  2692  01E2  1903               	skipnz
  2693  01E3  28B9               	goto	l2074
  2694  01E4  3A01               	xorlw	1	; case 3
  2695  01E5  1903               	skipnz
  2696  01E6  28D3               	goto	l271
  2697  01E7  3A07               	xorlw	7	; case 4
  2698  01E8  1903               	skipnz
  2699  01E9  28D5               	goto	l2086
  2700  01EA  3A01               	xorlw	1	; case 5
  2701  01EB  1903               	skipnz
  2702  01EC  28EB               	goto	l2092
  2703  01ED  3A03               	xorlw	3	; case 6
  2704  01EE  1903               	skipnz
  2705  01EF  2930               	goto	l2112
  2706  01F0  3A01               	xorlw	1	; case 7
  2707  01F1  1903               	skipnz
  2708  01F2  294B               	goto	l288
  2709  01F3  3A0E               	xorlw	14	; case 9
  2710  01F4  1903               	skipnz
  2711  01F5  295C               	goto	l2124
  2712  01F6  29F7               	goto	l300
  2713  01F7                     __ccov179_end_blk80:
  2714  01F7                     __ccov180_start_blk82:
  2715  01F7                     l300:
  2716  01F7  1421               	bsf	__ccovbit82_54/(0+8),__ccovbit82_54& (0+7)	;volatile
  2717  01F8  0008               	return
  2718  01F9                     __end_of_checkState1:
  2719  01F9                     
  2720                           	psect	text8
  2721  03FD                     __ptext8:	
  2722 ;; *************** function _set_watchdog_timer_128ms *****************
  2723 ;; Defined at:
  2724 ;;		line 486 in file "main.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;		None
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;		None
  2729 ;; Return value:  Size  Location     Type
  2730 ;;                  1    wreg      void 
  2731 ;; Registers used:
  2732 ;;		wreg, status,2, status,0
  2733 ;; Tracked objects:
  2734 ;;		On entry : 0/0
  2735 ;;		On exit  : 0/0
  2736 ;;		Unchanged: 0/0
  2737 ;; Data sizes:     COMMON   BANK0   BANK1
  2738 ;;      Params:         0       0       0
  2739 ;;      Locals:         0       0       0
  2740 ;;      Temps:          0       0       0
  2741 ;;      Totals:         0       0       0
  2742 ;;Total ram usage:        0 bytes
  2743 ;; Hardware stack levels used: 1
  2744 ;; Hardware stack levels required when called: 1
  2745 ;; This function calls:
  2746 ;;		Nothing
  2747 ;; This function is called by:
  2748 ;;		_main
  2749 ;;		_watch_dog_incrementing_timer
  2750 ;;		_checkState1
  2751 ;; This function uses a non-reentrant model
  2752 ;;
  2753                           
  2754                           
  2755                           ;psect for function _set_watchdog_timer_128ms
  2756  03FD                     _set_watchdog_timer_128ms:
  2757                           
  2758                           ;incstack = 0
  2759                           ; Regs used in _set_watchdog_timer_128ms: [wreg+status,2+status,0]
  2760  03FD                     l1248:
  2761                           
  2762                           ;main.c: 487:     WDTCONbits.WDTPS = 0b00111;
  2763  03FD  0021               	movlb	1	; select bank1
  2764  03FE  0817               	movf	23,w	;volatile
  2765  03FF  39C1               	andlw	-63
  2766  0400  380E               	iorlw	14
  2767  0401  0097               	movwf	23	;volatile
  2768  0402                     __ccov103_end_blk0:
  2769  0402                     __ccov104_start_blk1:
  2770  0402                     l163:
  2771  0402  14F1               	bsf	__ccovbit1_12/(0+8),__ccovbit1_12& (0+7)	;volatile
  2772  0403  0008               	return
  2773  0404                     __end_of_set_watchdog_timer_128ms:
  2774  0404                     
  2775                           	psect	text9
  2776  039C                     __ptext9:	
  2777 ;; *************** function _getBatteryVoltage *****************
  2778 ;; Defined at:
  2779 ;;		line 420 in file "main.c"
  2780 ;; Parameters:    Size  Location     Type
  2781 ;;		None
  2782 ;; Auto vars:     Size  Location     Type
  2783 ;;  adc_val         2    7[COMMON] int 
  2784 ;; Return value:  Size  Location     Type
  2785 ;;                  2    2[COMMON] int 
  2786 ;; Registers used:
  2787 ;;		wreg, status,2, status,0
  2788 ;; Tracked objects:
  2789 ;;		On entry : 0/0
  2790 ;;		On exit  : 0/0
  2791 ;;		Unchanged: 0/0
  2792 ;; Data sizes:     COMMON   BANK0   BANK1
  2793 ;;      Params:         2       0       0
  2794 ;;      Locals:         2       0       0
  2795 ;;      Temps:          3       0       0
  2796 ;;      Totals:         7       0       0
  2797 ;;Total ram usage:        7 bytes
  2798 ;; Hardware stack levels used: 1
  2799 ;; Hardware stack levels required when called: 1
  2800 ;; This function calls:
  2801 ;;		Nothing
  2802 ;; This function is called by:
  2803 ;;		_main
  2804 ;;		_checkState1
  2805 ;; This function uses a non-reentrant model
  2806 ;;
  2807                           
  2808                           
  2809                           ;psect for function _getBatteryVoltage
  2810  039C                     _getBatteryVoltage:
  2811                           
  2812                           ;incstack = 0
  2813                           ; Regs used in _getBatteryVoltage: [wreg+status,2+status,0]
  2814  039C                     l1222:
  2815                           
  2816                           ;main.c: 429:     FVRCONbits.ADFVR = 0b01;
  2817  039C  0022               	movlb	2	; select bank2
  2818  039D  0817               	movf	23,w	;volatile
  2819  039E  39FC               	andlw	-4
  2820  039F  3801               	iorlw	1
  2821  03A0  0097               	movwf	23	;volatile
  2822  03A1                     __ccov71_end_blk0:
  2823  03A1                     __ccov72_start_blk1:
  2824  03A1                     l1224:
  2825                           
  2826                           ;main.c: 431:     FVRCONbits.FVREN = 1;
  2827  03A1  1797               	bsf	23,7	;volatile
  2828  03A2                     __ccov72_end_blk1:
  2829  03A2                     __ccov73_start_blk3:
  2830  03A2                     l140:	
  2831                           ;main.c: 432:     while(!FVRCONbits.FVRRDY);
  2832                           
  2833  03A2  1F17               	btfss	23,6	;volatile
  2834  03A3  2BA5               	goto	u131
  2835  03A4  2BA6               	goto	u130
  2836  03A5                     u131:
  2837  03A5  2BA2               	goto	l140
  2838  03A6                     __ccov73_end_blk3:
  2839  03A6                     u130:
  2840  03A6                     __ccov74_start_blk4:
  2841  03A6                     l142:
  2842                           
  2843                           ;main.c: 434:     ADCON1bits.ADFM = 1;
  2844  03A6  0021               	movlb	1	; select bank1
  2845  03A7  179E               	bsf	30,7	;volatile
  2846  03A8                     __ccov74_end_blk4:
  2847  03A8                     __ccov75_start_blk5:
  2848  03A8                     l1226:
  2849                           
  2850                           ;main.c: 435:     ADCON0bits.CHS = 0b11111;
  2851  03A8  307C               	movlw	124
  2852  03A9  049D               	iorwf	29,f	;volatile
  2853  03AA                     __ccov75_end_blk5:
  2854  03AA                     __ccov76_start_blk6:
  2855  03AA                     l1228:
  2856                           
  2857                           ;main.c: 436:     _delay((unsigned long)((200)*(16000000/4000000.0)));
  2858  03AA  30A0               	movlw	160
  2859  03AB                     u787:
  2860  03AB  3200               	nop2
  2861  03AC  0B89               	decfsz	9,f
  2862  03AD  2BAB               	goto	u787
  2863  03AE                     __ccov76_end_blk6:
  2864  03AE                     __ccov77_start_blk7:
  2865  03AE                     l1230:
  2866                           
  2867                           ;main.c: 438:     ADCON1bits.ADPREF = 0b00;
  2868  03AE  30FC               	movlw	-4
  2869  03AF  0021               	movlb	1	; select bank1
  2870  03B0  059E               	andwf	30,f	;volatile
  2871  03B1                     __ccov77_end_blk7:
  2872  03B1                     __ccov78_start_blk8:
  2873  03B1                     l1232:
  2874                           
  2875                           ;main.c: 440:     ADCON0bits.ADON = 1;
  2876  03B1  141D               	bsf	29,0	;volatile
  2877  03B2                     __ccov78_end_blk8:
  2878  03B2                     l1234:
  2879  03B2                     __ccov80_start_blk10:
  2880  03B2                     l1236:
  2881                           
  2882                           ;main.c: 445:     ADCON0bits.GO = 1;
  2883  03B2  149D               	bsf	29,1	;volatile
  2884  03B3                     __ccov80_end_blk10:
  2885  03B3                     __ccov81_start_blk12:
  2886  03B3                     l143:	
  2887                           ;main.c: 446:     while (!ADCON0bits.GO_nDONE);
  2888                           
  2889  03B3  1C9D               	btfss	29,1	;volatile
  2890  03B4  2BB6               	goto	u141
  2891  03B5  2BB7               	goto	u140
  2892  03B6                     u141:
  2893  03B6  2BB3               	goto	l143
  2894  03B7                     __ccov81_end_blk12:
  2895  03B7                     u140:
  2896  03B7                     __ccov82_start_blk14:
  2897  03B7                     l1238:
  2898                           
  2899                           ;main.c: 448:     adc_val = (ADRESH << 8);
  2900  03B7  081C               	movf	28,w	;volatile
  2901  03B8  00F7               	movwf	??_getBatteryVoltage
  2902  03B9  01F8               	clrf	??_getBatteryVoltage+1
  2903  03BA  0877               	movf	??_getBatteryVoltage,w
  2904  03BB  00F8               	movwf	??_getBatteryVoltage+1
  2905  03BC  01F7               	clrf	??_getBatteryVoltage
  2906  03BD  0877               	movf	??_getBatteryVoltage,w
  2907  03BE  00FA               	movwf	getBatteryVoltage@adc_val
  2908  03BF  0878               	movf	??_getBatteryVoltage+1,w
  2909  03C0  00FB               	movwf	getBatteryVoltage@adc_val+1
  2910                           
  2911                           ;main.c: 449:     adc_val |= ADRESL;
  2912  03C1  081B               	movf	27,w	;volatile
  2913  03C2  00F7               	movwf	??_getBatteryVoltage
  2914  03C3  01F8               	clrf	??_getBatteryVoltage+1
  2915  03C4  0877               	movf	??_getBatteryVoltage,w
  2916  03C5  04FA               	iorwf	getBatteryVoltage@adc_val,f
  2917  03C6  0878               	movf	??_getBatteryVoltage+1,w
  2918  03C7  04FB               	iorwf	getBatteryVoltage@adc_val+1,f
  2919  03C8                     __ccov82_end_blk14:
  2920  03C8                     __ccov83_start_blk15:
  2921  03C8                     l1240:
  2922                           
  2923                           ;main.c: 451:     FVRCONbits.FVREN = 0;
  2924  03C8  0022               	movlb	2	; select bank2
  2925  03C9  1397               	bcf	23,7	;volatile
  2926  03CA                     __ccov83_end_blk15:
  2927  03CA                     __ccov84_start_blk16:
  2928  03CA                     l1242:
  2929                           
  2930                           ;main.c: 452:     ADCON0bits.ADON = 0;
  2931  03CA  0021               	movlb	1	; select bank1
  2932  03CB  101D               	bcf	29,0	;volatile
  2933                           
  2934                           ;main.c: 453:     return adc_val;
  2935  03CC  087B               	movf	getBatteryVoltage@adc_val+1,w
  2936  03CD  00F6               	movwf	?_getBatteryVoltage+1
  2937  03CE  087A               	movf	getBatteryVoltage@adc_val,w
  2938  03CF  00F5               	movwf	?_getBatteryVoltage
  2939  03D0                     __ccov84_end_blk16:
  2940  03D0                     __ccov85_start_blk18:
  2941  03D0                     l146:
  2942  03D0  1472               	bsf	__ccovbit18_5/(0+8),__ccovbit18_5& (0+7)	;volatile
  2943  03D1  0008               	return
  2944  03D2                     __end_of_getBatteryVoltage:
  2945  03D2                     
  2946                           	psect	text10
  2947  040A                     __ptext10:	
  2948 ;; *************** function _enable_watchdog_timer *****************
  2949 ;; Defined at:
  2950 ;;		line 502 in file "main.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;		None
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;		None
  2955 ;; Return value:  Size  Location     Type
  2956 ;;                  1    wreg      void 
  2957 ;; Registers used:
  2958 ;;		None
  2959 ;; Tracked objects:
  2960 ;;		On entry : 0/0
  2961 ;;		On exit  : 0/0
  2962 ;;		Unchanged: 0/0
  2963 ;; Data sizes:     COMMON   BANK0   BANK1
  2964 ;;      Params:         0       0       0
  2965 ;;      Locals:         0       0       0
  2966 ;;      Temps:          0       0       0
  2967 ;;      Totals:         0       0       0
  2968 ;;Total ram usage:        0 bytes
  2969 ;; Hardware stack levels used: 1
  2970 ;; Hardware stack levels required when called: 1
  2971 ;; This function calls:
  2972 ;;		Nothing
  2973 ;; This function is called by:
  2974 ;;		_checkState1
  2975 ;; This function uses a non-reentrant model
  2976 ;;
  2977                           
  2978                           
  2979                           ;psect for function _enable_watchdog_timer
  2980  040A                     _enable_watchdog_timer:
  2981                           
  2982                           ;incstack = 0
  2983                           ; Regs used in _enable_watchdog_timer: []
  2984  040A                     l1258:
  2985                           
  2986                           ;main.c: 503:     WDTCONbits.SWDTEN = 1;
  2987  040A  0021               	movlb	1	; select bank1
  2988  040B  1417               	bsf	23,0	;volatile
  2989  040C                     __ccov113_end_blk0:
  2990  040C                     __ccov114_start_blk1:
  2991  040C                     l178:
  2992  040C  1670               	bsf	__ccovbit1_17/(0+8),__ccovbit1_17& (0+7)	;volatile
  2993  040D  0008               	return
  2994  040E                     __end_of_enable_watchdog_timer:
  2995  040E                     
  2996                           	psect	text11
  2997  0412                     __ptext11:	
  2998 ;; *************** function _enable_external_interrupt *****************
  2999 ;; Defined at:
  3000 ;;		line 508 in file "main.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;		None
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;		None
  3005 ;; Return value:  Size  Location     Type
  3006 ;;                  1    wreg      void 
  3007 ;; Registers used:
  3008 ;;		None
  3009 ;; Tracked objects:
  3010 ;;		On entry : 0/0
  3011 ;;		On exit  : 0/0
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMMON   BANK0   BANK1
  3014 ;;      Params:         0       0       0
  3015 ;;      Locals:         0       0       0
  3016 ;;      Temps:          0       0       0
  3017 ;;      Totals:         0       0       0
  3018 ;;Total ram usage:        0 bytes
  3019 ;; Hardware stack levels used: 1
  3020 ;; Hardware stack levels required when called: 1
  3021 ;; This function calls:
  3022 ;;		Nothing
  3023 ;; This function is called by:
  3024 ;;		_main
  3025 ;;		_checkState1
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028                           
  3029                           
  3030                           ;psect for function _enable_external_interrupt
  3031  0412                     _enable_external_interrupt:
  3032                           
  3033                           ;incstack = 0
  3034                           ; Regs used in _enable_external_interrupt: []
  3035  0412                     l1246:
  3036                           
  3037                           ;main.c: 509:     INTCONbits.INTE = 1;
  3038  0412  160B               	bsf	11,4	;volatile
  3039  0413                     __ccov117_end_blk0:
  3040  0413                     __ccov118_start_blk1:
  3041  0413                     l184:
  3042  0413  1570               	bsf	__ccovbit1_19/(0+8),__ccovbit1_19& (0+7)	;volatile
  3043  0414  0008               	return
  3044  0415                     __end_of_enable_external_interrupt:
  3045  0415                     
  3046                           	psect	text12
  3047  040E                     __ptext12:	
  3048 ;; *************** function _disable_watchdog_timer *****************
  3049 ;; Defined at:
  3050 ;;		line 505 in file "main.c"
  3051 ;; Parameters:    Size  Location     Type
  3052 ;;		None
  3053 ;; Auto vars:     Size  Location     Type
  3054 ;;		None
  3055 ;; Return value:  Size  Location     Type
  3056 ;;                  1    wreg      void 
  3057 ;; Registers used:
  3058 ;;		None
  3059 ;; Tracked objects:
  3060 ;;		On entry : 0/0
  3061 ;;		On exit  : 0/0
  3062 ;;		Unchanged: 0/0
  3063 ;; Data sizes:     COMMON   BANK0   BANK1
  3064 ;;      Params:         0       0       0
  3065 ;;      Locals:         0       0       0
  3066 ;;      Temps:          0       0       0
  3067 ;;      Totals:         0       0       0
  3068 ;;Total ram usage:        0 bytes
  3069 ;; Hardware stack levels used: 1
  3070 ;; Hardware stack levels required when called: 1
  3071 ;; This function calls:
  3072 ;;		Nothing
  3073 ;; This function is called by:
  3074 ;;		_main
  3075 ;;		_checkState1
  3076 ;; This function uses a non-reentrant model
  3077 ;;
  3078                           
  3079                           
  3080                           ;psect for function _disable_watchdog_timer
  3081  040E                     _disable_watchdog_timer:
  3082                           
  3083                           ;incstack = 0
  3084                           ; Regs used in _disable_watchdog_timer: []
  3085  040E                     l1220:
  3086                           
  3087                           ;main.c: 506:     WDTCONbits.SWDTEN = 0;
  3088  040E  0021               	movlb	1	; select bank1
  3089  040F  1017               	bcf	23,0	;volatile
  3090  0410                     __ccov115_end_blk0:
  3091  0410                     __ccov116_start_blk1:
  3092  0410                     l181:
  3093  0410  15F0               	bsf	__ccovbit1_18/(0+8),__ccovbit1_18& (0+7)	;volatile
  3094  0411  0008               	return
  3095  0412                     __end_of_disable_watchdog_timer:
  3096  0412                     
  3097                           	psect	text13
  3098  0415                     __ptext13:	
  3099 ;; *************** function _disable_external_interrupt *****************
  3100 ;; Defined at:
  3101 ;;		line 511 in file "main.c"
  3102 ;; Parameters:    Size  Location     Type
  3103 ;;		None
  3104 ;; Auto vars:     Size  Location     Type
  3105 ;;		None
  3106 ;; Return value:  Size  Location     Type
  3107 ;;                  1    wreg      void 
  3108 ;; Registers used:
  3109 ;;		None
  3110 ;; Tracked objects:
  3111 ;;		On entry : 0/0
  3112 ;;		On exit  : 0/0
  3113 ;;		Unchanged: 0/0
  3114 ;; Data sizes:     COMMON   BANK0   BANK1
  3115 ;;      Params:         0       0       0
  3116 ;;      Locals:         0       0       0
  3117 ;;      Temps:          0       0       0
  3118 ;;      Totals:         0       0       0
  3119 ;;Total ram usage:        0 bytes
  3120 ;; Hardware stack levels used: 1
  3121 ;; Hardware stack levels required when called: 1
  3122 ;; This function calls:
  3123 ;;		Nothing
  3124 ;; This function is called by:
  3125 ;;		_checkState1
  3126 ;; This function uses a non-reentrant model
  3127 ;;
  3128                           
  3129                           
  3130                           ;psect for function _disable_external_interrupt
  3131  0415                     _disable_external_interrupt:
  3132                           
  3133                           ;incstack = 0
  3134                           ; Regs used in _disable_external_interrupt: []
  3135  0415                     l1260:
  3136                           
  3137                           ;main.c: 512:     INTCONbits.INTE = 0;
  3138  0415  120B               	bcf	11,4	;volatile
  3139  0416                     __ccov119_end_blk0:
  3140  0416                     __ccov120_start_blk1:
  3141  0416                     l187:
  3142  0416  14F0               	bsf	__ccovbit1_20/(0+8),__ccovbit1_20& (0+7)	;volatile
  3143  0417  0008               	return
  3144  0418                     __end_of_disable_external_interrupt:
  3145  0418                     
  3146                           	psect	text14
  3147  033C                     __ptext14:	
  3148 ;; *************** function ___awdiv *****************
  3149 ;; Defined at:
  3150 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  3151 ;; Parameters:    Size  Location     Type
  3152 ;;  divisor         2    2[COMMON] int 
  3153 ;;  dividend        2    4[COMMON] int 
  3154 ;; Auto vars:     Size  Location     Type
  3155 ;;  quotient        2    2[BANK0 ] int 
  3156 ;;  sign            1    1[BANK0 ] unsigned char 
  3157 ;;  counter         1    0[BANK0 ] unsigned char 
  3158 ;; Return value:  Size  Location     Type
  3159 ;;                  2    2[COMMON] int 
  3160 ;; Registers used:
  3161 ;;		wreg, status,2, status,0
  3162 ;; Tracked objects:
  3163 ;;		On entry : 0/0
  3164 ;;		On exit  : 0/0
  3165 ;;		Unchanged: 0/0
  3166 ;; Data sizes:     COMMON   BANK0   BANK1
  3167 ;;      Params:         4       0       0
  3168 ;;      Locals:         0       4       0
  3169 ;;      Temps:          1       0       0
  3170 ;;      Totals:         5       4       0
  3171 ;;Total ram usage:        9 bytes
  3172 ;; Hardware stack levels used: 1
  3173 ;; Hardware stack levels required when called: 1
  3174 ;; This function calls:
  3175 ;;		Nothing
  3176 ;; This function is called by:
  3177 ;;		_main
  3178 ;;		_checkState1
  3179 ;; This function uses a non-reentrant model
  3180 ;;
  3181                           
  3182                           
  3183                           ;psect for function ___awdiv
  3184  033C                     ___awdiv:
  3185  033C                     l2016:	
  3186                           ;incstack = 0
  3187                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3188                           
  3189  033C  0020               	movlb	0	; select bank0
  3190  033D  01C1               	clrf	___awdiv@sign
  3191  033E                     l2018:
  3192  033E  1FF6               	btfss	___awdiv@divisor+1,7
  3193  033F  2B41               	goto	u551
  3194  0340  2B42               	goto	u550
  3195  0341                     u551:
  3196  0341  2B49               	goto	l2024
  3197  0342                     u550:
  3198  0342                     l2020:
  3199  0342  09F5               	comf	___awdiv@divisor,f
  3200  0343  09F6               	comf	___awdiv@divisor+1,f
  3201  0344  0AF5               	incf	___awdiv@divisor,f
  3202  0345  1903               	skipnz
  3203  0346  0AF6               	incf	___awdiv@divisor+1,f
  3204  0347                     l2022:
  3205  0347  01C1               	clrf	___awdiv@sign
  3206  0348  0AC1               	incf	___awdiv@sign,f
  3207  0349                     l2024:
  3208  0349  1FF8               	btfss	___awdiv@dividend+1,7
  3209  034A  2B4C               	goto	u561
  3210  034B  2B4D               	goto	u560
  3211  034C                     u561:
  3212  034C  2B56               	goto	l2030
  3213  034D                     u560:
  3214  034D                     l2026:
  3215  034D  09F7               	comf	___awdiv@dividend,f
  3216  034E  09F8               	comf	___awdiv@dividend+1,f
  3217  034F  0AF7               	incf	___awdiv@dividend,f
  3218  0350  1903               	skipnz
  3219  0351  0AF8               	incf	___awdiv@dividend+1,f
  3220  0352                     l2028:
  3221  0352  3001               	movlw	1
  3222  0353  00F9               	movwf	??___awdiv
  3223  0354  0879               	movf	??___awdiv,w
  3224  0355  06C1               	xorwf	___awdiv@sign,f
  3225  0356                     l2030:
  3226  0356  01C2               	clrf	___awdiv@quotient
  3227  0357  01C3               	clrf	___awdiv@quotient+1
  3228  0358                     l2032:
  3229  0358  0875               	movf	___awdiv@divisor,w
  3230  0359  0476               	iorwf	___awdiv@divisor+1,w
  3231  035A  1903               	btfsc	3,2
  3232  035B  2B5D               	goto	u571
  3233  035C  2B5E               	goto	u570
  3234  035D                     u571:
  3235  035D  2B8D               	goto	l2052
  3236  035E                     u570:
  3237  035E                     l2034:
  3238  035E  01C0               	clrf	___awdiv@counter
  3239  035F  0AC0               	incf	___awdiv@counter,f
  3240  0360  2B6A               	goto	l2040
  3241  0361                     l2036:
  3242  0361  3001               	movlw	1
  3243  0362                     u585:
  3244  0362  35F5               	lslf	___awdiv@divisor,f
  3245  0363  0DF6               	rlf	___awdiv@divisor+1,f
  3246  0364  0B89               	decfsz	9,f
  3247  0365  2B62               	goto	u585
  3248  0366                     l2038:
  3249  0366  3001               	movlw	1
  3250  0367  00F9               	movwf	??___awdiv
  3251  0368  0879               	movf	??___awdiv,w
  3252  0369  07C0               	addwf	___awdiv@counter,f
  3253  036A                     l2040:
  3254  036A  1FF6               	btfss	___awdiv@divisor+1,7
  3255  036B  2B6D               	goto	u591
  3256  036C  2B6E               	goto	u590
  3257  036D                     u591:
  3258  036D  2B61               	goto	l2036
  3259  036E                     u590:
  3260  036E                     l2042:
  3261  036E  3001               	movlw	1
  3262  036F                     u605:
  3263  036F  35C2               	lslf	___awdiv@quotient,f
  3264  0370  0DC3               	rlf	___awdiv@quotient+1,f
  3265  0371  0B89               	decfsz	9,f
  3266  0372  2B6F               	goto	u605
  3267  0373  0876               	movf	___awdiv@divisor+1,w
  3268  0374  0278               	subwf	___awdiv@dividend+1,w
  3269  0375  1D03               	skipz
  3270  0376  2B79               	goto	u615
  3271  0377  0875               	movf	___awdiv@divisor,w
  3272  0378  0277               	subwf	___awdiv@dividend,w
  3273  0379                     u615:
  3274  0379  1C03               	skipc
  3275  037A  2B7C               	goto	u611
  3276  037B  2B7D               	goto	u610
  3277  037C                     u611:
  3278  037C  2B82               	goto	l2048
  3279  037D                     u610:
  3280  037D                     l2044:
  3281  037D  0875               	movf	___awdiv@divisor,w
  3282  037E  02F7               	subwf	___awdiv@dividend,f
  3283  037F  0876               	movf	___awdiv@divisor+1,w
  3284  0380  3BF8               	subwfb	___awdiv@dividend+1,f
  3285  0381                     l2046:
  3286  0381  1442               	bsf	___awdiv@quotient,0
  3287  0382                     l2048:
  3288  0382  3001               	movlw	1
  3289  0383                     u625:
  3290  0383  36F6               	lsrf	___awdiv@divisor+1,f
  3291  0384  0CF5               	rrf	___awdiv@divisor,f
  3292  0385  0B89               	decfsz	9,f
  3293  0386  2B83               	goto	u625
  3294  0387                     l2050:
  3295  0387  3001               	movlw	1
  3296  0388  02C0               	subwf	___awdiv@counter,f
  3297  0389  1D03               	btfss	3,2
  3298  038A  2B8C               	goto	u631
  3299  038B  2B8D               	goto	u630
  3300  038C                     u631:
  3301  038C  2B6E               	goto	l2042
  3302  038D                     u630:
  3303  038D                     l2052:
  3304  038D  0841               	movf	___awdiv@sign,w
  3305  038E  1903               	btfsc	3,2
  3306  038F  2B91               	goto	u641
  3307  0390  2B92               	goto	u640
  3308  0391                     u641:
  3309  0391  2B97               	goto	l2056
  3310  0392                     u640:
  3311  0392                     l2054:
  3312  0392  09C2               	comf	___awdiv@quotient,f
  3313  0393  09C3               	comf	___awdiv@quotient+1,f
  3314  0394  0AC2               	incf	___awdiv@quotient,f
  3315  0395  1903               	skipnz
  3316  0396  0AC3               	incf	___awdiv@quotient+1,f
  3317  0397                     l2056:
  3318  0397  0843               	movf	___awdiv@quotient+1,w
  3319  0398  00F6               	movwf	?___awdiv+1
  3320  0399  0842               	movf	___awdiv@quotient,w
  3321  039A  00F5               	movwf	?___awdiv
  3322  039B                     l603:
  3323  039B  0008               	return
  3324  039C                     __end_of___awdiv:
  3325                           
  3326                           	psect	intentry
  3327  0004                     __pintentry:	
  3328 ;; *************** function _my_isr *****************
  3329 ;; Defined at:
  3330 ;;		line 514 in file "main.c"
  3331 ;; Parameters:    Size  Location     Type
  3332 ;;		None
  3333 ;; Auto vars:     Size  Location     Type
  3334 ;;		None
  3335 ;; Return value:  Size  Location     Type
  3336 ;;                  1    wreg      void 
  3337 ;; Registers used:
  3338 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3339 ;; Tracked objects:
  3340 ;;		On entry : 0/0
  3341 ;;		On exit  : 0/0
  3342 ;;		Unchanged: 0/0
  3343 ;; Data sizes:     COMMON   BANK0   BANK1
  3344 ;;      Params:         0       0       0
  3345 ;;      Locals:         0       0       0
  3346 ;;      Temps:          2       0       0
  3347 ;;      Totals:         2       0       0
  3348 ;;Total ram usage:        2 bytes
  3349 ;; Hardware stack levels used: 1
  3350 ;; This function calls:
  3351 ;;		Nothing
  3352 ;; This function is called by:
  3353 ;;		Interrupt level 1
  3354 ;; This function uses a non-reentrant model
  3355 ;;
  3356                           
  3357  0004                     _my_isr:
  3358                           
  3359                           ;incstack = 0
  3360  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3361                           
  3362                           ; Regs used in _my_isr: [wreg-fsr0h+status,2+status,0]
  3363  0005  3180               	pagesel	$
  3364  0006                     i1l1538:
  3365                           
  3366                           ;main.c: 517:     if (INTE && INTF) {
  3367  0006  1E0B               	btfss	11,4	;volatile
  3368  0007  2809               	goto	u29_21
  3369  0008  280A               	goto	u29_20
  3370  0009                     u29_21:
  3371  0009  2838               	goto	i1l192
  3372  000A                     u29_20:
  3373  000A                     __ccov121_end_blk0:
  3374  000A                     __ccov122_start_blk1:
  3375  000A                     i1l1540:
  3376  000A  1470               	bsf	__ccovbit1_21/(0+8),__ccovbit1_21& (0+7)	;volatile
  3377  000B  1C8B               	btfss	11,1	;volatile
  3378  000C  280E               	goto	u30_21
  3379  000D  280F               	goto	u30_20
  3380  000E                     u30_21:
  3381  000E  2838               	goto	i1l192
  3382  000F                     u30_20:
  3383  000F  2822               	goto	i1l1552
  3384  0010                     __ccov122_end_blk1:
  3385  0010                     __ccov123_start_blk3:
  3386  0010                     i1l194:	
  3387                           ;main.c: 521:             case 1:
  3388                           
  3389  0010  1425               	bsf	__ccovbit3_22/(0+8),__ccovbit3_22& (0+7)	;volatile
  3390                           
  3391                           ;main.c: 522:                 state_door = STATE_DOOR_OPEN;
  3392  0011  01BF               	clrf	_state_door
  3393  0012  0ABF               	incf	_state_door,f
  3394                           
  3395                           ;main.c: 523:                 OPTION_REGbits.INTEDG = !1;
  3396  0013  0021               	movlb	1	; select bank1
  3397  0014  1315               	bcf	21,6	;volatile
  3398                           
  3399                           ;main.c: 524:                 NewDoorPolarity = 1;
  3400  0015  1772               	bsf	_NewDoorPolarity/(0+8),_NewDoorPolarity& (0+7)
  3401                           
  3402                           ;main.c: 525:                 DoorStateBeforePrel = 1;
  3403  0016  0020               	movlb	0	; select bank0
  3404  0017  01BD               	clrf	_DoorStateBeforePrel
  3405  0018  0ABD               	incf	_DoorStateBeforePrel,f
  3406                           
  3407                           ;main.c: 526:                 break;
  3408  0019  2835               	goto	i1l195
  3409  001A                     __ccov123_end_blk3:
  3410  001A                     __ccov124_start_blk5:
  3411  001A                     i1l1544:
  3412                           
  3413                           ;main.c: 529:                 state_door = STATE_DOOR_CLOSED;
  3414  001A  01BF               	clrf	_state_door
  3415  001B                     __ccov124_end_blk5:
  3416  001B                     __ccov125_start_blk6:
  3417  001B                     i1l1546:
  3418                           
  3419                           ;main.c: 530:                 OPTION_REGbits.INTEDG = !0;
  3420  001B  0021               	movlb	1	; select bank1
  3421  001C  1715               	bsf	21,6	;volatile
  3422  001D                     __ccov125_end_blk6:
  3423  001D                     __ccov126_start_blk7:
  3424  001D                     i1l1548:
  3425  001D  0020               	movlb	0	; select bank0
  3426  001E  17A4               	bsf	__ccovbit7_23/(0+8),__ccovbit7_23& (0+7)	;volatile
  3427                           
  3428                           ;main.c: 531:                 NewDoorPolarity = 0;
  3429  001F  1372               	bcf	_NewDoorPolarity/(0+8),_NewDoorPolarity& (0+7)
  3430                           
  3431                           ;main.c: 532:                 DoorStateBeforePrel = 0;
  3432  0020  01BD               	clrf	_DoorStateBeforePrel
  3433                           
  3434                           ;main.c: 533:                 break;
  3435  0021  2835               	goto	i1l195
  3436  0022                     __ccov126_end_blk7:
  3437  0022                     __ccov127_start_blk10:
  3438  0022                     i1l1552:
  3439  0022  0020               	movlb	0	; select bank0
  3440  0023  0C0C               	rrf	12,w	;volatile
  3441  0024  0C89               	rrf	9,f
  3442  0025  3901               	andlw	1
  3443  0026  00F3               	movwf	??_my_isr
  3444  0027  01F4               	clrf	??_my_isr+1
  3445                           
  3446                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3447                           ; Switch size 1, requested type "simple"
  3448                           ; Number of cases is 1, Range of values is 0 to 0
  3449                           ; switch strategies available:
  3450                           ; Name         Instructions Cycles
  3451                           ; simple_byte            4     3 (average)
  3452                           ; direct_byte            8     6 (fixed)
  3453                           ; jumptable            260     6 (fixed)
  3454                           ;	Chosen strategy is simple_byte
  3455  0028  0874               	movf	??_my_isr+1,w
  3456  0029  3A00               	xorlw	0	; case 0
  3457  002A  1903               	skipnz
  3458  002B  282D               	goto	i1l2442
  3459  002C  2835               	goto	i1l195
  3460  002D                     i1l2442:
  3461                           
  3462                           ; Switch size 1, requested type "simple"
  3463                           ; Number of cases is 2, Range of values is 0 to 1
  3464                           ; switch strategies available:
  3465                           ; Name         Instructions Cycles
  3466                           ; simple_byte            7     4 (average)
  3467                           ; direct_byte           10     6 (fixed)
  3468                           ; jumptable            260     6 (fixed)
  3469                           ;	Chosen strategy is simple_byte
  3470  002D  0873               	movf	??_my_isr,w
  3471  002E  3A00               	xorlw	0	; case 0
  3472  002F  1903               	skipnz
  3473  0030  281A               	goto	i1l1544
  3474  0031  3A01               	xorlw	1	; case 1
  3475  0032  1903               	skipnz
  3476  0033  2810               	goto	i1l194
  3477  0034  2835               	goto	i1l195
  3478  0035                     __ccov127_end_blk10:
  3479  0035                     __ccov128_start_blk11:
  3480  0035                     i1l195:
  3481  0035  1724               	bsf	__ccovbit11_24/(0+8),__ccovbit11_24& (0+7)	;volatile
  3482                           
  3483                           ;main.c: 535:         NewStateChangeDetected = 1;
  3484  0036  17F2               	bsf	_NewStateChangeDetected/(0+8),_NewStateChangeDetected& (0+7)
  3485                           
  3486                           ;main.c: 536:         INTF = 0;
  3487  0037  108B               	bcf	11,1	;volatile
  3488  0038                     __ccov128_end_blk11:
  3489  0038                     __ccov129_start_blk12:
  3490  0038                     i1l192:	
  3491                           ;main.c: 537:     }
  3492                           
  3493                           
  3494                           ;main.c: 540:     if (PIE1bits.TMR2IE && PIR1bits.TMR2IF) {
  3495  0038  0021               	movlb	1	; select bank1
  3496  0039  1C91               	btfss	17,1	;volatile
  3497  003A  283C               	goto	u31_21
  3498  003B  283D               	goto	u31_20
  3499  003C                     u31_21:
  3500  003C  2872               	goto	i1l200
  3501  003D                     u31_20:
  3502  003D                     __ccov129_end_blk12:
  3503  003D                     __ccov130_start_blk13:
  3504  003D                     i1l1554:
  3505  003D  0020               	movlb	0	; select bank0
  3506  003E  16A4               	bsf	__ccovbit13_25/(0+8),__ccovbit13_25& (0+7)	;volatile
  3507  003F  1C91               	btfss	17,1	;volatile
  3508  0040  2842               	goto	u32_21
  3509  0041  2843               	goto	u32_20
  3510  0042                     u32_21:
  3511  0042  2872               	goto	i1l200
  3512  0043                     u32_20:
  3513  0043                     __ccov130_end_blk13:
  3514  0043                     __ccov131_start_blk14:
  3515  0043                     i1l1556:
  3516                           
  3517                           ;main.c: 541:         if (prelCounter > 0)
  3518  0043  0837               	movf	_prelCounter+1,w	;volatile
  3519  0044  3A80               	xorlw	128
  3520  0045  00F3               	movwf	??_my_isr
  3521  0046  3080               	movlw	128
  3522  0047  0273               	subwf	??_my_isr,w
  3523  0048  1D03               	skipz
  3524  0049  284C               	goto	u33_25
  3525  004A  3001               	movlw	1
  3526  004B  0236               	subwf	_prelCounter,w	;volatile
  3527  004C                     u33_25:
  3528  004C  1C03               	skipc
  3529  004D  284F               	goto	u33_21
  3530  004E  2850               	goto	u33_20
  3531  004F                     u33_21:
  3532  004F  2856               	goto	i1l198
  3533  0050                     u33_20:
  3534  0050                     __ccov131_end_blk14:
  3535  0050                     __ccov132_start_blk15:
  3536  0050                     i1l1558:
  3537  0050  0020               	movlb	0	; select bank0
  3538  0051  1624               	bsf	__ccovbit15_26/(0+8),__ccovbit15_26& (0+7)	;volatile
  3539                           
  3540                           ;main.c: 542:             prelCounter--;
  3541  0052  30FF               	movlw	255
  3542  0053  07B6               	addwf	_prelCounter,f	;volatile
  3543  0054  30FF               	movlw	255
  3544  0055  3DB7               	addwfc	_prelCounter+1,f	;volatile
  3545  0056                     __ccov132_end_blk15:
  3546  0056                     __ccov133_start_blk16:
  3547  0056                     i1l198:
  3548                           
  3549                           ;main.c: 544:         if (ihcPulseTimer > 0)
  3550  0056  0020               	movlb	0	; select bank0
  3551  0057  0835               	movf	_ihcPulseTimer+1,w	;volatile
  3552  0058  3A80               	xorlw	128
  3553  0059  00F3               	movwf	??_my_isr
  3554  005A  3080               	movlw	128
  3555  005B  0273               	subwf	??_my_isr,w
  3556  005C  1D03               	skipz
  3557  005D  2860               	goto	u34_25
  3558  005E  3001               	movlw	1
  3559  005F  0234               	subwf	_ihcPulseTimer,w	;volatile
  3560  0060                     u34_25:
  3561  0060  1C03               	skipc
  3562  0061  2863               	goto	u34_21
  3563  0062  2864               	goto	u34_20
  3564  0063                     u34_21:
  3565  0063  286A               	goto	i1l1562
  3566  0064                     u34_20:
  3567  0064                     __ccov133_end_blk16:
  3568  0064                     __ccov134_start_blk17:
  3569  0064                     i1l1560:
  3570  0064  0020               	movlb	0	; select bank0
  3571  0065  15A4               	bsf	__ccovbit17_27/(0+8),__ccovbit17_27& (0+7)	;volatile
  3572                           
  3573                           ;main.c: 545:             ihcPulseTimer--;
  3574  0066  30FF               	movlw	255
  3575  0067  07B4               	addwf	_ihcPulseTimer,f	;volatile
  3576  0068  30FF               	movlw	255
  3577  0069  3DB5               	addwfc	_ihcPulseTimer+1,f	;volatile
  3578  006A                     __ccov134_end_blk17:
  3579  006A                     __ccov135_start_blk19:
  3580  006A                     i1l1562:
  3581                           
  3582                           ;main.c: 546:         PIR1bits.TMR2IF = 0;
  3583  006A  0020               	movlb	0	; select bank0
  3584  006B  1091               	bcf	17,1	;volatile
  3585  006C                     __ccov135_end_blk19:
  3586  006C                     __ccov136_start_blk20:
  3587  006C                     i1l1564:
  3588                           
  3589                           ;main.c: 547:         LATAbits.LATA5 = 1;
  3590  006C  0022               	movlb	2	; select bank2
  3591  006D  168C               	bsf	12,5	;volatile
  3592  006E                     __ccov136_end_blk20:
  3593  006E                     __ccov137_start_blk21:
  3594  006E                     i1l1566:
  3595  006E  0020               	movlb	0	; select bank0
  3596  006F  1524               	bsf	__ccovbit21_28/(0+8),__ccovbit21_28& (0+7)	;volatile
  3597                           
  3598                           ;main.c: 548:         LATAbits.LATA5 = 0;
  3599  0070  0022               	movlb	2	; select bank2
  3600  0071  128C               	bcf	12,5	;volatile
  3601  0072                     __ccov137_end_blk21:
  3602  0072                     __ccov138_start_blk24:
  3603  0072                     i1l200:
  3604  0072  0020               	movlb	0	; select bank0
  3605  0073  14A4               	bsf	__ccovbit24_29/(0+8),__ccovbit24_29& (0+7)	;volatile
  3606  0074  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3607  0075  0009               	retfie
  3608  0076                     __end_of_my_isr:
  3609  0076                     
  3610                           	psect	codecov_info_hdr
  3611  0000                     __pcodecov_info_hdr:	
  3612                           ;
  3613                           ; Code-coverage Info Header
  3614                           ;
  3615                           
  3616  0000  0010               	db	16	; SIZE
  3617  0001  00000001           	ddw	1	; VERSION
  3618  0005  0001               	db	1	; POINTSIZE
  3619  0006  0008               	db	8	; UNITSIZE
  3620  0007  0001               	db	1	; FLAGS=SET
  3621  0008  00000000           	ddw	0	; Reserved
  3622  000C  00000000           	ddw	0	; Reserved
  3623                           
  3624                           	psect	codecov_info
  3625  0000                     __pcodecov_info:	
  3626                           ;
  3627                           ; Code-coverage Info
  3628                           ;
  3629                           
  3630                           
  3631                           ; Function: main, coverage: 50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,
      +                          30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0
  3632  0000  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  3633  0004  00000072           	ddw	__ccovbit50_1/(0+8)	; CC_ADDR
  3634  0008  00000001           	ddw	1	; NUM_POINTS
  3635  000C  00000004           	ddw	__ccovbit50_1& (0+7)	; OFFSET
  3636  0010  00000000           	ddw	0	; Reserved
  3637  0014  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  3638  0018  00000033           	ddw	51	; NUM_RANGES
  3639  001C  000002A0           	ddw	__ccov51_start_blk50	; block 50 START_ADDR
  3640  0020  000002A3           	ddw	__ccov51_end_blk50	; block 50 END_ADDR
  3641  0024  00000297           	ddw	__ccov50_start_blk49	; block 49 START_ADDR
  3642  0028  000002A0           	ddw	__ccov50_end_blk49	; block 49 END_ADDR
  3643  002C  00000295           	ddw	__ccov49_start_blk48	; block 48 START_ADDR
  3644  0030  00000297           	ddw	__ccov49_end_blk48	; block 48 END_ADDR
  3645  0034  00000288           	ddw	__ccov48_start_blk47	; block 47 START_ADDR
  3646  0038  00000295           	ddw	__ccov48_end_blk47	; block 47 END_ADDR
  3647  003C  00000278           	ddw	__ccov47_start_blk46	; block 46 START_ADDR
  3648  0040  00000288           	ddw	__ccov47_end_blk46	; block 46 END_ADDR
  3649  0044  0000025F           	ddw	__ccov46_start_blk45	; block 45 START_ADDR
  3650  0048  00000278           	ddw	__ccov46_end_blk45	; block 45 END_ADDR
  3651  004C  00000258           	ddw	__ccov45_start_blk44	; block 44 START_ADDR
  3652  0050  0000025F           	ddw	__ccov45_end_blk44	; block 44 END_ADDR
  3653  0054  00000257           	ddw	__ccov44_start_blk43	; block 43 START_ADDR
  3654  0058  00000258           	ddw	__ccov44_end_blk43	; block 43 END_ADDR
  3655  005C  00000252           	ddw	__ccov43_start_blk42	; block 42 START_ADDR
  3656  0060  00000257           	ddw	__ccov43_end_blk42	; block 42 END_ADDR
  3657  0064  00000251           	ddw	__ccov42_start_blk41	; block 41 START_ADDR
  3658  0068  00000252           	ddw	__ccov42_end_blk41	; block 41 END_ADDR
  3659  006C  00000245           	ddw	__ccov41_start_blk40	; block 40 START_ADDR
  3660  0070  00000251           	ddw	__ccov41_end_blk40	; block 40 END_ADDR
  3661  0074  00000242           	ddw	__ccov40_start_blk39	; block 39 START_ADDR
  3662  0078  00000245           	ddw	__ccov40_end_blk39	; block 39 END_ADDR
  3663  007C  0000023F           	ddw	__ccov39_start_blk38	; block 38 START_ADDR
  3664  0080  00000242           	ddw	__ccov39_end_blk38	; block 38 END_ADDR
  3665  0084  0000023E           	ddw	__ccov38_start_blk37	; block 37 START_ADDR
  3666  0088  0000023F           	ddw	__ccov38_end_blk37	; block 37 END_ADDR
  3667  008C  0000023C           	ddw	__ccov37_start_blk36	; block 36 START_ADDR
  3668  0090  0000023E           	ddw	__ccov37_end_blk36	; block 36 END_ADDR
  3669  0094  0000023B           	ddw	__ccov36_start_blk35	; block 35 START_ADDR
  3670  0098  0000023C           	ddw	__ccov36_end_blk35	; block 35 END_ADDR
  3671  009C  00000239           	ddw	__ccov35_start_blk34	; block 34 START_ADDR
  3672  00A0  0000023B           	ddw	__ccov35_end_blk34	; block 34 END_ADDR
  3673  00A4  00000237           	ddw	__ccov34_start_blk33	; block 33 START_ADDR
  3674  00A8  00000239           	ddw	__ccov34_end_blk33	; block 33 END_ADDR
  3675  00AC  00000235           	ddw	__ccov33_start_blk32	; block 32 START_ADDR
  3676  00B0  00000237           	ddw	__ccov33_end_blk32	; block 32 END_ADDR
  3677  00B4  00000231           	ddw	__ccov32_start_blk31	; block 31 START_ADDR
  3678  00B8  00000235           	ddw	__ccov32_end_blk31	; block 31 END_ADDR
  3679  00BC  0000022D           	ddw	__ccov31_start_blk30	; block 30 START_ADDR
  3680  00C0  00000231           	ddw	__ccov31_end_blk30	; block 30 END_ADDR
  3681  00C4  00000228           	ddw	__ccov30_start_blk29	; block 29 START_ADDR
  3682  00C8  0000022D           	ddw	__ccov30_end_blk29	; block 29 END_ADDR
  3683  00CC  00000226           	ddw	__ccov29_start_blk28	; block 28 START_ADDR
  3684  00D0  00000228           	ddw	__ccov29_end_blk28	; block 28 END_ADDR
  3685  00D4  00000224           	ddw	__ccov28_start_blk27	; block 27 START_ADDR
  3686  00D8  00000226           	ddw	__ccov28_end_blk27	; block 27 END_ADDR
  3687  00DC  00000223           	ddw	__ccov27_start_blk26	; block 26 START_ADDR
  3688  00E0  00000224           	ddw	__ccov27_end_blk26	; block 26 END_ADDR
  3689  00E4  00000221           	ddw	__ccov26_start_blk25	; block 25 START_ADDR
  3690  00E8  00000223           	ddw	__ccov26_end_blk25	; block 25 END_ADDR
  3691  00EC  0000021F           	ddw	__ccov25_start_blk24	; block 24 START_ADDR
  3692  00F0  00000221           	ddw	__ccov25_end_blk24	; block 24 END_ADDR
  3693  00F4  0000021E           	ddw	__ccov24_start_blk23	; block 23 START_ADDR
  3694  00F8  0000021F           	ddw	__ccov24_end_blk23	; block 23 END_ADDR
  3695  00FC  0000021D           	ddw	__ccov23_start_blk22	; block 22 START_ADDR
  3696  0100  0000021E           	ddw	__ccov23_end_blk22	; block 22 END_ADDR
  3697  0104  00000218           	ddw	__ccov22_start_blk21	; block 21 START_ADDR
  3698  0108  0000021D           	ddw	__ccov22_end_blk21	; block 21 END_ADDR
  3699  010C  00000217           	ddw	__ccov21_start_blk20	; block 20 START_ADDR
  3700  0110  00000218           	ddw	__ccov21_end_blk20	; block 20 END_ADDR
  3701  0114  00000216           	ddw	__ccov20_start_blk19	; block 19 START_ADDR
  3702  0118  00000217           	ddw	__ccov20_end_blk19	; block 19 END_ADDR
  3703  011C  00000214           	ddw	__ccov19_start_blk18	; block 18 START_ADDR
  3704  0120  00000216           	ddw	__ccov19_end_blk18	; block 18 END_ADDR
  3705  0124  00000213           	ddw	__ccov18_start_blk17	; block 17 START_ADDR
  3706  0128  00000214           	ddw	__ccov18_end_blk17	; block 17 END_ADDR
  3707  012C  00000212           	ddw	__ccov17_start_blk16	; block 16 START_ADDR
  3708  0130  00000213           	ddw	__ccov17_end_blk16	; block 16 END_ADDR
  3709  0134  00000210           	ddw	__ccov16_start_blk15	; block 15 START_ADDR
  3710  0138  00000212           	ddw	__ccov16_end_blk15	; block 15 END_ADDR
  3711  013C  0000020E           	ddw	__ccov15_start_blk14	; block 14 START_ADDR
  3712  0140  00000210           	ddw	__ccov15_end_blk14	; block 14 END_ADDR
  3713  0144  0000020D           	ddw	__ccov14_start_blk13	; block 13 START_ADDR
  3714  0148  0000020E           	ddw	__ccov14_end_blk13	; block 13 END_ADDR
  3715  014C  0000020C           	ddw	__ccov13_start_blk12	; block 12 START_ADDR
  3716  0150  0000020D           	ddw	__ccov13_end_blk12	; block 12 END_ADDR
  3717  0154  0000020B           	ddw	__ccov12_start_blk11	; block 11 START_ADDR
  3718  0158  0000020C           	ddw	__ccov12_end_blk11	; block 11 END_ADDR
  3719  015C  00000209           	ddw	__ccov11_start_blk10	; block 10 START_ADDR
  3720  0160  0000020B           	ddw	__ccov11_end_blk10	; block 10 END_ADDR
  3721  0164  00000208           	ddw	__ccov10_start_blk9	; block 9 START_ADDR
  3722  0168  00000209           	ddw	__ccov10_end_blk9	; block 9 END_ADDR
  3723  016C  00000207           	ddw	__ccov9_start_blk8	; block 8 START_ADDR
  3724  0170  00000208           	ddw	__ccov9_end_blk8	; block 8 END_ADDR
  3725  0174  00000206           	ddw	__ccov8_start_blk7	; block 7 START_ADDR
  3726  0178  00000207           	ddw	__ccov8_end_blk7	; block 7 END_ADDR
  3727  017C  00000205           	ddw	__ccov7_start_blk6	; block 6 START_ADDR
  3728  0180  00000206           	ddw	__ccov7_end_blk6	; block 6 END_ADDR
  3729  0184  00000204           	ddw	__ccov6_start_blk5	; block 5 START_ADDR
  3730  0188  00000205           	ddw	__ccov6_end_blk5	; block 5 END_ADDR
  3731  018C  00000203           	ddw	__ccov5_start_blk4	; block 4 START_ADDR
  3732  0190  00000204           	ddw	__ccov5_end_blk4	; block 4 END_ADDR
  3733  0194  000001FF           	ddw	__ccov4_start_blk3	; block 3 START_ADDR
  3734  0198  00000203           	ddw	__ccov4_end_blk3	; block 3 END_ADDR
  3735  019C  000001FE           	ddw	__ccov3_start_blk2	; block 2 START_ADDR
  3736  01A0  000001FF           	ddw	__ccov3_end_blk2	; block 2 END_ADDR
  3737  01A4  000001FB           	ddw	__ccov2_start_blk1	; block 1 START_ADDR
  3738  01A8  000001FE           	ddw	__ccov2_end_blk1	; block 1 END_ADDR
  3739  01AC  000001F9           	ddw	_main	; block 0 START_ADDR
  3740  01B0  000001FB           	ddw	__ccov1_end_blk0	; block 0 END_ADDR
  3741                           
  3742                           ; Function: main, coverage: 65,64,62,61,60,59,58,57,56,55,54,53,52,47,46,45,44,43,42,41,
      +                          40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,1
      +                          1,10,9,8,7,6,5,4,3,2,1,0
  3743  01B4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  3744  01B8  00000072           	ddw	__ccovbit65_2/(0+8)	; CC_ADDR
  3745  01BC  00000001           	ddw	1	; NUM_POINTS
  3746  01C0  00000003           	ddw	__ccovbit65_2& (0+7)	; OFFSET
  3747  01C4  00000000           	ddw	0	; Reserved
  3748  01C8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  3749  01CC  0000003D           	ddw	61	; NUM_RANGES
  3750  01D0  000002C3           	ddw	__ccov64_start_blk65	; block 65 START_ADDR
  3751  01D4  000002C8           	ddw	__ccov64_end_blk65	; block 65 END_ADDR
  3752  01D8  000002BF           	ddw	__ccov63_start_blk64	; block 64 START_ADDR
  3753  01DC  000002C3           	ddw	__ccov63_end_blk64	; block 64 END_ADDR
  3754  01E0  000002BC           	ddw	__ccov62_start_blk62	; block 62 START_ADDR
  3755  01E4  000002BF           	ddw	__ccov62_end_blk62	; block 62 END_ADDR
  3756  01E8  000002BA           	ddw	__ccov61_start_blk61	; block 61 START_ADDR
  3757  01EC  000002BC           	ddw	__ccov61_end_blk61	; block 61 END_ADDR
  3758  01F0  000002B8           	ddw	__ccov60_start_blk60	; block 60 START_ADDR
  3759  01F4  000002BA           	ddw	__ccov60_end_blk60	; block 60 END_ADDR
  3760  01F8  000002B6           	ddw	__ccov59_start_blk59	; block 59 START_ADDR
  3761  01FC  000002B8           	ddw	__ccov59_end_blk59	; block 59 END_ADDR
  3762  0200  000002B4           	ddw	__ccov58_start_blk58	; block 58 START_ADDR
  3763  0204  000002B6           	ddw	__ccov58_end_blk58	; block 58 END_ADDR
  3764  0208  000002B1           	ddw	__ccov57_start_blk57	; block 57 START_ADDR
  3765  020C  000002B4           	ddw	__ccov57_end_blk57	; block 57 END_ADDR
  3766  0210  000002AE           	ddw	__ccov56_start_blk56	; block 56 START_ADDR
  3767  0214  000002B1           	ddw	__ccov56_end_blk56	; block 56 END_ADDR
  3768  0218  000002AD           	ddw	__ccov55_start_blk55	; block 55 START_ADDR
  3769  021C  000002AE           	ddw	__ccov55_end_blk55	; block 55 END_ADDR
  3770  0220  000002AC           	ddw	__ccov54_start_blk54	; block 54 START_ADDR
  3771  0224  000002AD           	ddw	__ccov54_end_blk54	; block 54 END_ADDR
  3772  0228  000002A8           	ddw	__ccov53_start_blk53	; block 53 START_ADDR
  3773  022C  000002AC           	ddw	__ccov53_end_blk53	; block 53 END_ADDR
  3774  0230  000002A3           	ddw	__ccov52_start_blk52	; block 52 START_ADDR
  3775  0234  000002A8           	ddw	__ccov52_end_blk52	; block 52 END_ADDR
  3776  0238  00000288           	ddw	__ccov48_start_blk47	; block 47 START_ADDR
  3777  023C  00000295           	ddw	__ccov48_end_blk47	; block 47 END_ADDR
  3778  0240  00000278           	ddw	__ccov47_start_blk46	; block 46 START_ADDR
  3779  0244  00000288           	ddw	__ccov47_end_blk46	; block 46 END_ADDR
  3780  0248  0000025F           	ddw	__ccov46_start_blk45	; block 45 START_ADDR
  3781  024C  00000278           	ddw	__ccov46_end_blk45	; block 45 END_ADDR
  3782  0250  00000258           	ddw	__ccov45_start_blk44	; block 44 START_ADDR
  3783  0254  0000025F           	ddw	__ccov45_end_blk44	; block 44 END_ADDR
  3784  0258  00000257           	ddw	__ccov44_start_blk43	; block 43 START_ADDR
  3785  025C  00000258           	ddw	__ccov44_end_blk43	; block 43 END_ADDR
  3786  0260  00000252           	ddw	__ccov43_start_blk42	; block 42 START_ADDR
  3787  0264  00000257           	ddw	__ccov43_end_blk42	; block 42 END_ADDR
  3788  0268  00000251           	ddw	__ccov42_start_blk41	; block 41 START_ADDR
  3789  026C  00000252           	ddw	__ccov42_end_blk41	; block 41 END_ADDR
  3790  0270  00000245           	ddw	__ccov41_start_blk40	; block 40 START_ADDR
  3791  0274  00000251           	ddw	__ccov41_end_blk40	; block 40 END_ADDR
  3792  0278  00000242           	ddw	__ccov40_start_blk39	; block 39 START_ADDR
  3793  027C  00000245           	ddw	__ccov40_end_blk39	; block 39 END_ADDR
  3794  0280  0000023F           	ddw	__ccov39_start_blk38	; block 38 START_ADDR
  3795  0284  00000242           	ddw	__ccov39_end_blk38	; block 38 END_ADDR
  3796  0288  0000023E           	ddw	__ccov38_start_blk37	; block 37 START_ADDR
  3797  028C  0000023F           	ddw	__ccov38_end_blk37	; block 37 END_ADDR
  3798  0290  0000023C           	ddw	__ccov37_start_blk36	; block 36 START_ADDR
  3799  0294  0000023E           	ddw	__ccov37_end_blk36	; block 36 END_ADDR
  3800  0298  0000023B           	ddw	__ccov36_start_blk35	; block 35 START_ADDR
  3801  029C  0000023C           	ddw	__ccov36_end_blk35	; block 35 END_ADDR
  3802  02A0  00000239           	ddw	__ccov35_start_blk34	; block 34 START_ADDR
  3803  02A4  0000023B           	ddw	__ccov35_end_blk34	; block 34 END_ADDR
  3804  02A8  00000237           	ddw	__ccov34_start_blk33	; block 33 START_ADDR
  3805  02AC  00000239           	ddw	__ccov34_end_blk33	; block 33 END_ADDR
  3806  02B0  00000235           	ddw	__ccov33_start_blk32	; block 32 START_ADDR
  3807  02B4  00000237           	ddw	__ccov33_end_blk32	; block 32 END_ADDR
  3808  02B8  00000231           	ddw	__ccov32_start_blk31	; block 31 START_ADDR
  3809  02BC  00000235           	ddw	__ccov32_end_blk31	; block 31 END_ADDR
  3810  02C0  0000022D           	ddw	__ccov31_start_blk30	; block 30 START_ADDR
  3811  02C4  00000231           	ddw	__ccov31_end_blk30	; block 30 END_ADDR
  3812  02C8  00000228           	ddw	__ccov30_start_blk29	; block 29 START_ADDR
  3813  02CC  0000022D           	ddw	__ccov30_end_blk29	; block 29 END_ADDR
  3814  02D0  00000226           	ddw	__ccov29_start_blk28	; block 28 START_ADDR
  3815  02D4  00000228           	ddw	__ccov29_end_blk28	; block 28 END_ADDR
  3816  02D8  00000224           	ddw	__ccov28_start_blk27	; block 27 START_ADDR
  3817  02DC  00000226           	ddw	__ccov28_end_blk27	; block 27 END_ADDR
  3818  02E0  00000223           	ddw	__ccov27_start_blk26	; block 26 START_ADDR
  3819  02E4  00000224           	ddw	__ccov27_end_blk26	; block 26 END_ADDR
  3820  02E8  00000221           	ddw	__ccov26_start_blk25	; block 25 START_ADDR
  3821  02EC  00000223           	ddw	__ccov26_end_blk25	; block 25 END_ADDR
  3822  02F0  0000021F           	ddw	__ccov25_start_blk24	; block 24 START_ADDR
  3823  02F4  00000221           	ddw	__ccov25_end_blk24	; block 24 END_ADDR
  3824  02F8  0000021E           	ddw	__ccov24_start_blk23	; block 23 START_ADDR
  3825  02FC  0000021F           	ddw	__ccov24_end_blk23	; block 23 END_ADDR
  3826  0300  0000021D           	ddw	__ccov23_start_blk22	; block 22 START_ADDR
  3827  0304  0000021E           	ddw	__ccov23_end_blk22	; block 22 END_ADDR
  3828  0308  00000218           	ddw	__ccov22_start_blk21	; block 21 START_ADDR
  3829  030C  0000021D           	ddw	__ccov22_end_blk21	; block 21 END_ADDR
  3830  0310  00000217           	ddw	__ccov21_start_blk20	; block 20 START_ADDR
  3831  0314  00000218           	ddw	__ccov21_end_blk20	; block 20 END_ADDR
  3832  0318  00000216           	ddw	__ccov20_start_blk19	; block 19 START_ADDR
  3833  031C  00000217           	ddw	__ccov20_end_blk19	; block 19 END_ADDR
  3834  0320  00000214           	ddw	__ccov19_start_blk18	; block 18 START_ADDR
  3835  0324  00000216           	ddw	__ccov19_end_blk18	; block 18 END_ADDR
  3836  0328  00000213           	ddw	__ccov18_start_blk17	; block 17 START_ADDR
  3837  032C  00000214           	ddw	__ccov18_end_blk17	; block 17 END_ADDR
  3838  0330  00000212           	ddw	__ccov17_start_blk16	; block 16 START_ADDR
  3839  0334  00000213           	ddw	__ccov17_end_blk16	; block 16 END_ADDR
  3840  0338  00000210           	ddw	__ccov16_start_blk15	; block 15 START_ADDR
  3841  033C  00000212           	ddw	__ccov16_end_blk15	; block 15 END_ADDR
  3842  0340  0000020E           	ddw	__ccov15_start_blk14	; block 14 START_ADDR
  3843  0344  00000210           	ddw	__ccov15_end_blk14	; block 14 END_ADDR
  3844  0348  0000020D           	ddw	__ccov14_start_blk13	; block 13 START_ADDR
  3845  034C  0000020E           	ddw	__ccov14_end_blk13	; block 13 END_ADDR
  3846  0350  0000020C           	ddw	__ccov13_start_blk12	; block 12 START_ADDR
  3847  0354  0000020D           	ddw	__ccov13_end_blk12	; block 12 END_ADDR
  3848  0358  0000020B           	ddw	__ccov12_start_blk11	; block 11 START_ADDR
  3849  035C  0000020C           	ddw	__ccov12_end_blk11	; block 11 END_ADDR
  3850  0360  00000209           	ddw	__ccov11_start_blk10	; block 10 START_ADDR
  3851  0364  0000020B           	ddw	__ccov11_end_blk10	; block 10 END_ADDR
  3852  0368  00000208           	ddw	__ccov10_start_blk9	; block 9 START_ADDR
  3853  036C  00000209           	ddw	__ccov10_end_blk9	; block 9 END_ADDR
  3854  0370  00000207           	ddw	__ccov9_start_blk8	; block 8 START_ADDR
  3855  0374  00000208           	ddw	__ccov9_end_blk8	; block 8 END_ADDR
  3856  0378  00000206           	ddw	__ccov8_start_blk7	; block 7 START_ADDR
  3857  037C  00000207           	ddw	__ccov8_end_blk7	; block 7 END_ADDR
  3858  0380  00000205           	ddw	__ccov7_start_blk6	; block 6 START_ADDR
  3859  0384  00000206           	ddw	__ccov7_end_blk6	; block 6 END_ADDR
  3860  0388  00000204           	ddw	__ccov6_start_blk5	; block 5 START_ADDR
  3861  038C  00000205           	ddw	__ccov6_end_blk5	; block 5 END_ADDR
  3862  0390  00000203           	ddw	__ccov5_start_blk4	; block 4 START_ADDR
  3863  0394  00000204           	ddw	__ccov5_end_blk4	; block 4 END_ADDR
  3864  0398  000001FF           	ddw	__ccov4_start_blk3	; block 3 START_ADDR
  3865  039C  00000203           	ddw	__ccov4_end_blk3	; block 3 END_ADDR
  3866  03A0  000001FE           	ddw	__ccov3_start_blk2	; block 2 START_ADDR
  3867  03A4  000001FF           	ddw	__ccov3_end_blk2	; block 2 END_ADDR
  3868  03A8  000001FB           	ddw	__ccov2_start_blk1	; block 1 START_ADDR
  3869  03AC  000001FE           	ddw	__ccov2_end_blk1	; block 1 END_ADDR
  3870  03B0  000001F9           	ddw	_main	; block 0 START_ADDR
  3871  03B4  000001FB           	ddw	__ccov1_end_blk0	; block 0 END_ADDR
  3872                           
  3873                           ; Function: main, coverage: 68,67,64,62,61,60,59,58,57,56,55,54,53,52,47,46,45,44,43,42,
      +                          41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,1
      +                          2,11,10,9,8,7,6,5,4,3,2,1,0
  3874  03B8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  3875  03BC  00000072           	ddw	__ccovbit68_3/(0+8)	; CC_ADDR
  3876  03C0  00000001           	ddw	1	; NUM_POINTS
  3877  03C4  00000002           	ddw	__ccovbit68_3& (0+7)	; OFFSET
  3878  03C8  00000000           	ddw	0	; Reserved
  3879  03CC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  3880  03D0  0000003E           	ddw	62	; NUM_RANGES
  3881  03D4  000002CB           	ddw	__ccov66_start_blk68	; block 68 START_ADDR
  3882  03D8  000002D0           	ddw	__ccov66_end_blk68	; block 68 END_ADDR
  3883  03DC  000002C8           	ddw	__ccov65_start_blk67	; block 67 START_ADDR
  3884  03E0  000002CB           	ddw	__ccov65_end_blk67	; block 67 END_ADDR
  3885  03E4  000002BF           	ddw	__ccov63_start_blk64	; block 64 START_ADDR
  3886  03E8  000002C3           	ddw	__ccov63_end_blk64	; block 64 END_ADDR
  3887  03EC  000002BC           	ddw	__ccov62_start_blk62	; block 62 START_ADDR
  3888  03F0  000002BF           	ddw	__ccov62_end_blk62	; block 62 END_ADDR
  3889  03F4  000002BA           	ddw	__ccov61_start_blk61	; block 61 START_ADDR
  3890  03F8  000002BC           	ddw	__ccov61_end_blk61	; block 61 END_ADDR
  3891  03FC  000002B8           	ddw	__ccov60_start_blk60	; block 60 START_ADDR
  3892  0400  000002BA           	ddw	__ccov60_end_blk60	; block 60 END_ADDR
  3893  0404  000002B6           	ddw	__ccov59_start_blk59	; block 59 START_ADDR
  3894  0408  000002B8           	ddw	__ccov59_end_blk59	; block 59 END_ADDR
  3895  040C  000002B4           	ddw	__ccov58_start_blk58	; block 58 START_ADDR
  3896  0410  000002B6           	ddw	__ccov58_end_blk58	; block 58 END_ADDR
  3897  0414  000002B1           	ddw	__ccov57_start_blk57	; block 57 START_ADDR
  3898  0418  000002B4           	ddw	__ccov57_end_blk57	; block 57 END_ADDR
  3899  041C  000002AE           	ddw	__ccov56_start_blk56	; block 56 START_ADDR
  3900  0420  000002B1           	ddw	__ccov56_end_blk56	; block 56 END_ADDR
  3901  0424  000002AD           	ddw	__ccov55_start_blk55	; block 55 START_ADDR
  3902  0428  000002AE           	ddw	__ccov55_end_blk55	; block 55 END_ADDR
  3903  042C  000002AC           	ddw	__ccov54_start_blk54	; block 54 START_ADDR
  3904  0430  000002AD           	ddw	__ccov54_end_blk54	; block 54 END_ADDR
  3905  0434  000002A8           	ddw	__ccov53_start_blk53	; block 53 START_ADDR
  3906  0438  000002AC           	ddw	__ccov53_end_blk53	; block 53 END_ADDR
  3907  043C  000002A3           	ddw	__ccov52_start_blk52	; block 52 START_ADDR
  3908  0440  000002A8           	ddw	__ccov52_end_blk52	; block 52 END_ADDR
  3909  0444  00000288           	ddw	__ccov48_start_blk47	; block 47 START_ADDR
  3910  0448  00000295           	ddw	__ccov48_end_blk47	; block 47 END_ADDR
  3911  044C  00000278           	ddw	__ccov47_start_blk46	; block 46 START_ADDR
  3912  0450  00000288           	ddw	__ccov47_end_blk46	; block 46 END_ADDR
  3913  0454  0000025F           	ddw	__ccov46_start_blk45	; block 45 START_ADDR
  3914  0458  00000278           	ddw	__ccov46_end_blk45	; block 45 END_ADDR
  3915  045C  00000258           	ddw	__ccov45_start_blk44	; block 44 START_ADDR
  3916  0460  0000025F           	ddw	__ccov45_end_blk44	; block 44 END_ADDR
  3917  0464  00000257           	ddw	__ccov44_start_blk43	; block 43 START_ADDR
  3918  0468  00000258           	ddw	__ccov44_end_blk43	; block 43 END_ADDR
  3919  046C  00000252           	ddw	__ccov43_start_blk42	; block 42 START_ADDR
  3920  0470  00000257           	ddw	__ccov43_end_blk42	; block 42 END_ADDR
  3921  0474  00000251           	ddw	__ccov42_start_blk41	; block 41 START_ADDR
  3922  0478  00000252           	ddw	__ccov42_end_blk41	; block 41 END_ADDR
  3923  047C  00000245           	ddw	__ccov41_start_blk40	; block 40 START_ADDR
  3924  0480  00000251           	ddw	__ccov41_end_blk40	; block 40 END_ADDR
  3925  0484  00000242           	ddw	__ccov40_start_blk39	; block 39 START_ADDR
  3926  0488  00000245           	ddw	__ccov40_end_blk39	; block 39 END_ADDR
  3927  048C  0000023F           	ddw	__ccov39_start_blk38	; block 38 START_ADDR
  3928  0490  00000242           	ddw	__ccov39_end_blk38	; block 38 END_ADDR
  3929  0494  0000023E           	ddw	__ccov38_start_blk37	; block 37 START_ADDR
  3930  0498  0000023F           	ddw	__ccov38_end_blk37	; block 37 END_ADDR
  3931  049C  0000023C           	ddw	__ccov37_start_blk36	; block 36 START_ADDR
  3932  04A0  0000023E           	ddw	__ccov37_end_blk36	; block 36 END_ADDR
  3933  04A4  0000023B           	ddw	__ccov36_start_blk35	; block 35 START_ADDR
  3934  04A8  0000023C           	ddw	__ccov36_end_blk35	; block 35 END_ADDR
  3935  04AC  00000239           	ddw	__ccov35_start_blk34	; block 34 START_ADDR
  3936  04B0  0000023B           	ddw	__ccov35_end_blk34	; block 34 END_ADDR
  3937  04B4  00000237           	ddw	__ccov34_start_blk33	; block 33 START_ADDR
  3938  04B8  00000239           	ddw	__ccov34_end_blk33	; block 33 END_ADDR
  3939  04BC  00000235           	ddw	__ccov33_start_blk32	; block 32 START_ADDR
  3940  04C0  00000237           	ddw	__ccov33_end_blk32	; block 32 END_ADDR
  3941  04C4  00000231           	ddw	__ccov32_start_blk31	; block 31 START_ADDR
  3942  04C8  00000235           	ddw	__ccov32_end_blk31	; block 31 END_ADDR
  3943  04CC  0000022D           	ddw	__ccov31_start_blk30	; block 30 START_ADDR
  3944  04D0  00000231           	ddw	__ccov31_end_blk30	; block 30 END_ADDR
  3945  04D4  00000228           	ddw	__ccov30_start_blk29	; block 29 START_ADDR
  3946  04D8  0000022D           	ddw	__ccov30_end_blk29	; block 29 END_ADDR
  3947  04DC  00000226           	ddw	__ccov29_start_blk28	; block 28 START_ADDR
  3948  04E0  00000228           	ddw	__ccov29_end_blk28	; block 28 END_ADDR
  3949  04E4  00000224           	ddw	__ccov28_start_blk27	; block 27 START_ADDR
  3950  04E8  00000226           	ddw	__ccov28_end_blk27	; block 27 END_ADDR
  3951  04EC  00000223           	ddw	__ccov27_start_blk26	; block 26 START_ADDR
  3952  04F0  00000224           	ddw	__ccov27_end_blk26	; block 26 END_ADDR
  3953  04F4  00000221           	ddw	__ccov26_start_blk25	; block 25 START_ADDR
  3954  04F8  00000223           	ddw	__ccov26_end_blk25	; block 25 END_ADDR
  3955  04FC  0000021F           	ddw	__ccov25_start_blk24	; block 24 START_ADDR
  3956  0500  00000221           	ddw	__ccov25_end_blk24	; block 24 END_ADDR
  3957  0504  0000021E           	ddw	__ccov24_start_blk23	; block 23 START_ADDR
  3958  0508  0000021F           	ddw	__ccov24_end_blk23	; block 23 END_ADDR
  3959  050C  0000021D           	ddw	__ccov23_start_blk22	; block 22 START_ADDR
  3960  0510  0000021E           	ddw	__ccov23_end_blk22	; block 22 END_ADDR
  3961  0514  00000218           	ddw	__ccov22_start_blk21	; block 21 START_ADDR
  3962  0518  0000021D           	ddw	__ccov22_end_blk21	; block 21 END_ADDR
  3963  051C  00000217           	ddw	__ccov21_start_blk20	; block 20 START_ADDR
  3964  0520  00000218           	ddw	__ccov21_end_blk20	; block 20 END_ADDR
  3965  0524  00000216           	ddw	__ccov20_start_blk19	; block 19 START_ADDR
  3966  0528  00000217           	ddw	__ccov20_end_blk19	; block 19 END_ADDR
  3967  052C  00000214           	ddw	__ccov19_start_blk18	; block 18 START_ADDR
  3968  0530  00000216           	ddw	__ccov19_end_blk18	; block 18 END_ADDR
  3969  0534  00000213           	ddw	__ccov18_start_blk17	; block 17 START_ADDR
  3970  0538  00000214           	ddw	__ccov18_end_blk17	; block 17 END_ADDR
  3971  053C  00000212           	ddw	__ccov17_start_blk16	; block 16 START_ADDR
  3972  0540  00000213           	ddw	__ccov17_end_blk16	; block 16 END_ADDR
  3973  0544  00000210           	ddw	__ccov16_start_blk15	; block 15 START_ADDR
  3974  0548  00000212           	ddw	__ccov16_end_blk15	; block 15 END_ADDR
  3975  054C  0000020E           	ddw	__ccov15_start_blk14	; block 14 START_ADDR
  3976  0550  00000210           	ddw	__ccov15_end_blk14	; block 14 END_ADDR
  3977  0554  0000020D           	ddw	__ccov14_start_blk13	; block 13 START_ADDR
  3978  0558  0000020E           	ddw	__ccov14_end_blk13	; block 13 END_ADDR
  3979  055C  0000020C           	ddw	__ccov13_start_blk12	; block 12 START_ADDR
  3980  0560  0000020D           	ddw	__ccov13_end_blk12	; block 12 END_ADDR
  3981  0564  0000020B           	ddw	__ccov12_start_blk11	; block 11 START_ADDR
  3982  0568  0000020C           	ddw	__ccov12_end_blk11	; block 11 END_ADDR
  3983  056C  00000209           	ddw	__ccov11_start_blk10	; block 10 START_ADDR
  3984  0570  0000020B           	ddw	__ccov11_end_blk10	; block 10 END_ADDR
  3985  0574  00000208           	ddw	__ccov10_start_blk9	; block 9 START_ADDR
  3986  0578  00000209           	ddw	__ccov10_end_blk9	; block 9 END_ADDR
  3987  057C  00000207           	ddw	__ccov9_start_blk8	; block 8 START_ADDR
  3988  0580  00000208           	ddw	__ccov9_end_blk8	; block 8 END_ADDR
  3989  0584  00000206           	ddw	__ccov8_start_blk7	; block 7 START_ADDR
  3990  0588  00000207           	ddw	__ccov8_end_blk7	; block 7 END_ADDR
  3991  058C  00000205           	ddw	__ccov7_start_blk6	; block 6 START_ADDR
  3992  0590  00000206           	ddw	__ccov7_end_blk6	; block 6 END_ADDR
  3993  0594  00000204           	ddw	__ccov6_start_blk5	; block 5 START_ADDR
  3994  0598  00000205           	ddw	__ccov6_end_blk5	; block 5 END_ADDR
  3995  059C  00000203           	ddw	__ccov5_start_blk4	; block 4 START_ADDR
  3996  05A0  00000204           	ddw	__ccov5_end_blk4	; block 4 END_ADDR
  3997  05A4  000001FF           	ddw	__ccov4_start_blk3	; block 3 START_ADDR
  3998  05A8  00000203           	ddw	__ccov4_end_blk3	; block 3 END_ADDR
  3999  05AC  000001FE           	ddw	__ccov3_start_blk2	; block 2 START_ADDR
  4000  05B0  000001FF           	ddw	__ccov3_end_blk2	; block 2 END_ADDR
  4001  05B4  000001FB           	ddw	__ccov2_start_blk1	; block 1 START_ADDR
  4002  05B8  000001FE           	ddw	__ccov2_end_blk1	; block 1 END_ADDR
  4003  05BC  000001F9           	ddw	_main	; block 0 START_ADDR
  4004  05C0  000001FB           	ddw	__ccov1_end_blk0	; block 0 END_ADDR
  4005                           
  4006                           ; Function: timer2_init, coverage: 3,2,1,0
  4007  05C4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4008  05C8  00000072           	ddw	__ccovbit3_4/(0+8)	; CC_ADDR
  4009  05CC  00000001           	ddw	1	; NUM_POINTS
  4010  05D0  00000001           	ddw	__ccovbit3_4& (0+7)	; OFFSET
  4011  05D4  00000000           	ddw	0	; Reserved
  4012  05D8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4013  05DC  00000004           	ddw	4	; NUM_RANGES
  4014  05E0  000003DF           	ddw	__ccov70_start_blk3	; block 3 START_ADDR
  4015  05E4  000003E1           	ddw	__end_of_timer2_init	; block 3 END_ADDR
  4016  05E8  000003DE           	ddw	__ccov69_start_blk2	; block 2 START_ADDR
  4017  05EC  000003DF           	ddw	__ccov69_end_blk2	; block 2 END_ADDR
  4018  05F0  000003D5           	ddw	__ccov68_start_blk1	; block 1 START_ADDR
  4019  05F4  000003DE           	ddw	__ccov68_end_blk1	; block 1 END_ADDR
  4020  05F8  000003D2           	ddw	_timer2_init	; block 0 START_ADDR
  4021  05FC  000003D5           	ddw	__ccov67_end_blk0	; block 0 END_ADDR
  4022                           
  4023                           ; Function: getBatteryVoltage, coverage: 18,16,15,14,12,10,9,8,7,6,5,4,3,1,0
  4024  0600  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4025  0604  00000072           	ddw	__ccovbit18_5/(0+8)	; CC_ADDR
  4026  0608  00000001           	ddw	1	; NUM_POINTS
  4027  060C  00000000           	ddw	__ccovbit18_5& (0+7)	; OFFSET
  4028  0610  00000000           	ddw	0	; Reserved
  4029  0614  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4030  0618  0000000E           	ddw	14	; NUM_RANGES
  4031  061C  000003D0           	ddw	__ccov85_start_blk18	; block 18 START_ADDR
  4032  0620  000003D2           	ddw	__end_of_getBatteryVoltage	; block 18 END_ADDR
  4033  0624  000003CA           	ddw	__ccov84_start_blk16	; block 16 START_ADDR
  4034  0628  000003D0           	ddw	__ccov84_end_blk16	; block 16 END_ADDR
  4035  062C  000003C8           	ddw	__ccov83_start_blk15	; block 15 START_ADDR
  4036  0630  000003CA           	ddw	__ccov83_end_blk15	; block 15 END_ADDR
  4037  0634  000003B7           	ddw	__ccov82_start_blk14	; block 14 START_ADDR
  4038  0638  000003C8           	ddw	__ccov82_end_blk14	; block 14 END_ADDR
  4039  063C  000003B3           	ddw	__ccov81_start_blk12	; block 12 START_ADDR
  4040  0640  000003B7           	ddw	__ccov81_end_blk12	; block 12 END_ADDR
  4041  0644  000003B2           	ddw	__ccov80_start_blk10	; block 10 START_ADDR
  4042  0648  000003B3           	ddw	__ccov80_end_blk10	; block 10 END_ADDR
  4043  064C  000003B1           	ddw	__ccov78_start_blk8	; block 8 START_ADDR
  4044  0650  000003B2           	ddw	__ccov78_end_blk8	; block 8 END_ADDR
  4045  0654  000003AE           	ddw	__ccov77_start_blk7	; block 7 START_ADDR
  4046  0658  000003B1           	ddw	__ccov77_end_blk7	; block 7 END_ADDR
  4047  065C  000003AA           	ddw	__ccov76_start_blk6	; block 6 START_ADDR
  4048  0660  000003AE           	ddw	__ccov76_end_blk6	; block 6 END_ADDR
  4049  0664  000003A8           	ddw	__ccov75_start_blk5	; block 5 START_ADDR
  4050  0668  000003AA           	ddw	__ccov75_end_blk5	; block 5 END_ADDR
  4051  066C  000003A6           	ddw	__ccov74_start_blk4	; block 4 START_ADDR
  4052  0670  000003A8           	ddw	__ccov74_end_blk4	; block 4 END_ADDR
  4053  0674  000003A2           	ddw	__ccov73_start_blk3	; block 3 START_ADDR
  4054  0678  000003A6           	ddw	__ccov73_end_blk3	; block 3 END_ADDR
  4055  067C  000003A1           	ddw	__ccov72_start_blk1	; block 1 START_ADDR
  4056  0680  000003A2           	ddw	__ccov72_end_blk1	; block 1 END_ADDR
  4057  0684  0000039C           	ddw	_getBatteryVoltage	; block 0 START_ADDR
  4058  0688  000003A1           	ddw	__ccov71_end_blk0	; block 0 END_ADDR
  4059                           
  4060                           ; Function: watch_dog_incrementing_timer, coverage: 2,1,0
  4061  068C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4062  0690  00000071           	ddw	__ccovbit2_6/(0+8)	; CC_ADDR
  4063  0694  00000001           	ddw	1	; NUM_POINTS
  4064  0698  00000007           	ddw	__ccovbit2_6& (0+7)	; OFFSET
  4065  069C  00000000           	ddw	0	; Reserved
  4066  06A0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4067  06A4  00000003           	ddw	3	; NUM_RANGES
  4068  06A8  000002E4           	ddw	__ccov88_start_blk2	; block 2 START_ADDR
  4069  06AC  000002E9           	ddw	__ccov88_end_blk2	; block 2 END_ADDR
  4070  06B0  000002DF           	ddw	__ccov87_start_blk1	; block 1 START_ADDR
  4071  06B4  000002E4           	ddw	__ccov87_end_blk1	; block 1 END_ADDR
  4072  06B8  000002D1           	ddw	_watch_dog_incrementing_timer	; block 0 START_ADDR
  4073  06BC  000002DF           	ddw	__ccov86_end_blk0	; block 0 END_ADDR
  4074                           
  4075                           ; Function: watch_dog_incrementing_timer, coverage: 6,5,4,0
  4076  06C0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4077  06C4  00000071           	ddw	__ccovbit6_7/(0+8)	; CC_ADDR
  4078  06C8  00000001           	ddw	1	; NUM_POINTS
  4079  06CC  00000006           	ddw	__ccovbit6_7& (0+7)	; OFFSET
  4080  06D0  00000000           	ddw	0	; Reserved
  4081  06D4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4082  06D8  00000004           	ddw	4	; NUM_RANGES
  4083  06DC  000002FC           	ddw	__ccov91_start_blk6	; block 6 START_ADDR
  4084  06E0  00000301           	ddw	__ccov91_end_blk6	; block 6 END_ADDR
  4085  06E4  000002F7           	ddw	__ccov90_start_blk5	; block 5 START_ADDR
  4086  06E8  000002FC           	ddw	__ccov90_end_blk5	; block 5 END_ADDR
  4087  06EC  000002E9           	ddw	__ccov89_start_blk4	; block 4 START_ADDR
  4088  06F0  000002F7           	ddw	__ccov89_end_blk4	; block 4 END_ADDR
  4089  06F4  000002D1           	ddw	_watch_dog_incrementing_timer	; block 0 START_ADDR
  4090  06F8  000002DF           	ddw	__ccov86_end_blk0	; block 0 END_ADDR
  4091                           
  4092                           ; Function: watch_dog_incrementing_timer, coverage: 10,9,8,4,0
  4093  06FC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4094  0700  00000071           	ddw	__ccovbit10_8/(0+8)	; CC_ADDR
  4095  0704  00000001           	ddw	1	; NUM_POINTS
  4096  0708  00000005           	ddw	__ccovbit10_8& (0+7)	; OFFSET
  4097  070C  00000000           	ddw	0	; Reserved
  4098  0710  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4099  0714  00000005           	ddw	5	; NUM_RANGES
  4100  0718  00000314           	ddw	__ccov94_start_blk10	; block 10 START_ADDR
  4101  071C  00000319           	ddw	__ccov94_end_blk10	; block 10 END_ADDR
  4102  0720  0000030F           	ddw	__ccov93_start_blk9	; block 9 START_ADDR
  4103  0724  00000314           	ddw	__ccov93_end_blk9	; block 9 END_ADDR
  4104  0728  00000301           	ddw	__ccov92_start_blk8	; block 8 START_ADDR
  4105  072C  0000030F           	ddw	__ccov92_end_blk8	; block 8 END_ADDR
  4106  0730  000002E9           	ddw	__ccov89_start_blk4	; block 4 START_ADDR
  4107  0734  000002F7           	ddw	__ccov89_end_blk4	; block 4 END_ADDR
  4108  0738  000002D1           	ddw	_watch_dog_incrementing_timer	; block 0 START_ADDR
  4109  073C  000002DF           	ddw	__ccov86_end_blk0	; block 0 END_ADDR
  4110                           
  4111                           ; Function: watch_dog_incrementing_timer, coverage: 14,13,12,8,4,0
  4112  0740  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4113  0744  00000071           	ddw	__ccovbit14_9/(0+8)	; CC_ADDR
  4114  0748  00000001           	ddw	1	; NUM_POINTS
  4115  074C  00000004           	ddw	__ccovbit14_9& (0+7)	; OFFSET
  4116  0750  00000000           	ddw	0	; Reserved
  4117  0754  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4118  0758  00000006           	ddw	6	; NUM_RANGES
  4119  075C  0000032C           	ddw	__ccov97_start_blk14	; block 14 START_ADDR
  4120  0760  00000331           	ddw	__ccov97_end_blk14	; block 14 END_ADDR
  4121  0764  00000327           	ddw	__ccov96_start_blk13	; block 13 START_ADDR
  4122  0768  0000032C           	ddw	__ccov96_end_blk13	; block 13 END_ADDR
  4123  076C  00000319           	ddw	__ccov95_start_blk12	; block 12 START_ADDR
  4124  0770  00000327           	ddw	__ccov95_end_blk12	; block 12 END_ADDR
  4125  0774  00000301           	ddw	__ccov92_start_blk8	; block 8 START_ADDR
  4126  0778  0000030F           	ddw	__ccov92_end_blk8	; block 8 END_ADDR
  4127  077C  000002E9           	ddw	__ccov89_start_blk4	; block 4 START_ADDR
  4128  0780  000002F7           	ddw	__ccov89_end_blk4	; block 4 END_ADDR
  4129  0784  000002D1           	ddw	_watch_dog_incrementing_timer	; block 0 START_ADDR
  4130  0788  000002DF           	ddw	__ccov86_end_blk0	; block 0 END_ADDR
  4131                           
  4132                           ; Function: watch_dog_incrementing_timer, coverage: 17,16,12,8,4,0
  4133  078C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4134  0790  00000071           	ddw	__ccovbit17_10/(0+8)	; CC_ADDR
  4135  0794  00000001           	ddw	1	; NUM_POINTS
  4136  0798  00000003           	ddw	__ccovbit17_10& (0+7)	; OFFSET
  4137  079C  00000000           	ddw	0	; Reserved
  4138  07A0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4139  07A4  00000006           	ddw	6	; NUM_RANGES
  4140  07A8  00000336           	ddw	__ccov99_start_blk17	; block 17 START_ADDR
  4141  07AC  0000033A           	ddw	__ccov99_end_blk17	; block 17 END_ADDR
  4142  07B0  00000331           	ddw	__ccov98_start_blk16	; block 16 START_ADDR
  4143  07B4  00000336           	ddw	__ccov98_end_blk16	; block 16 END_ADDR
  4144  07B8  00000319           	ddw	__ccov95_start_blk12	; block 12 START_ADDR
  4145  07BC  00000327           	ddw	__ccov95_end_blk12	; block 12 END_ADDR
  4146  07C0  00000301           	ddw	__ccov92_start_blk8	; block 8 START_ADDR
  4147  07C4  0000030F           	ddw	__ccov92_end_blk8	; block 8 END_ADDR
  4148  07C8  000002E9           	ddw	__ccov89_start_blk4	; block 4 START_ADDR
  4149  07CC  000002F7           	ddw	__ccov89_end_blk4	; block 4 END_ADDR
  4150  07D0  000002D1           	ddw	_watch_dog_incrementing_timer	; block 0 START_ADDR
  4151  07D4  000002DF           	ddw	__ccov86_end_blk0	; block 0 END_ADDR
  4152                           
  4153                           ; Function: watch_dog_incrementing_timer, coverage: 22,0
  4154  07D8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4155  07DC  00000071           	ddw	__ccovbit22_11/(0+8)	; CC_ADDR
  4156  07E0  00000001           	ddw	1	; NUM_POINTS
  4157  07E4  00000002           	ddw	__ccovbit22_11& (0+7)	; OFFSET
  4158  07E8  00000000           	ddw	0	; Reserved
  4159  07EC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4160  07F0  00000002           	ddw	2	; NUM_RANGES
  4161  07F4  0000033A           	ddw	__ccov100_start_blk22	; block 22 START_ADDR
  4162  07F8  0000033C           	ddw	__end_of_watch_dog_incrementing_timer	; block 22 END_ADDR
  4163  07FC  000002D1           	ddw	_watch_dog_incrementing_timer	; block 0 START_ADDR
  4164  0800  000002DF           	ddw	__ccov86_end_blk0	; block 0 END_ADDR
  4165                           
  4166                           ; Function: set_watchdog_timer_128ms, coverage: 1,0
  4167  0804  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4168  0808  00000071           	ddw	__ccovbit1_12/(0+8)	; CC_ADDR
  4169  080C  00000001           	ddw	1	; NUM_POINTS
  4170  0810  00000001           	ddw	__ccovbit1_12& (0+7)	; OFFSET
  4171  0814  00000000           	ddw	0	; Reserved
  4172  0818  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4173  081C  00000002           	ddw	2	; NUM_RANGES
  4174  0820  00000402           	ddw	__ccov104_start_blk1	; block 1 START_ADDR
  4175  0824  00000404           	ddw	__end_of_set_watchdog_timer_128ms	; block 1 END_ADDR
  4176  0828  000003FD           	ddw	_set_watchdog_timer_128ms	; block 0 START_ADDR
  4177  082C  00000402           	ddw	__ccov103_end_blk0	; block 0 END_ADDR
  4178                           
  4179                           ; Function: set_watchdog_timer_256ms, coverage: 1,0
  4180  0830  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4181  0834  00000071           	ddw	__ccovbit1_13/(0+8)	; CC_ADDR
  4182  0838  00000001           	ddw	1	; NUM_POINTS
  4183  083C  00000000           	ddw	__ccovbit1_13& (0+7)	; OFFSET
  4184  0840  00000000           	ddw	0	; Reserved
  4185  0844  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4186  0848  00000002           	ddw	2	; NUM_RANGES
  4187  084C  000003F4           	ddw	__ccov106_start_blk1	; block 1 START_ADDR
  4188  0850  000003F6           	ddw	__end_of_set_watchdog_timer_256ms	; block 1 END_ADDR
  4189  0854  000003EF           	ddw	_set_watchdog_timer_256ms	; block 0 START_ADDR
  4190  0858  000003F4           	ddw	__ccov105_end_blk0	; block 0 END_ADDR
  4191                           
  4192                           ; Function: set_watchdog_timer_1s, coverage: 1,0
  4193  085C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4194  0860  00000070           	ddw	__ccovbit1_14/(0+8)	; CC_ADDR
  4195  0864  00000001           	ddw	1	; NUM_POINTS
  4196  0868  00000007           	ddw	__ccovbit1_14& (0+7)	; OFFSET
  4197  086C  00000000           	ddw	0	; Reserved
  4198  0870  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4199  0874  00000002           	ddw	2	; NUM_RANGES
  4200  0878  000003FB           	ddw	__ccov108_start_blk1	; block 1 START_ADDR
  4201  087C  000003FD           	ddw	__end_of_set_watchdog_timer_1s	; block 1 END_ADDR
  4202  0880  000003F6           	ddw	_set_watchdog_timer_1s	; block 0 START_ADDR
  4203  0884  000003FB           	ddw	__ccov107_end_blk0	; block 0 END_ADDR
  4204                           
  4205                           ; Function: set_watchdog_timer_4s, coverage: 1,0
  4206  0888  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4207  088C  00000070           	ddw	__ccovbit1_15/(0+8)	; CC_ADDR
  4208  0890  00000001           	ddw	1	; NUM_POINTS
  4209  0894  00000006           	ddw	__ccovbit1_15& (0+7)	; OFFSET
  4210  0898  00000000           	ddw	0	; Reserved
  4211  089C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4212  08A0  00000002           	ddw	2	; NUM_RANGES
  4213  08A4  000003E6           	ddw	__ccov110_start_blk1	; block 1 START_ADDR
  4214  08A8  000003E8           	ddw	__end_of_set_watchdog_timer_4s	; block 1 END_ADDR
  4215  08AC  000003E1           	ddw	_set_watchdog_timer_4s	; block 0 START_ADDR
  4216  08B0  000003E6           	ddw	__ccov109_end_blk0	; block 0 END_ADDR
  4217                           
  4218                           ; Function: set_watchdog_timer_256s, coverage: 1,0
  4219  08B4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4220  08B8  00000070           	ddw	__ccovbit1_16/(0+8)	; CC_ADDR
  4221  08BC  00000001           	ddw	1	; NUM_POINTS
  4222  08C0  00000005           	ddw	__ccovbit1_16& (0+7)	; OFFSET
  4223  08C4  00000000           	ddw	0	; Reserved
  4224  08C8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4225  08CC  00000002           	ddw	2	; NUM_RANGES
  4226  08D0  000003ED           	ddw	__ccov112_start_blk1	; block 1 START_ADDR
  4227  08D4  000003EF           	ddw	__end_of_set_watchdog_timer_256s	; block 1 END_ADDR
  4228  08D8  000003E8           	ddw	_set_watchdog_timer_256s	; block 0 START_ADDR
  4229  08DC  000003ED           	ddw	__ccov111_end_blk0	; block 0 END_ADDR
  4230                           
  4231                           ; Function: enable_watchdog_timer, coverage: 1,0
  4232  08E0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4233  08E4  00000070           	ddw	__ccovbit1_17/(0+8)	; CC_ADDR
  4234  08E8  00000001           	ddw	1	; NUM_POINTS
  4235  08EC  00000004           	ddw	__ccovbit1_17& (0+7)	; OFFSET
  4236  08F0  00000000           	ddw	0	; Reserved
  4237  08F4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4238  08F8  00000002           	ddw	2	; NUM_RANGES
  4239  08FC  0000040C           	ddw	__ccov114_start_blk1	; block 1 START_ADDR
  4240  0900  0000040E           	ddw	__end_of_enable_watchdog_timer	; block 1 END_ADDR
  4241  0904  0000040A           	ddw	_enable_watchdog_timer	; block 0 START_ADDR
  4242  0908  0000040C           	ddw	__ccov113_end_blk0	; block 0 END_ADDR
  4243                           
  4244                           ; Function: disable_watchdog_timer, coverage: 1,0
  4245  090C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4246  0910  00000070           	ddw	__ccovbit1_18/(0+8)	; CC_ADDR
  4247  0914  00000001           	ddw	1	; NUM_POINTS
  4248  0918  00000003           	ddw	__ccovbit1_18& (0+7)	; OFFSET
  4249  091C  00000000           	ddw	0	; Reserved
  4250  0920  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4251  0924  00000002           	ddw	2	; NUM_RANGES
  4252  0928  00000410           	ddw	__ccov116_start_blk1	; block 1 START_ADDR
  4253  092C  00000412           	ddw	__end_of_disable_watchdog_timer	; block 1 END_ADDR
  4254  0930  0000040E           	ddw	_disable_watchdog_timer	; block 0 START_ADDR
  4255  0934  00000410           	ddw	__ccov115_end_blk0	; block 0 END_ADDR
  4256                           
  4257                           ; Function: enable_external_interrupt, coverage: 1,0
  4258  0938  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4259  093C  00000070           	ddw	__ccovbit1_19/(0+8)	; CC_ADDR
  4260  0940  00000001           	ddw	1	; NUM_POINTS
  4261  0944  00000002           	ddw	__ccovbit1_19& (0+7)	; OFFSET
  4262  0948  00000000           	ddw	0	; Reserved
  4263  094C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4264  0950  00000002           	ddw	2	; NUM_RANGES
  4265  0954  00000413           	ddw	__ccov118_start_blk1	; block 1 START_ADDR
  4266  0958  00000415           	ddw	__end_of_enable_external_interrupt	; block 1 END_ADDR
  4267  095C  00000412           	ddw	_enable_external_interrupt	; block 0 START_ADDR
  4268  0960  00000413           	ddw	__ccov117_end_blk0	; block 0 END_ADDR
  4269                           
  4270                           ; Function: disable_external_interrupt, coverage: 1,0
  4271  0964  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4272  0968  00000070           	ddw	__ccovbit1_20/(0+8)	; CC_ADDR
  4273  096C  00000001           	ddw	1	; NUM_POINTS
  4274  0970  00000001           	ddw	__ccovbit1_20& (0+7)	; OFFSET
  4275  0974  00000000           	ddw	0	; Reserved
  4276  0978  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4277  097C  00000002           	ddw	2	; NUM_RANGES
  4278  0980  00000416           	ddw	__ccov120_start_blk1	; block 1 START_ADDR
  4279  0984  00000418           	ddw	__end_of_disable_external_interrupt	; block 1 END_ADDR
  4280  0988  00000415           	ddw	_disable_external_interrupt	; block 0 START_ADDR
  4281  098C  00000416           	ddw	__ccov119_end_blk0	; block 0 END_ADDR
  4282                           
  4283                           ; Function: my_isr, coverage: 1,0
  4284  0990  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4285  0994  00000070           	ddw	__ccovbit1_21/(0+8)	; CC_ADDR
  4286  0998  00000001           	ddw	1	; NUM_POINTS
  4287  099C  00000000           	ddw	__ccovbit1_21& (0+7)	; OFFSET
  4288  09A0  00000000           	ddw	0	; Reserved
  4289  09A4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4290  09A8  00000002           	ddw	2	; NUM_RANGES
  4291  09AC  0000000A           	ddw	__ccov122_start_blk1	; block 1 START_ADDR
  4292  09B0  00000010           	ddw	__ccov122_end_blk1	; block 1 END_ADDR
  4293  09B4  00000004           	ddw	_my_isr	; block 0 START_ADDR
  4294  09B8  0000000A           	ddw	__ccov121_end_blk0	; block 0 END_ADDR
  4295                           
  4296                           ; Function: my_isr, coverage: 3,10,1,0
  4297  09BC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4298  09C0  00000025           	ddw	__ccovbit3_22/(0+8)	; CC_ADDR
  4299  09C4  00000001           	ddw	1	; NUM_POINTS
  4300  09C8  00000000           	ddw	__ccovbit3_22& (0+7)	; OFFSET
  4301  09CC  00000000           	ddw	0	; Reserved
  4302  09D0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4303  09D4  00000004           	ddw	4	; NUM_RANGES
  4304  09D8  00000010           	ddw	__ccov123_start_blk3	; block 3 START_ADDR
  4305  09DC  0000001A           	ddw	__ccov123_end_blk3	; block 3 END_ADDR
  4306  09E0  00000022           	ddw	__ccov127_start_blk10	; block 10 START_ADDR
  4307  09E4  00000035           	ddw	__ccov127_end_blk10	; block 10 END_ADDR
  4308  09E8  0000000A           	ddw	__ccov122_start_blk1	; block 1 START_ADDR
  4309  09EC  00000010           	ddw	__ccov122_end_blk1	; block 1 END_ADDR
  4310  09F0  00000004           	ddw	_my_isr	; block 0 START_ADDR
  4311  09F4  0000000A           	ddw	__ccov121_end_blk0	; block 0 END_ADDR
  4312                           
  4313                           ; Function: my_isr, coverage: 7,6,5,10,1,0
  4314  09F8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4315  09FC  00000024           	ddw	__ccovbit7_23/(0+8)	; CC_ADDR
  4316  0A00  00000001           	ddw	1	; NUM_POINTS
  4317  0A04  00000007           	ddw	__ccovbit7_23& (0+7)	; OFFSET
  4318  0A08  00000000           	ddw	0	; Reserved
  4319  0A0C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4320  0A10  00000006           	ddw	6	; NUM_RANGES
  4321  0A14  0000001D           	ddw	__ccov126_start_blk7	; block 7 START_ADDR
  4322  0A18  00000022           	ddw	__ccov126_end_blk7	; block 7 END_ADDR
  4323  0A1C  0000001B           	ddw	__ccov125_start_blk6	; block 6 START_ADDR
  4324  0A20  0000001D           	ddw	__ccov125_end_blk6	; block 6 END_ADDR
  4325  0A24  0000001A           	ddw	__ccov124_start_blk5	; block 5 START_ADDR
  4326  0A28  0000001B           	ddw	__ccov124_end_blk5	; block 5 END_ADDR
  4327  0A2C  00000022           	ddw	__ccov127_start_blk10	; block 10 START_ADDR
  4328  0A30  00000035           	ddw	__ccov127_end_blk10	; block 10 END_ADDR
  4329  0A34  0000000A           	ddw	__ccov122_start_blk1	; block 1 START_ADDR
  4330  0A38  00000010           	ddw	__ccov122_end_blk1	; block 1 END_ADDR
  4331  0A3C  00000004           	ddw	_my_isr	; block 0 START_ADDR
  4332  0A40  0000000A           	ddw	__ccov121_end_blk0	; block 0 END_ADDR
  4333                           
  4334                           ; Function: my_isr, coverage: 11,10,1,0
  4335  0A44  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4336  0A48  00000024           	ddw	__ccovbit11_24/(0+8)	; CC_ADDR
  4337  0A4C  00000001           	ddw	1	; NUM_POINTS
  4338  0A50  00000006           	ddw	__ccovbit11_24& (0+7)	; OFFSET
  4339  0A54  00000000           	ddw	0	; Reserved
  4340  0A58  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4341  0A5C  00000004           	ddw	4	; NUM_RANGES
  4342  0A60  00000035           	ddw	__ccov128_start_blk11	; block 11 START_ADDR
  4343  0A64  00000038           	ddw	__ccov128_end_blk11	; block 11 END_ADDR
  4344  0A68  00000022           	ddw	__ccov127_start_blk10	; block 10 START_ADDR
  4345  0A6C  00000035           	ddw	__ccov127_end_blk10	; block 10 END_ADDR
  4346  0A70  0000000A           	ddw	__ccov122_start_blk1	; block 1 START_ADDR
  4347  0A74  00000010           	ddw	__ccov122_end_blk1	; block 1 END_ADDR
  4348  0A78  00000004           	ddw	_my_isr	; block 0 START_ADDR
  4349  0A7C  0000000A           	ddw	__ccov121_end_blk0	; block 0 END_ADDR
  4350                           
  4351                           ; Function: my_isr, coverage: 13,12,0
  4352  0A80  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4353  0A84  00000024           	ddw	__ccovbit13_25/(0+8)	; CC_ADDR
  4354  0A88  00000001           	ddw	1	; NUM_POINTS
  4355  0A8C  00000005           	ddw	__ccovbit13_25& (0+7)	; OFFSET
  4356  0A90  00000000           	ddw	0	; Reserved
  4357  0A94  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4358  0A98  00000003           	ddw	3	; NUM_RANGES
  4359  0A9C  0000003D           	ddw	__ccov130_start_blk13	; block 13 START_ADDR
  4360  0AA0  00000043           	ddw	__ccov130_end_blk13	; block 13 END_ADDR
  4361  0AA4  00000038           	ddw	__ccov129_start_blk12	; block 12 START_ADDR
  4362  0AA8  0000003D           	ddw	__ccov129_end_blk12	; block 12 END_ADDR
  4363  0AAC  00000004           	ddw	_my_isr	; block 0 START_ADDR
  4364  0AB0  0000000A           	ddw	__ccov121_end_blk0	; block 0 END_ADDR
  4365                           
  4366                           ; Function: my_isr, coverage: 15,14,13,12,0
  4367  0AB4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4368  0AB8  00000024           	ddw	__ccovbit15_26/(0+8)	; CC_ADDR
  4369  0ABC  00000001           	ddw	1	; NUM_POINTS
  4370  0AC0  00000004           	ddw	__ccovbit15_26& (0+7)	; OFFSET
  4371  0AC4  00000000           	ddw	0	; Reserved
  4372  0AC8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4373  0ACC  00000005           	ddw	5	; NUM_RANGES
  4374  0AD0  00000050           	ddw	__ccov132_start_blk15	; block 15 START_ADDR
  4375  0AD4  00000056           	ddw	__ccov132_end_blk15	; block 15 END_ADDR
  4376  0AD8  00000043           	ddw	__ccov131_start_blk14	; block 14 START_ADDR
  4377  0ADC  00000050           	ddw	__ccov131_end_blk14	; block 14 END_ADDR
  4378  0AE0  0000003D           	ddw	__ccov130_start_blk13	; block 13 START_ADDR
  4379  0AE4  00000043           	ddw	__ccov130_end_blk13	; block 13 END_ADDR
  4380  0AE8  00000038           	ddw	__ccov129_start_blk12	; block 12 START_ADDR
  4381  0AEC  0000003D           	ddw	__ccov129_end_blk12	; block 12 END_ADDR
  4382  0AF0  00000004           	ddw	_my_isr	; block 0 START_ADDR
  4383  0AF4  0000000A           	ddw	__ccov121_end_blk0	; block 0 END_ADDR
  4384                           
  4385                           ; Function: my_isr, coverage: 17,16,14,13,12,0
  4386  0AF8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4387  0AFC  00000024           	ddw	__ccovbit17_27/(0+8)	; CC_ADDR
  4388  0B00  00000001           	ddw	1	; NUM_POINTS
  4389  0B04  00000003           	ddw	__ccovbit17_27& (0+7)	; OFFSET
  4390  0B08  00000000           	ddw	0	; Reserved
  4391  0B0C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4392  0B10  00000006           	ddw	6	; NUM_RANGES
  4393  0B14  00000064           	ddw	__ccov134_start_blk17	; block 17 START_ADDR
  4394  0B18  0000006A           	ddw	__ccov134_end_blk17	; block 17 END_ADDR
  4395  0B1C  00000056           	ddw	__ccov133_start_blk16	; block 16 START_ADDR
  4396  0B20  00000064           	ddw	__ccov133_end_blk16	; block 16 END_ADDR
  4397  0B24  00000043           	ddw	__ccov131_start_blk14	; block 14 START_ADDR
  4398  0B28  00000050           	ddw	__ccov131_end_blk14	; block 14 END_ADDR
  4399  0B2C  0000003D           	ddw	__ccov130_start_blk13	; block 13 START_ADDR
  4400  0B30  00000043           	ddw	__ccov130_end_blk13	; block 13 END_ADDR
  4401  0B34  00000038           	ddw	__ccov129_start_blk12	; block 12 START_ADDR
  4402  0B38  0000003D           	ddw	__ccov129_end_blk12	; block 12 END_ADDR
  4403  0B3C  00000004           	ddw	_my_isr	; block 0 START_ADDR
  4404  0B40  0000000A           	ddw	__ccov121_end_blk0	; block 0 END_ADDR
  4405                           
  4406                           ; Function: my_isr, coverage: 21,20,19,16,14,13,12,0
  4407  0B44  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4408  0B48  00000024           	ddw	__ccovbit21_28/(0+8)	; CC_ADDR
  4409  0B4C  00000001           	ddw	1	; NUM_POINTS
  4410  0B50  00000002           	ddw	__ccovbit21_28& (0+7)	; OFFSET
  4411  0B54  00000000           	ddw	0	; Reserved
  4412  0B58  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4413  0B5C  00000008           	ddw	8	; NUM_RANGES
  4414  0B60  0000006E           	ddw	__ccov137_start_blk21	; block 21 START_ADDR
  4415  0B64  00000072           	ddw	__ccov137_end_blk21	; block 21 END_ADDR
  4416  0B68  0000006C           	ddw	__ccov136_start_blk20	; block 20 START_ADDR
  4417  0B6C  0000006E           	ddw	__ccov136_end_blk20	; block 20 END_ADDR
  4418  0B70  0000006A           	ddw	__ccov135_start_blk19	; block 19 START_ADDR
  4419  0B74  0000006C           	ddw	__ccov135_end_blk19	; block 19 END_ADDR
  4420  0B78  00000056           	ddw	__ccov133_start_blk16	; block 16 START_ADDR
  4421  0B7C  00000064           	ddw	__ccov133_end_blk16	; block 16 END_ADDR
  4422  0B80  00000043           	ddw	__ccov131_start_blk14	; block 14 START_ADDR
  4423  0B84  00000050           	ddw	__ccov131_end_blk14	; block 14 END_ADDR
  4424  0B88  0000003D           	ddw	__ccov130_start_blk13	; block 13 START_ADDR
  4425  0B8C  00000043           	ddw	__ccov130_end_blk13	; block 13 END_ADDR
  4426  0B90  00000038           	ddw	__ccov129_start_blk12	; block 12 START_ADDR
  4427  0B94  0000003D           	ddw	__ccov129_end_blk12	; block 12 END_ADDR
  4428  0B98  00000004           	ddw	_my_isr	; block 0 START_ADDR
  4429  0B9C  0000000A           	ddw	__ccov121_end_blk0	; block 0 END_ADDR
  4430                           
  4431                           ; Function: my_isr, coverage: 24,12,0
  4432  0BA0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4433  0BA4  00000024           	ddw	__ccovbit24_29/(0+8)	; CC_ADDR
  4434  0BA8  00000001           	ddw	1	; NUM_POINTS
  4435  0BAC  00000001           	ddw	__ccovbit24_29& (0+7)	; OFFSET
  4436  0BB0  00000000           	ddw	0	; Reserved
  4437  0BB4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4438  0BB8  00000003           	ddw	3	; NUM_RANGES
  4439  0BBC  00000072           	ddw	__ccov138_start_blk24	; block 24 START_ADDR
  4440  0BC0  00000076           	ddw	__end_of_my_isr	; block 24 END_ADDR
  4441  0BC4  00000038           	ddw	__ccov129_start_blk12	; block 12 START_ADDR
  4442  0BC8  0000003D           	ddw	__ccov129_end_blk12	; block 12 END_ADDR
  4443  0BCC  00000004           	ddw	_my_isr	; block 0 START_ADDR
  4444  0BD0  0000000A           	ddw	__ccov121_end_blk0	; block 0 END_ADDR
  4445                           
  4446                           ; Function: checkState1, coverage: 3,2,80,0
  4447  0BD4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4448  0BD8  00000024           	ddw	__ccovbit3_30/(0+8)	; CC_ADDR
  4449  0BDC  00000001           	ddw	1	; NUM_POINTS
  4450  0BE0  00000000           	ddw	__ccovbit3_30& (0+7)	; OFFSET
  4451  0BE4  00000000           	ddw	0	; Reserved
  4452  0BE8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4453  0BEC  00000004           	ddw	4	; NUM_RANGES
  4454  0BF0  00000097           	ddw	__ccov141_start_blk3	; block 3 START_ADDR
  4455  0BF4  0000009D           	ddw	__ccov141_end_blk3	; block 3 END_ADDR
  4456  0BF8  00000091           	ddw	__ccov140_start_blk2	; block 2 START_ADDR
  4457  0BFC  00000097           	ddw	__ccov140_end_blk2	; block 2 END_ADDR
  4458  0C00  000001D1           	ddw	__ccov179_start_blk80	; block 80 START_ADDR
  4459  0C04  000001F7           	ddw	__ccov179_end_blk80	; block 80 END_ADDR
  4460  0C08  00000090           	ddw	_checkState1	; block 0 START_ADDR
  4461  0C0C  00000091           	ddw	__ccov139_end_blk0	; block 0 END_ADDR
  4462                           
  4463                           ; Function: checkState1, coverage: 4,80,0
  4464  0C10  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4465  0C14  00000023           	ddw	__ccovbit4_31/(0+8)	; CC_ADDR
  4466  0C18  00000001           	ddw	1	; NUM_POINTS
  4467  0C1C  00000007           	ddw	__ccovbit4_31& (0+7)	; OFFSET
  4468  0C20  00000000           	ddw	0	; Reserved
  4469  0C24  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4470  0C28  00000003           	ddw	3	; NUM_RANGES
  4471  0C2C  0000009D           	ddw	__ccov142_start_blk4	; block 4 START_ADDR
  4472  0C30  000000A4           	ddw	__ccov142_end_blk4	; block 4 END_ADDR
  4473  0C34  000001D1           	ddw	__ccov179_start_blk80	; block 80 START_ADDR
  4474  0C38  000001F7           	ddw	__ccov179_end_blk80	; block 80 END_ADDR
  4475  0C3C  00000090           	ddw	_checkState1	; block 0 START_ADDR
  4476  0C40  00000091           	ddw	__ccov139_end_blk0	; block 0 END_ADDR
  4477                           
  4478                           ; Function: checkState1, coverage: 6,80,0
  4479  0C44  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4480  0C48  00000023           	ddw	__ccovbit6_32/(0+8)	; CC_ADDR
  4481  0C4C  00000001           	ddw	1	; NUM_POINTS
  4482  0C50  00000006           	ddw	__ccovbit6_32& (0+7)	; OFFSET
  4483  0C54  00000000           	ddw	0	; Reserved
  4484  0C58  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4485  0C5C  00000003           	ddw	3	; NUM_RANGES
  4486  0C60  000000A4           	ddw	__ccov143_start_blk6	; block 6 START_ADDR
  4487  0C64  000000AD           	ddw	__ccov143_end_blk6	; block 6 END_ADDR
  4488  0C68  000001D1           	ddw	__ccov179_start_blk80	; block 80 START_ADDR
  4489  0C6C  000001F7           	ddw	__ccov179_end_blk80	; block 80 END_ADDR
  4490  0C70  00000090           	ddw	_checkState1	; block 0 START_ADDR
  4491  0C74  00000091           	ddw	__ccov139_end_blk0	; block 0 END_ADDR
  4492                           
  4493                           ; Function: checkState1, coverage: 7,80,0
  4494  0C78  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4495  0C7C  00000023           	ddw	__ccovbit7_33/(0+8)	; CC_ADDR
  4496  0C80  00000001           	ddw	1	; NUM_POINTS
  4497  0C84  00000005           	ddw	__ccovbit7_33& (0+7)	; OFFSET
  4498  0C88  00000000           	ddw	0	; Reserved
  4499  0C8C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4500  0C90  00000003           	ddw	3	; NUM_RANGES
  4501  0C94  000000AD           	ddw	__ccov144_start_blk7	; block 7 START_ADDR
  4502  0C98  000000B2           	ddw	__ccov144_end_blk7	; block 7 END_ADDR
  4503  0C9C  000001D1           	ddw	__ccov179_start_blk80	; block 80 START_ADDR
  4504  0CA0  000001F7           	ddw	__ccov179_end_blk80	; block 80 END_ADDR
  4505  0CA4  00000090           	ddw	_checkState1	; block 0 START_ADDR
  4506  0CA8  00000091           	ddw	__ccov139_end_blk0	; block 0 END_ADDR
  4507                           
  4508                           ; Function: checkState1, coverage: 8,80,0
  4509  0CAC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4510  0CB0  00000023           	ddw	__ccovbit8_34/(0+8)	; CC_ADDR
  4511  0CB4  00000001           	ddw	1	; NUM_POINTS
  4512  0CB8  00000004           	ddw	__ccovbit8_34& (0+7)	; OFFSET
  4513  0CBC  00000000           	ddw	0	; Reserved
  4514  0CC0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4515  0CC4  00000003           	ddw	3	; NUM_RANGES
  4516  0CC8  000000B2           	ddw	__ccov145_start_blk8	; block 8 START_ADDR
  4517  0CCC  000000B9           	ddw	__ccov145_end_blk8	; block 8 END_ADDR
  4518  0CD0  000001D1           	ddw	__ccov179_start_blk80	; block 80 START_ADDR
  4519  0CD4  000001F7           	ddw	__ccov179_end_blk80	; block 80 END_ADDR
  4520  0CD8  00000090           	ddw	_checkState1	; block 0 START_ADDR
  4521  0CDC  00000091           	ddw	__ccov139_end_blk0	; block 0 END_ADDR
  4522                           
  4523                           ; Function: checkState1, coverage: 10,80,0
  4524  0CE0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4525  0CE4  00000023           	ddw	__ccovbit10_35/(0+8)	; CC_ADDR
  4526  0CE8  00000001           	ddw	1	; NUM_POINTS
  4527  0CEC  00000003           	ddw	__ccovbit10_35& (0+7)	; OFFSET
  4528  0CF0  00000000           	ddw	0	; Reserved
  4529  0CF4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4530  0CF8  00000003           	ddw	3	; NUM_RANGES
  4531  0CFC  000000B9           	ddw	__ccov146_start_blk10	; block 10 START_ADDR
  4532  0D00  000000C2           	ddw	__ccov146_end_blk10	; block 10 END_ADDR
  4533  0D04  000001D1           	ddw	__ccov179_start_blk80	; block 80 START_ADDR
  4534  0D08  000001F7           	ddw	__ccov179_end_blk80	; block 80 END_ADDR
  4535  0D0C  00000090           	ddw	_checkState1	; block 0 START_ADDR
  4536  0D10  00000091           	ddw	__ccov139_end_blk0	; block 0 END_ADDR
  4537                           
  4538                           ; Function: checkState1, coverage: 11,80,0
  4539  0D14  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4540  0D18  00000023           	ddw	__ccovbit11_36/(0+8)	; CC_ADDR
  4541  0D1C  00000001           	ddw	1	; NUM_POINTS
  4542  0D20  00000002           	ddw	__ccovbit11_36& (0+7)	; OFFSET
  4543  0D24  00000000           	ddw	0	; Reserved
  4544  0D28  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4545  0D2C  00000003           	ddw	3	; NUM_RANGES
  4546  0D30  000000C2           	ddw	__ccov147_start_blk11	; block 11 START_ADDR
  4547  0D34  000000C9           	ddw	__ccov147_end_blk11	; block 11 END_ADDR
  4548  0D38  000001D1           	ddw	__ccov179_start_blk80	; block 80 START_ADDR
  4549  0D3C  000001F7           	ddw	__ccov179_end_blk80	; block 80 END_ADDR
  4550  0D40  00000090           	ddw	_checkState1	; block 0 START_ADDR
  4551  0D44  00000091           	ddw	__ccov139_end_blk0	; block 0 END_ADDR
  4552                           
  4553                           ; Function: checkState1, coverage: 14,13,10,80,0
  4554  0D48  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4555  0D4C  00000023           	ddw	__ccovbit14_37/(0+8)	; CC_ADDR
  4556  0D50  00000001           	ddw	1	; NUM_POINTS
  4557  0D54  00000001           	ddw	__ccovbit14_37& (0+7)	; OFFSET
  4558  0D58  00000000           	ddw	0	; Reserved
  4559  0D5C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4560  0D60  00000005           	ddw	5	; NUM_RANGES
  4561  0D64  000000CD           	ddw	__ccov149_start_blk14	; block 14 START_ADDR
  4562  0D68  000000D3           	ddw	__ccov149_end_blk14	; block 14 END_ADDR
  4563  0D6C  000000C9           	ddw	__ccov148_start_blk13	; block 13 START_ADDR
  4564  0D70  000000CD           	ddw	__ccov148_end_blk13	; block 13 END_ADDR
  4565  0D74  000000B9           	ddw	__ccov146_start_blk10	; block 10 START_ADDR
  4566  0D78  000000C2           	ddw	__ccov146_end_blk10	; block 10 END_ADDR
  4567  0D7C  000001D1           	ddw	__ccov179_start_blk80	; block 80 START_ADDR
  4568  0D80  000001F7           	ddw	__ccov179_end_blk80	; block 80 END_ADDR
  4569  0D84  00000090           	ddw	_checkState1	; block 0 START_ADDR
  4570  0D88  00000091           	ddw	__ccov139_end_blk0	; block 0 END_ADDR
  4571                           
  4572                           ; Function: checkState1, coverage: 17,80,0
  4573  0D8C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4574  0D90  00000023           	ddw	__ccovbit17_38/(0+8)	; CC_ADDR
  4575  0D94  00000001           	ddw	1	; NUM_POINTS
  4576  0D98  00000000           	ddw	__ccovbit17_38& (0+7)	; OFFSET
  4577  0D9C  00000000           	ddw	0	; Reserved
  4578  0DA0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4579  0DA4  00000003           	ddw	3	; NUM_RANGES
  4580  0DA8  000000D3           	ddw	__ccov150_start_blk17	; block 17 START_ADDR
  4581  0DAC  000000D5           	ddw	__ccov150_end_blk17	; block 17 END_ADDR
  4582  0DB0  000001D1           	ddw	__ccov179_start_blk80	; block 80 START_ADDR
  4583  0DB4  000001F7           	ddw	__ccov179_end_blk80	; block 80 END_ADDR
  4584  0DB8  00000090           	ddw	_checkState1	; block 0 START_ADDR
  4585  0DBC  00000091           	ddw	__ccov139_end_blk0	; block 0 END_ADDR
  4586                           
  4587                           ; Function: checkState1, coverage: 19,80,0
  4588  0DC0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4589  0DC4  00000022           	ddw	__ccovbit19_39/(0+8)	; CC_ADDR
  4590  0DC8  00000001           	ddw	1	; NUM_POINTS
  4591  0DCC  00000007           	ddw	__ccovbit19_39& (0+7)	; OFFSET
  4592  0DD0  00000000           	ddw	0	; Reserved
  4593  0DD4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4594  0DD8  00000003           	ddw	3	; NUM_RANGES
  4595  0DDC  000000D5           	ddw	__ccov151_start_blk19	; block 19 START_ADDR
  4596  0DE0  000000E4           	ddw	__ccov151_end_blk19	; block 19 END_ADDR
  4597  0DE4  000001D1           	ddw	__ccov179_start_blk80	; block 80 START_ADDR
  4598  0DE8  000001F7           	ddw	__ccov179_end_blk80	; block 80 END_ADDR
  4599  0DEC  00000090           	ddw	_checkState1	; block 0 START_ADDR
  4600  0DF0  00000091           	ddw	__ccov139_end_blk0	; block 0 END_ADDR
  4601                           
  4602                           ; Function: checkState1, coverage: 22,19,80,0
  4603  0DF4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4604  0DF8  00000022           	ddw	__ccovbit22_40/(0+8)	; CC_ADDR
  4605  0DFC  00000001           	ddw	1	; NUM_POINTS
  4606  0E00  00000006           	ddw	__ccovbit22_40& (0+7)	; OFFSET
  4607  0E04  00000000           	ddw	0	; Reserved
  4608  0E08  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4609  0E0C  00000004           	ddw	4	; NUM_RANGES
  4610  0E10  000000E4           	ddw	__ccov152_start_blk22	; block 22 START_ADDR
  4611  0E14  000000EB           	ddw	__ccov152_end_blk22	; block 22 END_ADDR
  4612  0E18  000000D5           	ddw	__ccov151_start_blk19	; block 19 START_ADDR
  4613  0E1C  000000E4           	ddw	__ccov151_end_blk19	; block 19 END_ADDR
  4614  0E20  000001D1           	ddw	__ccov179_start_blk80	; block 80 START_ADDR
  4615  0E24  000001F7           	ddw	__ccov179_end_blk80	; block 80 END_ADDR
  4616  0E28  00000090           	ddw	_checkState1	; block 0 START_ADDR
  4617  0E2C  00000091           	ddw	__ccov139_end_blk0	; block 0 END_ADDR
  4618                           
  4619                           ; Function: checkState1, coverage: 28,36,27,26,25,80,0
  4620  0E30  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4621  0E34  00000022           	ddw	__ccovbit28_41/(0+8)	; CC_ADDR
  4622  0E38  00000001           	ddw	1	; NUM_POINTS
  4623  0E3C  00000005           	ddw	__ccovbit28_41& (0+7)	; OFFSET
  4624  0E40  00000000           	ddw	0	; Reserved
  4625  0E44  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4626  0E48  00000007           	ddw	7	; NUM_RANGES
  4627  0E4C  000000FA           	ddw	__ccov156_start_blk28	; block 28 START_ADDR
  4628  0E50  000000FE           	ddw	__ccov156_end_blk28	; block 28 END_ADDR
  4629  0E54  00000104           	ddw	__ccov159_start_blk36	; block 36 START_ADDR
  4630  0E58  00000117           	ddw	__ccov159_end_blk36	; block 36 END_ADDR
  4631  0E5C  000000F5           	ddw	__ccov155_start_blk27	; block 27 START_ADDR
  4632  0E60  000000FA           	ddw	__ccov155_end_blk27	; block 27 END_ADDR
  4633  0E64  000000EF           	ddw	__ccov154_start_blk26	; block 26 START_ADDR
  4634  0E68  000000F5           	ddw	__ccov154_end_blk26	; block 26 END_ADDR
  4635  0E6C  000000EB           	ddw	__ccov153_start_blk25	; block 25 START_ADDR
  4636  0E70  000000EF           	ddw	__ccov153_end_blk25	; block 25 END_ADDR
  4637  0E74  000001D1           	ddw	__ccov179_start_blk80	; block 80 START_ADDR
  4638  0E78  000001F7           	ddw	__ccov179_end_blk80	; block 80 END_ADDR
  4639  0E7C  00000090           	ddw	_checkState1	; block 0 START_ADDR
  4640  0E80  00000091           	ddw	__ccov139_end_blk0	; block 0 END_ADDR
  4641                           
  4642                           ; Function: checkState1, coverage: 29,36,27,26,25,80,0
  4643  0E84  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4644  0E88  00000022           	ddw	__ccovbit29_42/(0+8)	; CC_ADDR
  4645  0E8C  00000001           	ddw	1	; NUM_POINTS
  4646  0E90  00000004           	ddw	__ccovbit29_42& (0+7)	; OFFSET
  4647  0E94  00000000           	ddw	0	; Reserved
  4648  0E98  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4649  0E9C  00000007           	ddw	7	; NUM_RANGES
  4650  0EA0  000000FE           	ddw	__ccov157_start_blk29	; block 29 START_ADDR
  4651  0EA4  00000102           	ddw	__ccov157_end_blk29	; block 29 END_ADDR
  4652  0EA8  00000104           	ddw	__ccov159_start_blk36	; block 36 START_ADDR
  4653  0EAC  00000117           	ddw	__ccov159_end_blk36	; block 36 END_ADDR
  4654  0EB0  000000F5           	ddw	__ccov155_start_blk27	; block 27 START_ADDR
  4655  0EB4  000000FA           	ddw	__ccov155_end_blk27	; block 27 END_ADDR
  4656  0EB8  000000EF           	ddw	__ccov154_start_blk26	; block 26 START_ADDR
  4657  0EBC  000000F5           	ddw	__ccov154_end_blk26	; block 26 END_ADDR
  4658  0EC0  000000EB           	ddw	__ccov153_start_blk25	; block 25 START_ADDR
  4659  0EC4  000000EF           	ddw	__ccov153_end_blk25	; block 25 END_ADDR
  4660  0EC8  000001D1           	ddw	__ccov179_start_blk80	; block 80 START_ADDR
  4661  0ECC  000001F7           	ddw	__ccov179_end_blk80	; block 80 END_ADDR
  4662  0ED0  00000090           	ddw	_checkState1	; block 0 START_ADDR
  4663  0ED4  00000091           	ddw	__ccov139_end_blk0	; block 0 END_ADDR
  4664                           
  4665                           ; Function: checkState1, coverage: 33,36,27,26,25,80,0
  4666  0ED8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4667  0EDC  00000022           	ddw	__ccovbit33_43/(0+8)	; CC_ADDR
  4668  0EE0  00000001           	ddw	1	; NUM_POINTS
  4669  0EE4  00000003           	ddw	__ccovbit33_43& (0+7)	; OFFSET
  4670  0EE8  00000000           	ddw	0	; Reserved
  4671  0EEC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4672  0EF0  00000007           	ddw	7	; NUM_RANGES
  4673  0EF4  00000102           	ddw	__ccov158_start_blk33	; block 33 START_ADDR
  4674  0EF8  00000104           	ddw	__ccov158_end_blk33	; block 33 END_ADDR
  4675  0EFC  00000104           	ddw	__ccov159_start_blk36	; block 36 START_ADDR
  4676  0F00  00000117           	ddw	__ccov159_end_blk36	; block 36 END_ADDR
  4677  0F04  000000F5           	ddw	__ccov155_start_blk27	; block 27 START_ADDR
  4678  0F08  000000FA           	ddw	__ccov155_end_blk27	; block 27 END_ADDR
  4679  0F0C  000000EF           	ddw	__ccov154_start_blk26	; block 26 START_ADDR
  4680  0F10  000000F5           	ddw	__ccov154_end_blk26	; block 26 END_ADDR
  4681  0F14  000000EB           	ddw	__ccov153_start_blk25	; block 25 START_ADDR
  4682  0F18  000000EF           	ddw	__ccov153_end_blk25	; block 25 END_ADDR
  4683  0F1C  000001D1           	ddw	__ccov179_start_blk80	; block 80 START_ADDR
  4684  0F20  000001F7           	ddw	__ccov179_end_blk80	; block 80 END_ADDR
  4685  0F24  00000090           	ddw	_checkState1	; block 0 START_ADDR
  4686  0F28  00000091           	ddw	__ccov139_end_blk0	; block 0 END_ADDR
  4687                           
  4688                           ; Function: checkState1, coverage: 38,36,27,26,25,80,0
  4689  0F2C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4690  0F30  00000022           	ddw	__ccovbit38_44/(0+8)	; CC_ADDR
  4691  0F34  00000001           	ddw	1	; NUM_POINTS
  4692  0F38  00000002           	ddw	__ccovbit38_44& (0+7)	; OFFSET
  4693  0F3C  00000000           	ddw	0	; Reserved
  4694  0F40  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4695  0F44  00000007           	ddw	7	; NUM_RANGES
  4696  0F48  00000117           	ddw	__ccov160_start_blk38	; block 38 START_ADDR
  4697  0F4C  00000122           	ddw	__ccov160_end_blk38	; block 38 END_ADDR
  4698  0F50  00000104           	ddw	__ccov159_start_blk36	; block 36 START_ADDR
  4699  0F54  00000117           	ddw	__ccov159_end_blk36	; block 36 END_ADDR
  4700  0F58  000000F5           	ddw	__ccov155_start_blk27	; block 27 START_ADDR
  4701  0F5C  000000FA           	ddw	__ccov155_end_blk27	; block 27 END_ADDR
  4702  0F60  000000EF           	ddw	__ccov154_start_blk26	; block 26 START_ADDR
  4703  0F64  000000F5           	ddw	__ccov154_end_blk26	; block 26 END_ADDR
  4704  0F68  000000EB           	ddw	__ccov153_start_blk25	; block 25 START_ADDR
  4705  0F6C  000000EF           	ddw	__ccov153_end_blk25	; block 25 END_ADDR
  4706  0F70  000001D1           	ddw	__ccov179_start_blk80	; block 80 START_ADDR
  4707  0F74  000001F7           	ddw	__ccov179_end_blk80	; block 80 END_ADDR
  4708  0F78  00000090           	ddw	_checkState1	; block 0 START_ADDR
  4709  0F7C  00000091           	ddw	__ccov139_end_blk0	; block 0 END_ADDR
  4710                           
  4711                           ; Function: checkState1, coverage: 40,26,25,80,0
  4712  0F80  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4713  0F84  00000022           	ddw	__ccovbit40_45/(0+8)	; CC_ADDR
  4714  0F88  00000001           	ddw	1	; NUM_POINTS
  4715  0F8C  00000001           	ddw	__ccovbit40_45& (0+7)	; OFFSET
  4716  0F90  00000000           	ddw	0	; Reserved
  4717  0F94  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4718  0F98  00000005           	ddw	5	; NUM_RANGES
  4719  0F9C  00000122           	ddw	__ccov161_start_blk40	; block 40 START_ADDR
  4720  0FA0  0000012B           	ddw	__ccov161_end_blk40	; block 40 END_ADDR
  4721  0FA4  000000EF           	ddw	__ccov154_start_blk26	; block 26 START_ADDR
  4722  0FA8  000000F5           	ddw	__ccov154_end_blk26	; block 26 END_ADDR
  4723  0FAC  000000EB           	ddw	__ccov153_start_blk25	; block 25 START_ADDR
  4724  0FB0  000000EF           	ddw	__ccov153_end_blk25	; block 25 END_ADDR
  4725  0FB4  000001D1           	ddw	__ccov179_start_blk80	; block 80 START_ADDR
  4726  0FB8  000001F7           	ddw	__ccov179_end_blk80	; block 80 END_ADDR
  4727  0FBC  00000090           	ddw	_checkState1	; block 0 START_ADDR
  4728  0FC0  00000091           	ddw	__ccov139_end_blk0	; block 0 END_ADDR
  4729                           
  4730                           ; Function: checkState1, coverage: 41,80,0
  4731  0FC4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4732  0FC8  00000022           	ddw	__ccovbit41_46/(0+8)	; CC_ADDR
  4733  0FCC  00000001           	ddw	1	; NUM_POINTS
  4734  0FD0  00000000           	ddw	__ccovbit41_46& (0+7)	; OFFSET
  4735  0FD4  00000000           	ddw	0	; Reserved
  4736  0FD8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4737  0FDC  00000003           	ddw	3	; NUM_RANGES
  4738  0FE0  0000012B           	ddw	__ccov162_start_blk41	; block 41 START_ADDR
  4739  0FE4  00000130           	ddw	__ccov162_end_blk41	; block 41 END_ADDR
  4740  0FE8  000001D1           	ddw	__ccov179_start_blk80	; block 80 START_ADDR
  4741  0FEC  000001F7           	ddw	__ccov179_end_blk80	; block 80 END_ADDR
  4742  0FF0  00000090           	ddw	_checkState1	; block 0 START_ADDR
  4743  0FF4  00000091           	ddw	__ccov139_end_blk0	; block 0 END_ADDR
  4744                           
  4745                           ; Function: checkState1, coverage: 46,45,80,0
  4746  0FF8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4747  0FFC  00000021           	ddw	__ccovbit46_47/(0+8)	; CC_ADDR
  4748  1000  00000001           	ddw	1	; NUM_POINTS
  4749  1004  00000007           	ddw	__ccovbit46_47& (0+7)	; OFFSET
  4750  1008  00000000           	ddw	0	; Reserved
  4751  100C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4752  1010  00000004           	ddw	4	; NUM_RANGES
  4753  1014  0000013D           	ddw	__ccov164_start_blk46	; block 46 START_ADDR
  4754  1018  00000144           	ddw	__ccov164_end_blk46	; block 46 END_ADDR
  4755  101C  00000130           	ddw	__ccov163_start_blk45	; block 45 START_ADDR
  4756  1020  0000013D           	ddw	__ccov163_end_blk45	; block 45 END_ADDR
  4757  1024  000001D1           	ddw	__ccov179_start_blk80	; block 80 START_ADDR
  4758  1028  000001F7           	ddw	__ccov179_end_blk80	; block 80 END_ADDR
  4759  102C  00000090           	ddw	_checkState1	; block 0 START_ADDR
  4760  1030  00000091           	ddw	__ccov139_end_blk0	; block 0 END_ADDR
  4761                           
  4762                           ; Function: checkState1, coverage: 48,45,80,0
  4763  1034  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4764  1038  00000021           	ddw	__ccovbit48_48/(0+8)	; CC_ADDR
  4765  103C  00000001           	ddw	1	; NUM_POINTS
  4766  1040  00000006           	ddw	__ccovbit48_48& (0+7)	; OFFSET
  4767  1044  00000000           	ddw	0	; Reserved
  4768  1048  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4769  104C  00000004           	ddw	4	; NUM_RANGES
  4770  1050  00000144           	ddw	__ccov165_start_blk48	; block 48 START_ADDR
  4771  1054  0000014B           	ddw	__ccov165_end_blk48	; block 48 END_ADDR
  4772  1058  00000130           	ddw	__ccov163_start_blk45	; block 45 START_ADDR
  4773  105C  0000013D           	ddw	__ccov163_end_blk45	; block 45 END_ADDR
  4774  1060  000001D1           	ddw	__ccov179_start_blk80	; block 80 START_ADDR
  4775  1064  000001F7           	ddw	__ccov179_end_blk80	; block 80 END_ADDR
  4776  1068  00000090           	ddw	_checkState1	; block 0 START_ADDR
  4777  106C  00000091           	ddw	__ccov139_end_blk0	; block 0 END_ADDR
  4778                           
  4779                           ; Function: checkState1, coverage: 51,50,80,0
  4780  1070  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4781  1074  00000021           	ddw	__ccovbit51_49/(0+8)	; CC_ADDR
  4782  1078  00000001           	ddw	1	; NUM_POINTS
  4783  107C  00000005           	ddw	__ccovbit51_49& (0+7)	; OFFSET
  4784  1080  00000000           	ddw	0	; Reserved
  4785  1084  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4786  1088  00000004           	ddw	4	; NUM_RANGES
  4787  108C  0000014F           	ddw	__ccov167_start_blk51	; block 51 START_ADDR
  4788  1090  0000015C           	ddw	__ccov167_end_blk51	; block 51 END_ADDR
  4789  1094  0000014B           	ddw	__ccov166_start_blk50	; block 50 START_ADDR
  4790  1098  0000014F           	ddw	__ccov166_end_blk50	; block 50 END_ADDR
  4791  109C  000001D1           	ddw	__ccov179_start_blk80	; block 80 START_ADDR
  4792  10A0  000001F7           	ddw	__ccov179_end_blk80	; block 80 END_ADDR
  4793  10A4  00000090           	ddw	_checkState1	; block 0 START_ADDR
  4794  10A8  00000091           	ddw	__ccov139_end_blk0	; block 0 END_ADDR
  4795                           
  4796                           ; Function: checkState1, coverage: 67,66,65,64,63,62,56,55,80,0
  4797  10AC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4798  10B0  00000021           	ddw	__ccovbit67_50/(0+8)	; CC_ADDR
  4799  10B4  00000001           	ddw	1	; NUM_POINTS
  4800  10B8  00000004           	ddw	__ccovbit67_50& (0+7)	; OFFSET
  4801  10BC  00000000           	ddw	0	; Reserved
  4802  10C0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4803  10C4  0000000A           	ddw	10	; NUM_RANGES
  4804  10C8  000001BD           	ddw	__ccov175_start_blk67	; block 67 START_ADDR
  4805  10CC  000001C2           	ddw	__ccov175_end_blk67	; block 67 END_ADDR
  4806  10D0  000001B4           	ddw	__ccov174_start_blk66	; block 66 START_ADDR
  4807  10D4  000001BD           	ddw	__ccov174_end_blk66	; block 66 END_ADDR
  4808  10D8  000001B2           	ddw	__ccov173_start_blk65	; block 65 START_ADDR
  4809  10DC  000001B4           	ddw	__ccov173_end_blk65	; block 65 END_ADDR
  4810  10E0  000001A5           	ddw	__ccov172_start_blk64	; block 64 START_ADDR
  4811  10E4  000001B2           	ddw	__ccov172_end_blk64	; block 64 END_ADDR
  4812  10E8  00000175           	ddw	__ccov171_start_blk63	; block 63 START_ADDR
  4813  10EC  000001A5           	ddw	__ccov171_end_blk63	; block 63 END_ADDR
  4814  10F0  00000167           	ddw	__ccov170_start_blk62	; block 62 START_ADDR
  4815  10F4  00000175           	ddw	__ccov170_end_blk62	; block 62 END_ADDR
  4816  10F8  00000163           	ddw	__ccov169_start_blk56	; block 56 START_ADDR
  4817  10FC  00000167           	ddw	__ccov169_end_blk56	; block 56 END_ADDR
  4818  1100  0000015C           	ddw	__ccov168_start_blk55	; block 55 START_ADDR
  4819  1104  00000163           	ddw	__ccov168_end_blk55	; block 55 END_ADDR
  4820  1108  000001D1           	ddw	__ccov179_start_blk80	; block 80 START_ADDR
  4821  110C  000001F7           	ddw	__ccov179_end_blk80	; block 80 END_ADDR
  4822  1110  00000090           	ddw	_checkState1	; block 0 START_ADDR
  4823  1114  00000091           	ddw	__ccov139_end_blk0	; block 0 END_ADDR
  4824                           
  4825                           ; Function: checkState1, coverage: 68,64,63,62,56,55,80,0
  4826  1118  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4827  111C  00000021           	ddw	__ccovbit68_51/(0+8)	; CC_ADDR
  4828  1120  00000001           	ddw	1	; NUM_POINTS
  4829  1124  00000003           	ddw	__ccovbit68_51& (0+7)	; OFFSET
  4830  1128  00000000           	ddw	0	; Reserved
  4831  112C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4832  1130  00000008           	ddw	8	; NUM_RANGES
  4833  1134  000001C2           	ddw	__ccov176_start_blk68	; block 68 START_ADDR
  4834  1138  000001C6           	ddw	__ccov176_end_blk68	; block 68 END_ADDR
  4835  113C  000001A5           	ddw	__ccov172_start_blk64	; block 64 START_ADDR
  4836  1140  000001B2           	ddw	__ccov172_end_blk64	; block 64 END_ADDR
  4837  1144  00000175           	ddw	__ccov171_start_blk63	; block 63 START_ADDR
  4838  1148  000001A5           	ddw	__ccov171_end_blk63	; block 63 END_ADDR
  4839  114C  00000167           	ddw	__ccov170_start_blk62	; block 62 START_ADDR
  4840  1150  00000175           	ddw	__ccov170_end_blk62	; block 62 END_ADDR
  4841  1154  00000163           	ddw	__ccov169_start_blk56	; block 56 START_ADDR
  4842  1158  00000167           	ddw	__ccov169_end_blk56	; block 56 END_ADDR
  4843  115C  0000015C           	ddw	__ccov168_start_blk55	; block 55 START_ADDR
  4844  1160  00000163           	ddw	__ccov168_end_blk55	; block 55 END_ADDR
  4845  1164  000001D1           	ddw	__ccov179_start_blk80	; block 80 START_ADDR
  4846  1168  000001F7           	ddw	__ccov179_end_blk80	; block 80 END_ADDR
  4847  116C  00000090           	ddw	_checkState1	; block 0 START_ADDR
  4848  1170  00000091           	ddw	__ccov139_end_blk0	; block 0 END_ADDR
  4849                           
  4850                           ; Function: checkState1, coverage: 70,64,63,62,56,55,80,0
  4851  1174  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4852  1178  00000021           	ddw	__ccovbit70_52/(0+8)	; CC_ADDR
  4853  117C  00000001           	ddw	1	; NUM_POINTS
  4854  1180  00000002           	ddw	__ccovbit70_52& (0+7)	; OFFSET
  4855  1184  00000000           	ddw	0	; Reserved
  4856  1188  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4857  118C  00000008           	ddw	8	; NUM_RANGES
  4858  1190  000001C6           	ddw	__ccov177_start_blk70	; block 70 START_ADDR
  4859  1194  000001CD           	ddw	__ccov177_end_blk70	; block 70 END_ADDR
  4860  1198  000001A5           	ddw	__ccov172_start_blk64	; block 64 START_ADDR
  4861  119C  000001B2           	ddw	__ccov172_end_blk64	; block 64 END_ADDR
  4862  11A0  00000175           	ddw	__ccov171_start_blk63	; block 63 START_ADDR
  4863  11A4  000001A5           	ddw	__ccov171_end_blk63	; block 63 END_ADDR
  4864  11A8  00000167           	ddw	__ccov170_start_blk62	; block 62 START_ADDR
  4865  11AC  00000175           	ddw	__ccov170_end_blk62	; block 62 END_ADDR
  4866  11B0  00000163           	ddw	__ccov169_start_blk56	; block 56 START_ADDR
  4867  11B4  00000167           	ddw	__ccov169_end_blk56	; block 56 END_ADDR
  4868  11B8  0000015C           	ddw	__ccov168_start_blk55	; block 55 START_ADDR
  4869  11BC  00000163           	ddw	__ccov168_end_blk55	; block 55 END_ADDR
  4870  11C0  000001D1           	ddw	__ccov179_start_blk80	; block 80 START_ADDR
  4871  11C4  000001F7           	ddw	__ccov179_end_blk80	; block 80 END_ADDR
  4872  11C8  00000090           	ddw	_checkState1	; block 0 START_ADDR
  4873  11CC  00000091           	ddw	__ccov139_end_blk0	; block 0 END_ADDR
  4874                           
  4875                           ; Function: checkState1, coverage: 71,62,56,55,80,0
  4876  11D0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4877  11D4  00000021           	ddw	__ccovbit71_53/(0+8)	; CC_ADDR
  4878  11D8  00000001           	ddw	1	; NUM_POINTS
  4879  11DC  00000001           	ddw	__ccovbit71_53& (0+7)	; OFFSET
  4880  11E0  00000000           	ddw	0	; Reserved
  4881  11E4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4882  11E8  00000006           	ddw	6	; NUM_RANGES
  4883  11EC  000001CD           	ddw	__ccov178_start_blk71	; block 71 START_ADDR
  4884  11F0  000001D1           	ddw	__ccov178_end_blk71	; block 71 END_ADDR
  4885  11F4  00000167           	ddw	__ccov170_start_blk62	; block 62 START_ADDR
  4886  11F8  00000175           	ddw	__ccov170_end_blk62	; block 62 END_ADDR
  4887  11FC  00000163           	ddw	__ccov169_start_blk56	; block 56 START_ADDR
  4888  1200  00000167           	ddw	__ccov169_end_blk56	; block 56 END_ADDR
  4889  1204  0000015C           	ddw	__ccov168_start_blk55	; block 55 START_ADDR
  4890  1208  00000163           	ddw	__ccov168_end_blk55	; block 55 END_ADDR
  4891  120C  000001D1           	ddw	__ccov179_start_blk80	; block 80 START_ADDR
  4892  1210  000001F7           	ddw	__ccov179_end_blk80	; block 80 END_ADDR
  4893  1214  00000090           	ddw	_checkState1	; block 0 START_ADDR
  4894  1218  00000091           	ddw	__ccov139_end_blk0	; block 0 END_ADDR
  4895                           
  4896                           ; Function: checkState1, coverage: 82,80,0
  4897  121C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4898  1220  00000021           	ddw	__ccovbit82_54/(0+8)	; CC_ADDR
  4899  1224  00000001           	ddw	1	; NUM_POINTS
  4900  1228  00000000           	ddw	__ccovbit82_54& (0+7)	; OFFSET
  4901  122C  00000000           	ddw	0	; Reserved
  4902  1230  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4903  1234  00000003           	ddw	3	; NUM_RANGES
  4904  1238  000001F7           	ddw	__ccov180_start_blk82	; block 82 START_ADDR
  4905  123C  000001F9           	ddw	__end_of_checkState1	; block 82 END_ADDR
  4906  1240  000001D1           	ddw	__ccov179_start_blk80	; block 80 START_ADDR
  4907  1244  000001F7           	ddw	__ccov179_end_blk80	; block 80 END_ADDR
  4908  1248  00000090           	ddw	_checkState1	; block 0 START_ADDR
  4909  124C  00000091           	ddw	__ccov139_end_blk0	; block 0 END_ADDR
  4910  007E                     btemp	set	126	;btemp
  4911  007E                     int$flags	set	126
  4912  007E                     wtemp0	set	126
  4913                           
  4914                           	psect	config
  4915                           
  4916                           ;Config register CONFIG1 @ 0x8007
  4917                           ;	Oscillator Selection
  4918                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  4919                           ;	Watchdog Timer Enable
  4920                           ;	WDTE = SWDTEN, WDT controlled by the SWDTEN bit in the WDTCON register
  4921                           ;	Power-up Timer Enable
  4922                           ;	PWRTE = OFF, PWRT disabled
  4923                           ;	MCLR Pin Function Select
  4924                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  4925                           ;	Flash Program Memory Code Protection
  4926                           ;	CP = OFF, Program memory code protection is disabled
  4927                           ;	Data Memory Code Protection
  4928                           ;	CPD = OFF, Data memory code protection is disabled
  4929                           ;	Brown-out Reset Enable
  4930                           ;	BOREN = OFF, Brown-out Reset disabled
  4931                           ;	Clock Out Enable
  4932                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4933                           ;	Internal/External Switchover
  4934                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4935                           ;	Fail-Safe Clock Monitor Enable
  4936                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4937  8007                     	org	32775
  4938  8007  09EC               	dw	2540
  4939                           
  4940                           ;Config register CONFIG2 @ 0x8008
  4941                           ;	Flash Memory Self-Write Protection
  4942                           ;	WRT = OFF, Write protection off
  4943                           ;	PLL Enable
  4944                           ;	PLLEN = OFF, 4x PLL disabled
  4945                           ;	Stack Overflow/Underflow Reset Enable
  4946                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
  4947                           ;	Brown-out Reset Voltage Selection
  4948                           ;	BORV = HI, Brown-out Reset Voltage (Vbor), high trip point selected.
  4949                           ;	Low-Voltage Programming Enable
  4950                           ;	LVP = ON, Low-voltage programming enabled
  4951  8008                     	org	32776
  4952  8008  38FF               	dw	14591

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         28
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            79      8      39
    BANK1            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_getBatteryVoltage
    _checkState1->_getBatteryVoltage

Critical Paths under _my_isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_checkState1
    _checkState1->___awdiv

Critical Paths under _my_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     310
                                              6 BANK0      2     2      0
                            ___awdiv
                        _checkState1
             _disable_watchdog_timer
          _enable_external_interrupt
                  _getBatteryVoltage
           _set_watchdog_timer_128ms
                        _timer2_init
       _watch_dog_incrementing_timer
 ---------------------------------------------------------------------------------
 (1) _watch_dog_incrementing_timer                         1     1      0       0
                                              2 COMMON     1     1      0
           _set_watchdog_timer_128ms
              _set_watchdog_timer_1s
           _set_watchdog_timer_256ms
            _set_watchdog_timer_256s
              _set_watchdog_timer_4s
 ---------------------------------------------------------------------------------
 (2) _set_watchdog_timer_4s                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _set_watchdog_timer_256s                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _set_watchdog_timer_256ms                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _set_watchdog_timer_1s                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer2_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkState1                                          2     2      0     155
                                              4 BANK0      2     2      0
                            ___awdiv
         _disable_external_interrupt
             _disable_watchdog_timer
          _enable_external_interrupt
              _enable_watchdog_timer
                  _getBatteryVoltage
           _set_watchdog_timer_128ms
 ---------------------------------------------------------------------------------
 (2) _set_watchdog_timer_128ms                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getBatteryVoltage                                    7     5      2      25
                                              2 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (2) _enable_watchdog_timer                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _enable_external_interrupt                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _disable_watchdog_timer                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _disable_external_interrupt                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     130
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _my_isr                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   _checkState1
     ___awdiv
     _disable_external_interrupt
     _disable_watchdog_timer
     _enable_external_interrupt
     _enable_watchdog_timer
     _getBatteryVoltage
     _set_watchdog_timer_128ms
   _disable_watchdog_timer
   _enable_external_interrupt
   _getBatteryVoltage
   _set_watchdog_timer_128ms
   _timer2_init
   _watch_dog_incrementing_timer
     _set_watchdog_timer_128ms
     _set_watchdog_timer_1s
     _set_watchdog_timer_256ms
     _set_watchdog_timer_256s
     _set_watchdog_timer_4s

 _my_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            4F      0       5       4        6.3%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               4F      8      27       5       49.4%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            10      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               10      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
ABS                  0      0      35       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      35       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun May 02 22:29:37 2021

                    __ccov116_end_blk1 0412                      __ccov108_end_blk1 03FD  
                    __ccov140_end_blk2 0097                      __ccov124_end_blk5 001B  
                   __ccov132_end_blk15 0056                    __ccov103_start_blk0 03FD  
                  __ccov111_start_blk0 03E8                     __pcodecov_info_hdr 0000  
                  __ccov84_start_blk16 03CA                      __ccov117_end_blk0 0413  
                    __ccov109_end_blk0 03E6                      __ccov141_end_blk3 009D  
                    __ccov125_end_blk6 001D                           ___awdiv@sign 0041  
                    __ccov118_end_blk1 0415                      __ccov142_end_blk4 00A4  
                    __ccov126_end_blk7 0022                     __ccov133_end_blk16 0064  
                                  l140 03A2                                    l300 01F7  
                                  l142 03A6                                    l143 03B3  
                                  l137 03DF                                    l146 03D0  
                                  l163 0402                                    l172 03E6  
                                  l181 0410                                    l157 033A  
                                  l166 03F4                                    l271 00D3  
                                  l175 03ED                                    l184 0413  
                                  l280 00FE                                    l169 03FB  
                                  l178 040C                                    l603 039B  
                                  l187 0416                                    l283 0102  
                                  l292 01CD                                    l293 01C2  
                                  l278 00FA                                    l288 014B  
                                  u130 03A6                                    u131 03A5  
                                  u140 03B7                                    u220 02DF  
                                  u141 03B6                                    u221 02DE  
                                  u230 02F7                                    u231 02F6  
                                  u240 030F                                    u241 030E  
                                  u225 02DB                                    u250 0327  
                                  u251 0326                                    u235 02F3  
                                  u245 030B                                    u255 0323  
                                  u610 037D                                    u611 037C  
                                  u605 036F                                    u630 038D  
                                  u550 0342                                    u710 01B2  
                                  u631 038C                                    u615 0379  
                                  u551 0341                                    u711 01B1  
                                  u640 0392                                    u560 034D  
                                  u641 0391                                    u625 0383  
                                  u561 034C                                    u705 018D  
                                  u570 035E                                    u650 00C2  
                                  u730 0295                                    u571 035D  
                                  u715 01AE                                    u651 00C1  
                                  u731 0294                                    u660 00E3  
                                  u740 02C3                                    u661 00E2  
                                  u741 02C2                                    u725 0270  
                                  u590 036E                                    u670 00F5  
                                  u591 036D                                    u671 00F4  
                                  u735 0291                                    u680 013D  
                                  u585 0362                                    u681 013C  
                                  u665 00DF                                    u690 0175  
                                  u691 0174                                    u685 0139  
                                  u757 024B                                    u695 0171  
                                  u767 029B                                    u777 01B8  
                                  u787 03AB                   __ccov158_start_blk33 0102  
                 __ccov166_start_blk50 014B                   __ccov174_start_blk66 01B4  
                    __ccov119_end_blk0 0416                      __ccov143_end_blk6 00AD  
                                  wreg 0009                      __ccov144_end_blk7 00B2  
                _set_watchdog_timer_1s 03F6                  _set_watchdog_timer_4s 03E1  
                   __ccov134_end_blk17 006A                     __ccov150_end_blk17 00D5  
                  __ccov120_start_blk1 0416                    __ccov104_start_blk1 0402  
                  __ccov112_start_blk1 03ED                                   l2020 0342  
                                 l1220 040E                                   l2030 0356  
                                 l2022 0347                                   l1230 03AE  
                                 l1222 039C                                   l2102 0104  
                                 l2040 036A                                   l2032 0358  
                                 l2024 0349                                   l2016 033C  
                                 l1240 03C8                                   l1232 03B1  
                                 l1224 03A1                                   l2112 0130  
                                 l2104 0117                                   l1400 032C  
                                 l2200 0213                                   l2050 0387  
                                 l2042 036E                                   l2034 035E  
                                 l2026 034D                                   l2018 033E  
                                 l1242 03CA                                   l1234 03B2  
                                 l1226 03A8                                   l2114 013D  
                                 l2106 0122                                   l1250 03EF  
                                 l1402 0331                                   l2210 021D  
                                 l2202 0214                                   l2044 037D  
                                 l2036 0361                                   l2052 038D  
                                 l2028 0352                                   l1260 0415  
                                 l1236 03B2                                   l1228 03AA  
                                 l2140 01B2                                   l2124 015C  
                                 l2116 0144                                   l2108 012B  
                                 l2060 0090                                   l1252 03F6  
                                 l1404 0336                                   l2220 0224  
                                 l2212 021E                                   l2204 0216  
                                 l2054 0392                                   l2046 0381  
                                 l2038 0366                                   l1246 0412  
                                 l1238 03B7                                   l2142 01B4  
                                 l2134 0167                                   l2126 0163  
                                 l2118 014F                                   l2070 00AD  
                                 l2062 0091                                   l1262 03D2  
                                 l1254 03E1                                   l2230 0235  
                                 l2222 0226                                   l2214 021F  
                                 l2206 0217                                   l2056 0397  
                                 l2048 0382                                   l1248 03FD  
                                 l2144 01BD                                   l2136 0175  
                                 l2080 00CD                                   l2072 00B2  
                                 l2064 0097                                   l2152 01D1  
                                 l1264 03D5                                   l1256 03E8  
                                 l2240 023E                                   l2232 0237  
                                 l2224 0228                                   l2216 0221  
                                 l2208 0218                                   l1258 040A  
                                 l2146 01C6                                   l2138 01A5  
                                 l2090 00E4                                   l2074 00B9  
                                 l2066 009D                                   l1266 03DE  
                                 l2250 0252                                   l2242 023F  
                                 l2234 0239                                   l2226 022D  
                                 l2218 0223                                   l2170 01FE  
                                 l2092 00EB                                   l2076 00C2  
                                 l2068 00A4                                   l1380 02DF  
                                 l2260 0288                                   l2252 0257  
                                 l2244 0242                                   l2236 023B  
                                 l2228 0231                                   l2180 0206  
                                 l2172 01FF                                   l2094 00EF  
                                 l2086 00D5                                   l2078 00C9  
                                 l1390 0301                                   l1382 02E4  
                                 l2270 02A8                                   l2262 0295  
                                 l2254 0258                                   l2246 0245  
                                 l2238 023C                                   l2190 020C  
                                 l2182 0207                                   l2174 0203  
                                 l2166 01F9                                   l2440 01DA  
                                 l2096 00F5                                   l1392 030F  
                                 l1384 02E9                                   l2280 02B4  
                                 l2272 02AC                                   l2264 0297  
                                 l2256 025F                                   l2248 0251  
                                 l2192 020D                                   l2184 0208  
                                 l2176 0204                                   l2168 01FB  
                                 l1394 0314                                   l1386 02F7  
                                 l1378 02D1                                   l2290 02BF  
                                 l2282 02B6                                   l2274 02AD  
                                 l2266 02A0                                   l2258 0278  
                                 l2194 020E                                   l2186 0209  
                                 l2178 0205                                   l1396 0319  
                                 l1388 02FC                                   l2292 02C3  
                                 l2284 02B8                                   l2276 02AE  
                                 l2268 02A3                                   l2196 0210  
                                 l2188 020B                                   l2438 010C  
                                 l1398 0327                                   l2294 02C8  
                                 l2286 02BA                                   l2278 02B1  
                                 l2198 0212                                   l2296 02CB  
                                 l2288 02BC               getBatteryVoltage@adc_val 007A  
                    __ccov145_end_blk8 00B9                                   _INTE 005C  
                                 _INTF 0059                                   _PIR1 0011  
                                 _PIR2 0012                          _state_machine 003E  
                                 _main 01F9                     __ccov127_end_blk10 0035  
                   __ccov135_end_blk19 006C                     __ccov151_end_blk19 00E4  
                                 fsr0h 0005                                   indf0 0000  
                                 fsr0l 0004                                   btemp 007E  
       ??_watch_dog_incrementing_timer 0075                    __ccov22_start_blk21 0218  
                  __ccov14_start_blk13 020D                    __ccov30_start_blk29 0228  
                                 start 0076                      __ccov139_end_blk0 0091  
              ??_enable_watchdog_timer 0075                     _sleep_64ms_counter 0032  
                   __ccov128_end_blk11 0038                     __ccov136_end_blk20 006E  
                   __ccov152_end_blk22 00EB                     __ccov160_end_blk38 0122  
                  __ccov121_start_blk0 0004                    __ccov113_start_blk0 040A  
                  __ccov105_start_blk0 03EF                    __ccov85_start_blk18 03D0  
                                ?_main 0073                        __end_of___awdiv 039C  
                         __ccovbit10_8 038D                           __ccovbit14_9 038C  
                         __ccovbit50_1 0394                           __ccovbit18_5 0390  
                   __ccov129_end_blk12 003D                     __ccov137_end_blk21 0072  
                   __ccov161_end_blk40 012B                     __ccov153_end_blk25 00EF  
                         __ccovbit65_2 0393                           __ccovbit68_3 0392  
                         __ccovbit1_12 0389                           __ccovbit1_20 0381  
                         __ccovbit1_13 0388                           __ccovbit1_21 0380  
                         __ccovbit1_14 0387                           __ccovbit1_15 0386  
                         __ccovbit1_16 0385                           __ccovbit1_17 0384  
                         __ccovbit1_18 0383                           __ccovbit1_19 0382  
                      ___awdiv@divisor 0075                           __ccovbit3_22 0128  
                         __ccovbit3_30 0120                           __ccovbit4_31 011F  
                         __ccovbit6_32 011E                                  _IOCAF 0393  
                         __ccovbit7_23 0127                           __ccovbit7_33 011D  
                         __ccovbit8_34 011C                                  i1l200 0072  
                                i1l192 0038                                  i1l194 0010  
                                i1l195 0035                                  i1l198 0056  
                      ___awdiv@counter 0040                   __ccov167_start_blk51 014F  
                 __ccov159_start_blk36 0104                                  u30_20 000F  
                                u30_21 000E                   __ccov175_start_blk67 01BD  
                                u31_20 003D                                  u31_21 003C  
                                u32_20 0043                                  u32_21 0042  
                                u33_20 0050                                  u33_21 004F  
                                u33_25 004C                                  u34_20 0064  
                                u34_21 0063                                  u34_25 0060  
                                u29_20 000A                                  u29_21 0009  
                 __size_of_checkState1 0169                     __ccov146_end_blk10 00C2  
                   __ccov138_end_blk24 0076                     __ccov162_end_blk41 0130  
                   __ccov154_end_blk26 00F5                     __ccov170_end_blk62 0175  
                  __ccov122_start_blk1 000A                    __ccov114_start_blk1 040C  
                  __ccov106_start_blk1 03F4                         __pbitbssCOMMON 0380  
                                status 0003                                  wtemp0 007E  
                   __ccov147_end_blk11 00C9                     __ccov155_end_blk27 00FA  
                   __ccov163_end_blk45 013D                     __ccov171_end_blk63 01A5  
                       __pcodecov_info 0000                         _state_selftest 003A  
                  __ccov31_start_blk30 022D                    __ccov23_start_blk22 021D  
                  __ccov15_start_blk14 020E                        __initialization 007A  
                         __end_of_main 02D1                     __ccov148_end_blk13 00CD  
                   __ccov156_end_blk28 00FE                     __ccov164_end_blk46 0144  
                   __ccov172_end_blk64 01B2                     __ccov180_end_blk82 01F9  
                  __ccov115_start_blk0 040E                    __ccov107_start_blk0 03F6  
                  __ccov123_start_blk3 0010                _set_watchdog_timer_256s 03E8  
                  __ccov94_start_blk10 0314                                 ??_main 0046  
                   __ccov149_end_blk14 00D3                     __ccov157_end_blk29 0102  
                   __ccov165_end_blk48 014B                     __ccov173_end_blk65 01B4  
                 __ccov168_start_blk55 015C                   __ccov176_start_blk68 01C2  
               ?_set_watchdog_timer_1s 0073                 ?_set_watchdog_timer_4s 0073  
           ?_enable_external_interrupt 0073                     __ccov158_end_blk33 0104  
                   __ccov166_end_blk50 014F                     __ccov174_end_blk66 01BD  
                        __ccovbit10_35 011B                          __ccovbit11_24 0126  
                        __ccovbit11_36 011A                          __ccovbit13_25 0125  
                        __ccovbit22_11 038A                          __ccovbit21_28 0122  
                               _ADRESH 009C                          __ccovbit22_40 0116  
                               _ADRESL 009B                    __ccov116_start_blk1 0410  
                  __ccov108_start_blk1 03FB                          __ccovbit14_37 0119  
                  __ccov140_start_blk2 0091                    __ccov124_start_blk5 001A  
                        __ccovbit15_26 0124                          __ccovbit17_10 038B  
                        __ccovbit24_29 0121                          __ccovbit40_45 0111  
                        __ccovbit17_27 0123                          __ccovbit33_43 0113  
                        __ccovbit17_38 0118                          __ccovbit41_46 0110  
                        __ccovbit19_39 0117                          __ccovbit28_41 0115  
                        __ccovbit51_49 010D                          __ccovbit29_42 0114  
                     ___awdiv@dividend 0077                          __ccovbit38_44 0112  
                        __ccovbit70_52 010A                          __ccovbit46_47 010F  
                        __ccovbit71_53 0109                          __ccovbit48_48 010E  
                        __ccovbit82_54 0108                          __ccovbit67_50 010C  
                        __ccovbit68_51 010B                                 _ANSELA 018C  
                               i1l1540 000A                                 i1l1560 0064  
                               i1l1544 001A                                 i1l1552 0022  
                               i1l1562 006A                                 i1l1554 003D  
                               i1l2442 002D                                 i1l1546 001B  
                               i1l1538 0006                                 i1l1564 006C  
                               i1l1556 0043                                 i1l1548 001D  
                               i1l1566 006E                                 i1l1558 0050  
                               _FVRCON 0117                       __ccov10_end_blk9 0209  
                   __ccov167_end_blk51 015C                     __ccov159_end_blk36 0117  
                   __ccov175_end_blk67 01C2                     _DoorStateAfterPrel 003C  
                  __ccov32_start_blk31 0231                    __ccov24_start_blk23 021E  
                  __ccov16_start_blk15 0210                    __ccov40_start_blk39 0242  
                   __ccov168_end_blk55 0163                     __ccov176_end_blk68 01C6  
                            ??___awdiv 0079                    __ccov117_start_blk0 0412  
                  __ccov109_start_blk0 03E1                    __ccov141_start_blk3 0097  
                  __ccov125_start_blk6 001B                           ?_timer2_init 0073  
                  __ccov95_start_blk12 0319                   __ccov130_start_blk13 003D  
                     ___awdiv@quotient 0042                                 _my_isr 0004  
                   __ccov177_end_blk70 01CD                     __ccov169_end_blk56 0167  
                 __ccov177_start_blk70 01C6                   __ccov169_start_blk56 0163  
                   __ccov178_end_blk71 01D1                 _NewStateChangeDetected 0397  
                  __ccov118_start_blk1 0413                    __ccov142_start_blk4 009D  
                  __ccov126_start_blk7 001D                __end_of__initialization 008D  
                   __ccov179_end_blk80 01F7                    __ccov41_start_blk40 0245  
                  __ccov33_start_blk32 0235                    __ccov25_start_blk24 021F  
                  __ccov17_start_blk16 0212              ??_set_watchdog_timer_256s 0075  
                   _state_output_pulse 003B                         __pcstackCOMMON 0073  
                  __ccov119_start_blk0 0415                    __ccov143_start_blk6 00A4  
                  __ccov96_start_blk13 0327                   __ccov131_start_blk14 0043  
             _set_watchdog_timer_128ms 03FD               _set_watchdog_timer_256ms 03EF  
                     __ccov70_end_blk3 03E1                       __ccov71_end_blk0 03A1  
                       _OPTION_REGbits 0095                   __ccov178_start_blk71 01CD  
                     __ccov72_end_blk1 03A2                     __ccov70_start_blk3 03DF  
                      __ccov1_end_blk0 01FB                       __ccov73_end_blk3 03A6  
                  __ccov144_start_blk7 00AD                             __pbssBANK0 0026  
             ??_disable_watchdog_timer 0075                        __ccov2_end_blk1 01FE  
                     __ccov74_end_blk4 03A8                       __ccov90_end_blk5 02FC  
                      _NewDoorPolarity 0396                        __ccov3_end_blk2 01FF  
                     __ccov67_end_blk0 03D5                       __ccov75_end_blk5 03AA  
                     __ccov91_end_blk6 0301                    __ccov42_start_blk41 0251  
                  __ccov34_start_blk33 0237                    __ccov26_start_blk25 0221  
                  __ccov18_start_blk17 0213                    __ccov50_start_blk49 0297  
                      __ccov4_end_blk3 0203                             __pmaintext 01F9  
                     __ccov68_end_blk1 03DE                     __ccov71_start_blk0 039C  
                     __ccov76_end_blk6 03AE                       __ccov92_end_blk8 030F  
       __size_of_enable_watchdog_timer 0004          __end_of_enable_watchdog_timer 040E  
                      __ccov5_end_blk4 0204                             __pintentry 0004  
                     __ccov69_end_blk2 03DF                       __ccov77_end_blk7 03B1  
                     __ccov93_end_blk9 0314                    __ccov145_start_blk8 00B2  
                  __ccov97_start_blk14 032C                   __ccov132_start_blk15 0050  
                      __ccov6_end_blk5 0205                                ?_my_isr 0073  
                     __ccov86_end_blk0 02DF                       __ccov78_end_blk8 03B2  
                      __ccov7_end_blk6 0206                       __ccov87_end_blk1 02E4  
      __end_of_set_watchdog_timer_256s 03EF                   __ccov179_start_blk80 01D1  
                      __ccov8_end_blk7 0207                       __ccov88_end_blk2 02E9  
                   __ccov72_start_blk1 03A1                    _DoorStateBeforePrel 003D  
                      __ccov9_end_blk8 0208                       __ccov89_end_blk4 02F7  
                    __ccov11_end_blk10 020B                      __ccov1_start_blk0 01F9  
                    __ccov12_end_blk11 020C                      __ccov20_end_blk19 0217  
                  __ccov51_start_blk50 02A0                    __ccov43_start_blk42 0252  
                  __ccov35_start_blk34 0239                    __ccov27_start_blk26 0223  
                  __ccov19_start_blk18 0214                     __ccov73_start_blk3 03A2  
         ??_disable_external_interrupt 0075                                ___awdiv 033C  
                  __ccov139_start_blk0 0090                    __ccov98_start_blk16 0331  
                    __ccov21_end_blk20 0218                      __ccov13_end_blk12 020D  
                 __ccov133_start_blk16 0056                                __ptext1 02D1  
                              __ptext2 03E1                                __ptext3 03E8  
                              __ptext4 03EF                                __ptext5 03F6  
                              __ptext6 03D2                                __ptext7 0090  
                              __ptext8 03FD                                __ptext9 039C  
                 __size_of_timer2_init 000F                        __size_of_my_isr 0072  
              ??_set_watchdog_timer_1s 0075                ??_set_watchdog_timer_4s 0075  
                        ??_checkState1 0044                      __ccov2_start_blk1 01FB  
                            _T2CONbits 001C                      __ccov22_end_blk21 021D  
                    __ccov14_end_blk13 020E                      __ccov30_end_blk29 022D  
                           _millivolts 0038                              _MDCONbits 039C  
                   __ccov74_start_blk4 03A6                     __ccov90_start_blk5 02F7  
          ??_enable_external_interrupt 0075                                clrloop0 0405  
                 end_of_initialization 008D                      __ccov31_end_blk30 0231  
                    __ccov23_end_blk22 021E                      __ccov15_end_blk14 0210  
      __size_of_disable_watchdog_timer 0004                              _MDSRCbits 039D  
  __size_of_disable_external_interrupt 0003                      __ccov3_start_blk2 01FE  
                    __ccov32_end_blk31 0235                      __ccov24_end_blk23 021F  
                    __ccov16_end_blk15 0212                      __ccov40_end_blk39 0245  
                  __ccov44_start_blk43 0257                    __ccov36_start_blk35 023B  
                  __ccov28_start_blk27 0224                    __ccov60_start_blk60 02B8  
                  __ccov52_start_blk52 02A3                              _RCSTAbits 019D  
                   __ccov67_start_blk0 03D2                     __ccov75_start_blk5 03A8  
                   __ccov91_start_blk6 02FC                     _sleep_256s_counter 0028  
                  __ccov99_start_blk17 0336                      __ccov41_end_blk40 0251  
                    __ccov33_end_blk32 0237                      __ccov25_end_blk24 0221  
                    __ccov17_end_blk16 0213                   __ccov134_start_blk17 0064  
                 __ccov150_start_blk17 00D3                              _PORTAbits 000C  
                    __ccov4_start_blk3 01FF                          _WakeUpCounter 0026  
                            _TRISAbits 008C                      __ccov42_end_blk41 0252  
                    __ccov34_end_blk33 0239                      __ccov26_end_blk25 0223  
                    __ccov18_end_blk17 0214                      __ccov50_end_blk49 02A0  
                   __ccov68_start_blk1 03D5                     __ccov76_start_blk6 03AA  
                   __ccov92_start_blk8 0301                    __end_of_checkState1 01F9  
                           _state_door 003F                      __ccov51_end_blk50 02A3  
                    __ccov43_end_blk42 0257                      __ccov35_end_blk34 023B  
                    __ccov27_end_blk26 0224                      __ccov19_end_blk18 0216  
                          _CM1CON0bits 0111                              _TXSTAbits 019E  
                    __ccov5_start_blk4 0203             ??_set_watchdog_timer_128ms 0075  
           ??_set_watchdog_timer_256ms 0075                      __ccov44_end_blk43 0258  
                    __ccov36_end_blk35 023C                      __ccov28_end_blk27 0226  
                    __ccov60_end_blk60 02BA                      __ccov52_end_blk52 02A8  
                  __ccov45_start_blk44 0258                    __ccov37_start_blk36 023C  
                  __ccov29_start_blk28 0226                    __ccov61_start_blk61 02BA  
                  __ccov53_start_blk53 02A8              _enable_external_interrupt 0412  
                   __ccov69_start_blk2 03DE                     __ccov77_start_blk7 03AE  
                   __ccov93_start_blk9 030F                            __ccovbit2_6 038F  
                          __ccovbit3_4 0391                            __ccovbit6_7 038E  
               _disable_watchdog_timer 040E                      __ccov45_end_blk44 025F  
                    __ccov37_end_blk36 023E                      __ccov29_end_blk28 0228  
                    __ccov61_end_blk61 02BC                      __ccov53_end_blk53 02AC  
                 __ccov127_start_blk10 0022                   __ccov135_start_blk19 006A  
                 __ccov151_start_blk19 00D5                          __pbitbssBANK0 0108  
                       __end_of_my_isr 0076                      __ccov6_start_blk5 0204  
                  start_initialization 007A                      __ccov46_end_blk45 0278  
                    __ccov38_end_blk37 023F                      __ccov62_end_blk62 02BF  
                    __ccov54_end_blk54 02AD                     __ccov86_start_blk0 02D1  
                   __ccov78_start_blk8 03B1                            ___powerdown 0103  
                    __ccov47_end_blk46 0288                      __ccov39_end_blk38 0242  
                    __ccov55_end_blk55 02AE                      __ccov63_end_blk64 02C3  
                    __ccov7_start_blk6 0205     __end_of_disable_external_interrupt 0418  
           _disable_external_interrupt 0415                      __ccov80_end_blk10 03B3  
                    __ccov48_end_blk47 0295                      __ccov56_end_blk56 02B1  
                    __ccov64_end_blk65 02C8                    __ccov46_start_blk45 025F  
                  __ccov38_start_blk37 023E                    __ccov62_start_blk62 02BC  
                  __ccov54_start_blk54 02AC                     __ccov87_start_blk1 02DF  
                             ??_my_isr 0073                      __ccov81_end_blk12 03B7  
                    __ccov49_end_blk48 0297                      __ccov57_end_blk57 02B4  
                    __ccov65_end_blk67 02CB                   __ccov128_start_blk11 0035  
                 __ccov136_start_blk20 006C                   __ccov152_start_blk22 00E4  
                 __ccov160_start_blk38 0117                            _checkState1 0090  
                    __ccov8_start_blk7 0206                            __pbssCOMMON 007C  
                            ___latbits 0000                          __pcstackBANK0 0040  
                    __ccov82_end_blk14 03C8                      __ccov58_end_blk58 02B6  
                    __ccov66_end_blk68 02D0                     __ccov88_start_blk2 02E4  
                            ___timeout 0104                      __ccov83_end_blk15 03CA  
             ?_set_watchdog_timer_256s 0073                      __ccov59_end_blk59 02B8  
                    __ccov9_start_blk8 0207                      __ccov84_end_blk16 03D0  
                  __ccov47_start_blk46 0278                    __ccov39_start_blk38 023F  
                  __ccov55_start_blk55 02AD                    __ccov63_start_blk64 02BF  
                   __ccov89_start_blk4 02E9                               ?___awdiv 0075  
                _enable_watchdog_timer 040A                      __ccov85_end_blk18 03D2  
                 __ccov129_start_blk12 0038                   __ccov137_start_blk21 006E  
                 __ccov161_start_blk40 0122                   __ccov153_start_blk25 00EB  
       __size_of_set_watchdog_timer_1s 0007         __size_of_set_watchdog_timer_4s 0007  
        __end_of_set_watchdog_timer_1s 03FD          __end_of_set_watchdog_timer_4s 03E8  
                    __ccov94_end_blk10 0319                       _sleep_1s_counter 002C  
                    __ccov95_end_blk12 0327                               _LATAbits 010C  
     __end_of_set_watchdog_timer_128ms 0404       __end_of_set_watchdog_timer_256ms 03F6  
                            clear_ram0 0404                               _PIE1bits 0091  
                     _sleep_4s_counter 002A                               _PIR1bits 0011  
                    __ccov96_end_blk13 032C                    __ccov80_start_blk10 03B2  
                  __ccov48_start_blk47 0288                    __ccov56_start_blk56 02AE  
                  __ccov64_start_blk65 02C3                          ??_timer2_init 0075  
                    _getBatteryVoltage 039C                             _ADCON0bits 009D  
                    __ccov97_end_blk14 0331                             _ADCON1bits 009E  
                 __ccov146_start_blk10 00B9                   __ccov138_start_blk24 0072  
                 __ccov162_start_blk41 012B                   __ccov154_start_blk26 00EF  
                 __ccov170_start_blk62 0167     __size_of_enable_external_interrupt 0003  
                   ?_getBatteryVoltage 0075                               _WPUAbits 020C  
                  main@output_polarity 0395                      __ccov98_end_blk16 0336  
                  ??_getBatteryVoltage 0077                      __ccov99_end_blk17 033A  
                        _ihcPulseTimer 0034                ?_disable_watchdog_timer 0073  
                  __ccov81_start_blk12 03B3                    __ccov49_start_blk48 0295  
                  __ccov57_start_blk57 02B1                    __ccov65_start_blk67 02C8  
                 __ccov100_start_blk22 033A                 ?_enable_watchdog_timer 0073  
            __end_of_getBatteryVoltage 03D2                       __size_of___awdiv 0060  
                 __ccov147_start_blk11 00C2                   __ccov155_start_blk27 00F5  
                 __ccov163_start_blk45 0130                   __ccov171_start_blk63 0175  
                           _ANSELAbits 018C                    __end_of_timer2_init 03E1  
    __end_of_enable_external_interrupt 0415                    _sleep_128ms_counter 0030  
                             __ptext10 040A                               __ptext11 0412  
                             __ptext12 040E                               __ptext13 0415  
                             __ptext14 033C   __end_of_watch_dog_incrementing_timer 033C  
__size_of_watch_dog_incrementing_timer 006B           _watch_dog_incrementing_timer 02D1  
                         _SSP1CON1bits 0215                             _MDCARHbits 039F  
                           _MDCARLbits 039E                          __size_of_main 00D8  
                  __ccov11_start_blk10 0209         __end_of_disable_watchdog_timer 0412  
          ?_disable_external_interrupt 0073                     __ccov100_end_blk22 033C  
                  __ccov82_start_blk14 03B7                    __ccov58_start_blk58 02B4  
                  __ccov66_start_blk68 02CB                               int$flags 007E  
                 __ccov148_start_blk13 00C9                   __ccov156_start_blk28 00FA  
                 __ccov164_start_blk46 013D                   __ccov172_start_blk64 01A5  
                 __ccov180_start_blk82 01F7                           ?_checkState1 0073  
    __size_of_set_watchdog_timer_128ms 0007      __size_of_set_watchdog_timer_256ms 0007  
            ?_set_watchdog_timer_128ms 0073              ?_set_watchdog_timer_256ms 0073  
                           _INTCONbits 000B                     __ccov10_start_blk9 0208  
                           _FVRCONbits 0117          ?_watch_dog_incrementing_timer 0073  
                             intlevel1 0000                            _prelCounter 0036  
                  __ccov12_start_blk11 020B                    __ccov20_start_blk19 0216  
                       _BatteryVoltage 007C                             _OSCCONbits 0099  
                  __ccov83_start_blk15 03C8                    __ccov59_start_blk59 02B6  
           __size_of_getBatteryVoltage 0036                            _timer2_init 03D2  
     __size_of_set_watchdog_timer_256s 0007                      __ccov110_end_blk1 03E8  
                 __ccov149_start_blk14 00CD                   __ccov157_start_blk29 00FE  
                 __ccov165_start_blk48 0144                   __ccov173_start_blk65 01B2  
                    __ccov103_end_blk0 0402                      __ccov111_end_blk0 03ED  
                           _SRCON0bits 011A                      __ccov120_end_blk1 0418  
                    __ccov104_end_blk1 0404                      __ccov112_end_blk1 03EF  
                  _sleep_256ms_counter 002E                     __ccov130_end_blk13 0043  
                           _WDTCONbits 0097                    __ccov110_start_blk1 03E6  
                    __ccov121_end_blk0 000A                      __ccov113_end_blk0 040C  
                    __ccov105_end_blk0 03F4                      __ccov122_end_blk1 0010  
                    __ccov114_end_blk1 040E                      __ccov106_end_blk1 03F6  
                   __ccov131_end_blk14 0050                    __ccov21_start_blk20 0217  
                  __ccov13_start_blk12 020C                      __ccov115_end_blk0 0410  
                    __ccov107_end_blk0 03FB                      __ccov123_end_blk3 001A  
