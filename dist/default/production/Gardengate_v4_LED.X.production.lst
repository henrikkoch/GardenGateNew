

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Jun 20 13:09:39 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	12LF1822
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2,codecov
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,codecov
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,codecov
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,codecov
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,codecov
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,codecov
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,codecov
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,codecov
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,codecov
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,codecov
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,codecov
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,codecov
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,codecov
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,codecov
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	codecov_info_hdr,global,note,abs,reloc=1,space=6,split=0,delta=1,noexec
    29                           	psect	codecov_info,global,note,abs,reloc=1,space=6,split=0,delta=1,noexec
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC12LF1822 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  008C                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0095                     	;# 
    97  0096                     	;# 
    98  0097                     	;# 
    99  0098                     	;# 
   100  0099                     	;# 
   101  009A                     	;# 
   102  009B                     	;# 
   103  009B                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  010C                     	;# 
   108  0111                     	;# 
   109  0112                     	;# 
   110  0115                     	;# 
   111  0116                     	;# 
   112  0117                     	;# 
   113  0118                     	;# 
   114  0119                     	;# 
   115  011A                     	;# 
   116  011B                     	;# 
   117  011D                     	;# 
   118  011D                     	;# 
   119  018C                     	;# 
   120  0191                     	;# 
   121  0191                     	;# 
   122  0192                     	;# 
   123  0193                     	;# 
   124  0193                     	;# 
   125  0193                     	;# 
   126  0194                     	;# 
   127  0195                     	;# 
   128  0196                     	;# 
   129  0199                     	;# 
   130  019A                     	;# 
   131  019B                     	;# 
   132  019B                     	;# 
   133  019B                     	;# 
   134  019B                     	;# 
   135  019C                     	;# 
   136  019C                     	;# 
   137  019D                     	;# 
   138  019E                     	;# 
   139  019F                     	;# 
   140  020C                     	;# 
   141  0211                     	;# 
   142  0211                     	;# 
   143  0212                     	;# 
   144  0212                     	;# 
   145  0213                     	;# 
   146  0213                     	;# 
   147  0214                     	;# 
   148  0214                     	;# 
   149  0215                     	;# 
   150  0215                     	;# 
   151  0215                     	;# 
   152  0216                     	;# 
   153  0216                     	;# 
   154  0217                     	;# 
   155  0217                     	;# 
   156  0291                     	;# 
   157  0291                     	;# 
   158  0292                     	;# 
   159  0293                     	;# 
   160  0294                     	;# 
   161  0295                     	;# 
   162  0295                     	;# 
   163  0296                     	;# 
   164  0391                     	;# 
   165  0392                     	;# 
   166  0393                     	;# 
   167  039A                     	;# 
   168  039C                     	;# 
   169  039D                     	;# 
   170  039E                     	;# 
   171  039F                     	;# 
   172  0FE4                     	;# 
   173  0FE5                     	;# 
   174  0FE6                     	;# 
   175  0FE7                     	;# 
   176  0FE8                     	;# 
   177  0FE9                     	;# 
   178  0FEA                     	;# 
   179  0FEB                     	;# 
   180  0FED                     	;# 
   181  0FEE                     	;# 
   182  0FEF                     	;# 
   183  0000                     	;# 
   184  0001                     	;# 
   185  0002                     	;# 
   186  0003                     	;# 
   187  0004                     	;# 
   188  0005                     	;# 
   189  0006                     	;# 
   190  0007                     	;# 
   191  0008                     	;# 
   192  0009                     	;# 
   193  000A                     	;# 
   194  000B                     	;# 
   195  000C                     	;# 
   196  0011                     	;# 
   197  0012                     	;# 
   198  0015                     	;# 
   199  0016                     	;# 
   200  0016                     	;# 
   201  0017                     	;# 
   202  0018                     	;# 
   203  0019                     	;# 
   204  001A                     	;# 
   205  001B                     	;# 
   206  001C                     	;# 
   207  001E                     	;# 
   208  001F                     	;# 
   209  008C                     	;# 
   210  0091                     	;# 
   211  0092                     	;# 
   212  0095                     	;# 
   213  0096                     	;# 
   214  0097                     	;# 
   215  0098                     	;# 
   216  0099                     	;# 
   217  009A                     	;# 
   218  009B                     	;# 
   219  009B                     	;# 
   220  009C                     	;# 
   221  009D                     	;# 
   222  009E                     	;# 
   223  010C                     	;# 
   224  0111                     	;# 
   225  0112                     	;# 
   226  0115                     	;# 
   227  0116                     	;# 
   228  0117                     	;# 
   229  0118                     	;# 
   230  0119                     	;# 
   231  011A                     	;# 
   232  011B                     	;# 
   233  011D                     	;# 
   234  011D                     	;# 
   235  018C                     	;# 
   236  0191                     	;# 
   237  0191                     	;# 
   238  0192                     	;# 
   239  0193                     	;# 
   240  0193                     	;# 
   241  0193                     	;# 
   242  0194                     	;# 
   243  0195                     	;# 
   244  0196                     	;# 
   245  0199                     	;# 
   246  019A                     	;# 
   247  019B                     	;# 
   248  019B                     	;# 
   249  019B                     	;# 
   250  019B                     	;# 
   251  019C                     	;# 
   252  019C                     	;# 
   253  019D                     	;# 
   254  019E                     	;# 
   255  019F                     	;# 
   256  020C                     	;# 
   257  0211                     	;# 
   258  0211                     	;# 
   259  0212                     	;# 
   260  0212                     	;# 
   261  0213                     	;# 
   262  0213                     	;# 
   263  0214                     	;# 
   264  0214                     	;# 
   265  0215                     	;# 
   266  0215                     	;# 
   267  0215                     	;# 
   268  0216                     	;# 
   269  0216                     	;# 
   270  0217                     	;# 
   271  0217                     	;# 
   272  0291                     	;# 
   273  0291                     	;# 
   274  0292                     	;# 
   275  0293                     	;# 
   276  0294                     	;# 
   277  0295                     	;# 
   278  0295                     	;# 
   279  0296                     	;# 
   280  0391                     	;# 
   281  0392                     	;# 
   282  0393                     	;# 
   283  039A                     	;# 
   284  039C                     	;# 
   285  039D                     	;# 
   286  039E                     	;# 
   287  039F                     	;# 
   288  0FE4                     	;# 
   289  0FE5                     	;# 
   290  0FE6                     	;# 
   291  0FE7                     	;# 
   292  0FE8                     	;# 
   293  0FE9                     	;# 
   294  0FEA                     	;# 
   295  0FEB                     	;# 
   296  0FED                     	;# 
   297  0FEE                     	;# 
   298  0FEF                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  0011                     	;# 
   313  0012                     	;# 
   314  0015                     	;# 
   315  0016                     	;# 
   316  0016                     	;# 
   317  0017                     	;# 
   318  0018                     	;# 
   319  0019                     	;# 
   320  001A                     	;# 
   321  001B                     	;# 
   322  001C                     	;# 
   323  001E                     	;# 
   324  001F                     	;# 
   325  008C                     	;# 
   326  0091                     	;# 
   327  0092                     	;# 
   328  0095                     	;# 
   329  0096                     	;# 
   330  0097                     	;# 
   331  0098                     	;# 
   332  0099                     	;# 
   333  009A                     	;# 
   334  009B                     	;# 
   335  009B                     	;# 
   336  009C                     	;# 
   337  009D                     	;# 
   338  009E                     	;# 
   339  010C                     	;# 
   340  0111                     	;# 
   341  0112                     	;# 
   342  0115                     	;# 
   343  0116                     	;# 
   344  0117                     	;# 
   345  0118                     	;# 
   346  0119                     	;# 
   347  011A                     	;# 
   348  011B                     	;# 
   349  011D                     	;# 
   350  011D                     	;# 
   351  018C                     	;# 
   352  0191                     	;# 
   353  0191                     	;# 
   354  0192                     	;# 
   355  0193                     	;# 
   356  0193                     	;# 
   357  0193                     	;# 
   358  0194                     	;# 
   359  0195                     	;# 
   360  0196                     	;# 
   361  0199                     	;# 
   362  019A                     	;# 
   363  019B                     	;# 
   364  019B                     	;# 
   365  019B                     	;# 
   366  019B                     	;# 
   367  019C                     	;# 
   368  019C                     	;# 
   369  019D                     	;# 
   370  019E                     	;# 
   371  019F                     	;# 
   372  020C                     	;# 
   373  0211                     	;# 
   374  0211                     	;# 
   375  0212                     	;# 
   376  0212                     	;# 
   377  0213                     	;# 
   378  0213                     	;# 
   379  0214                     	;# 
   380  0214                     	;# 
   381  0215                     	;# 
   382  0215                     	;# 
   383  0215                     	;# 
   384  0216                     	;# 
   385  0216                     	;# 
   386  0217                     	;# 
   387  0217                     	;# 
   388  0291                     	;# 
   389  0291                     	;# 
   390  0292                     	;# 
   391  0293                     	;# 
   392  0294                     	;# 
   393  0295                     	;# 
   394  0295                     	;# 
   395  0296                     	;# 
   396  0391                     	;# 
   397  0392                     	;# 
   398  0393                     	;# 
   399  039A                     	;# 
   400  039C                     	;# 
   401  039D                     	;# 
   402  039E                     	;# 
   403  039F                     	;# 
   404  0FE4                     	;# 
   405  0FE5                     	;# 
   406  0FE6                     	;# 
   407  0FE7                     	;# 
   408  0FE8                     	;# 
   409  0FE9                     	;# 
   410  0FEA                     	;# 
   411  0FEB                     	;# 
   412  0FED                     	;# 
   413  0FEE                     	;# 
   414  0FEF                     	;# 
   415  0000                     	;# 
   416  0001                     	;# 
   417  0002                     	;# 
   418  0003                     	;# 
   419  0004                     	;# 
   420  0005                     	;# 
   421  0006                     	;# 
   422  0007                     	;# 
   423  0008                     	;# 
   424  0009                     	;# 
   425  000A                     	;# 
   426  000B                     	;# 
   427  000C                     	;# 
   428  0011                     	;# 
   429  0012                     	;# 
   430  0015                     	;# 
   431  0016                     	;# 
   432  0016                     	;# 
   433  0017                     	;# 
   434  0018                     	;# 
   435  0019                     	;# 
   436  001A                     	;# 
   437  001B                     	;# 
   438  001C                     	;# 
   439  001E                     	;# 
   440  001F                     	;# 
   441  008C                     	;# 
   442  0091                     	;# 
   443  0092                     	;# 
   444  0095                     	;# 
   445  0096                     	;# 
   446  0097                     	;# 
   447  0098                     	;# 
   448  0099                     	;# 
   449  009A                     	;# 
   450  009B                     	;# 
   451  009B                     	;# 
   452  009C                     	;# 
   453  009D                     	;# 
   454  009E                     	;# 
   455  010C                     	;# 
   456  0111                     	;# 
   457  0112                     	;# 
   458  0115                     	;# 
   459  0116                     	;# 
   460  0117                     	;# 
   461  0118                     	;# 
   462  0119                     	;# 
   463  011A                     	;# 
   464  011B                     	;# 
   465  011D                     	;# 
   466  011D                     	;# 
   467  018C                     	;# 
   468  0191                     	;# 
   469  0191                     	;# 
   470  0192                     	;# 
   471  0193                     	;# 
   472  0193                     	;# 
   473  0193                     	;# 
   474  0194                     	;# 
   475  0195                     	;# 
   476  0196                     	;# 
   477  0199                     	;# 
   478  019A                     	;# 
   479  019B                     	;# 
   480  019B                     	;# 
   481  019B                     	;# 
   482  019B                     	;# 
   483  019C                     	;# 
   484  019C                     	;# 
   485  019D                     	;# 
   486  019E                     	;# 
   487  019F                     	;# 
   488  020C                     	;# 
   489  0211                     	;# 
   490  0211                     	;# 
   491  0212                     	;# 
   492  0212                     	;# 
   493  0213                     	;# 
   494  0213                     	;# 
   495  0214                     	;# 
   496  0214                     	;# 
   497  0215                     	;# 
   498  0215                     	;# 
   499  0215                     	;# 
   500  0216                     	;# 
   501  0216                     	;# 
   502  0217                     	;# 
   503  0217                     	;# 
   504  0291                     	;# 
   505  0291                     	;# 
   506  0292                     	;# 
   507  0293                     	;# 
   508  0294                     	;# 
   509  0295                     	;# 
   510  0295                     	;# 
   511  0296                     	;# 
   512  0391                     	;# 
   513  0392                     	;# 
   514  0393                     	;# 
   515  039A                     	;# 
   516  039C                     	;# 
   517  039D                     	;# 
   518  039E                     	;# 
   519  039F                     	;# 
   520  0FE4                     	;# 
   521  0FE5                     	;# 
   522  0FE6                     	;# 
   523  0FE7                     	;# 
   524  0FE8                     	;# 
   525  0FE9                     	;# 
   526  0FEA                     	;# 
   527  0FEB                     	;# 
   528  0FED                     	;# 
   529  0FEE                     	;# 
   530  0FEF                     	;# 
   531  0000                     	;# 
   532  0001                     	;# 
   533  0002                     	;# 
   534  0003                     	;# 
   535  0004                     	;# 
   536  0005                     	;# 
   537  0006                     	;# 
   538  0007                     	;# 
   539  0008                     	;# 
   540  0009                     	;# 
   541  000A                     	;# 
   542  000B                     	;# 
   543  000C                     	;# 
   544  0011                     	;# 
   545  0012                     	;# 
   546  0015                     	;# 
   547  0016                     	;# 
   548  0016                     	;# 
   549  0017                     	;# 
   550  0018                     	;# 
   551  0019                     	;# 
   552  001A                     	;# 
   553  001B                     	;# 
   554  001C                     	;# 
   555  001E                     	;# 
   556  001F                     	;# 
   557  008C                     	;# 
   558  0091                     	;# 
   559  0092                     	;# 
   560  0095                     	;# 
   561  0096                     	;# 
   562  0097                     	;# 
   563  0098                     	;# 
   564  0099                     	;# 
   565  009A                     	;# 
   566  009B                     	;# 
   567  009B                     	;# 
   568  009C                     	;# 
   569  009D                     	;# 
   570  009E                     	;# 
   571  010C                     	;# 
   572  0111                     	;# 
   573  0112                     	;# 
   574  0115                     	;# 
   575  0116                     	;# 
   576  0117                     	;# 
   577  0118                     	;# 
   578  0119                     	;# 
   579  011A                     	;# 
   580  011B                     	;# 
   581  011D                     	;# 
   582  011D                     	;# 
   583  018C                     	;# 
   584  0191                     	;# 
   585  0191                     	;# 
   586  0192                     	;# 
   587  0193                     	;# 
   588  0193                     	;# 
   589  0193                     	;# 
   590  0194                     	;# 
   591  0195                     	;# 
   592  0196                     	;# 
   593  0199                     	;# 
   594  019A                     	;# 
   595  019B                     	;# 
   596  019B                     	;# 
   597  019B                     	;# 
   598  019B                     	;# 
   599  019C                     	;# 
   600  019C                     	;# 
   601  019D                     	;# 
   602  019E                     	;# 
   603  019F                     	;# 
   604  020C                     	;# 
   605  0211                     	;# 
   606  0211                     	;# 
   607  0212                     	;# 
   608  0212                     	;# 
   609  0213                     	;# 
   610  0213                     	;# 
   611  0214                     	;# 
   612  0214                     	;# 
   613  0215                     	;# 
   614  0215                     	;# 
   615  0215                     	;# 
   616  0216                     	;# 
   617  0216                     	;# 
   618  0217                     	;# 
   619  0217                     	;# 
   620  0291                     	;# 
   621  0291                     	;# 
   622  0292                     	;# 
   623  0293                     	;# 
   624  0294                     	;# 
   625  0295                     	;# 
   626  0295                     	;# 
   627  0296                     	;# 
   628  0391                     	;# 
   629  0392                     	;# 
   630  0393                     	;# 
   631  039A                     	;# 
   632  039C                     	;# 
   633  039D                     	;# 
   634  039E                     	;# 
   635  039F                     	;# 
   636  0FE4                     	;# 
   637  0FE5                     	;# 
   638  0FE6                     	;# 
   639  0FE7                     	;# 
   640  0FE8                     	;# 
   641  0FE9                     	;# 
   642  0FEA                     	;# 
   643  0FEB                     	;# 
   644  0FED                     	;# 
   645  0FEE                     	;# 
   646  0FEF                     	;# 
   647  0000                     	;# 
   648  0001                     	;# 
   649  0002                     	;# 
   650  0003                     	;# 
   651  0004                     	;# 
   652  0005                     	;# 
   653  0006                     	;# 
   654  0007                     	;# 
   655  0008                     	;# 
   656  0009                     	;# 
   657  000A                     	;# 
   658  000B                     	;# 
   659  000C                     	;# 
   660  0011                     	;# 
   661  0012                     	;# 
   662  0015                     	;# 
   663  0016                     	;# 
   664  0016                     	;# 
   665  0017                     	;# 
   666  0018                     	;# 
   667  0019                     	;# 
   668  001A                     	;# 
   669  001B                     	;# 
   670  001C                     	;# 
   671  001E                     	;# 
   672  001F                     	;# 
   673  008C                     	;# 
   674  0091                     	;# 
   675  0092                     	;# 
   676  0095                     	;# 
   677  0096                     	;# 
   678  0097                     	;# 
   679  0098                     	;# 
   680  0099                     	;# 
   681  009A                     	;# 
   682  009B                     	;# 
   683  009B                     	;# 
   684  009C                     	;# 
   685  009D                     	;# 
   686  009E                     	;# 
   687  010C                     	;# 
   688  0111                     	;# 
   689  0112                     	;# 
   690  0115                     	;# 
   691  0116                     	;# 
   692  0117                     	;# 
   693  0118                     	;# 
   694  0119                     	;# 
   695  011A                     	;# 
   696  011B                     	;# 
   697  011D                     	;# 
   698  011D                     	;# 
   699  018C                     	;# 
   700  0191                     	;# 
   701  0191                     	;# 
   702  0192                     	;# 
   703  0193                     	;# 
   704  0193                     	;# 
   705  0193                     	;# 
   706  0194                     	;# 
   707  0195                     	;# 
   708  0196                     	;# 
   709  0199                     	;# 
   710  019A                     	;# 
   711  019B                     	;# 
   712  019B                     	;# 
   713  019B                     	;# 
   714  019B                     	;# 
   715  019C                     	;# 
   716  019C                     	;# 
   717  019D                     	;# 
   718  019E                     	;# 
   719  019F                     	;# 
   720  020C                     	;# 
   721  0211                     	;# 
   722  0211                     	;# 
   723  0212                     	;# 
   724  0212                     	;# 
   725  0213                     	;# 
   726  0213                     	;# 
   727  0214                     	;# 
   728  0214                     	;# 
   729  0215                     	;# 
   730  0215                     	;# 
   731  0215                     	;# 
   732  0216                     	;# 
   733  0216                     	;# 
   734  0217                     	;# 
   735  0217                     	;# 
   736  0291                     	;# 
   737  0291                     	;# 
   738  0292                     	;# 
   739  0293                     	;# 
   740  0294                     	;# 
   741  0295                     	;# 
   742  0295                     	;# 
   743  0296                     	;# 
   744  0391                     	;# 
   745  0392                     	;# 
   746  0393                     	;# 
   747  039A                     	;# 
   748  039C                     	;# 
   749  039D                     	;# 
   750  039E                     	;# 
   751  039F                     	;# 
   752  0FE4                     	;# 
   753  0FE5                     	;# 
   754  0FE6                     	;# 
   755  0FE7                     	;# 
   756  0FE8                     	;# 
   757  0FE9                     	;# 
   758  0FEA                     	;# 
   759  0FEB                     	;# 
   760  0FED                     	;# 
   761  0FEE                     	;# 
   762  0FEF                     	;# 
   763  0011                     _PIR1bits	set	17
   764  001C                     _T2CONbits	set	28
   765  000C                     _PORTAbits	set	12
   766  0012                     _PIR2	set	18
   767  0011                     _PIR1	set	17
   768  000B                     _INTCONbits	set	11
   769  008C                     _TXIF	set	140
   770  0059                     _INTF	set	89
   771  005C                     _INTE	set	92
   772  0097                     _WDTCONbits	set	151
   773  009B                     _ADRESL	set	155
   774  009C                     _ADRESH	set	156
   775  009D                     _ADCON0bits	set	157
   776  009E                     _ADCON1bits	set	158
   777  0091                     _PIE1bits	set	145
   778  0095                     _OPTION_REGbits	set	149
   779  008C                     _TRISAbits	set	140
   780  0099                     _OSCCONbits	set	153
   781  011D                     _APFCON0bits	set	285
   782  0117                     _FVRCONbits	set	279
   783  010C                     _LATAbits	set	268
   784  011A                     _SRCON0bits	set	282
   785  0111                     _CM1CON0bits	set	273
   786  0117                     _FVRCON	set	279
   787  019A                     _TXREG	set	410
   788  019B                     _SPBRG	set	411
   789  019E                     _TXSTAbits	set	414
   790  019D                     _RCSTAbits	set	413
   791  018C                     _ANSELAbits	set	396
   792  018C                     _ANSELA	set	396
   793  0CF5                     _TXEN	set	3317
   794  0CF4                     _SYNC	set	3316
   795  0CFC                     _SCKP	set	3324
   796  0CEF                     _SPEN	set	3311
   797  0CFB                     _BRG16	set	3323
   798  0CF2                     _BRGH	set	3314
   799  0215                     _SSP1CON1bits	set	533
   800  020C                     _WPUAbits	set	524
   801  0296                     _PSTR1CONbits	set	662
   802  039E                     _MDCARLbits	set	926
   803  0393                     _IOCAF	set	915
   804  039D                     _MDSRCbits	set	925
   805  039C                     _MDCONbits	set	924
   806  039F                     _MDCARHbits	set	927
   807                           
   808                           	psect	cinit
   809  0075                     start_initialization:	
   810                           ; #config settings
   811                           
   812  0075                     __initialization:
   813                           
   814                           ; Clear objects allocated to BITCOMMON
   815  0075  01F0               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   816  0076  01F1               	clrf	((__pbitbssCOMMON/(0+8)+1))& (0+127)
   817  0077  01F2               	clrf	((__pbitbssCOMMON/(0+8)+2))& (0+127)
   818                           
   819                           ; Clear objects allocated to COMMON
   820  0078  01FC               	clrf	__pbssCOMMON& (0+127)
   821  0079  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   822                           
   823                           ; Clear objects allocated to BITBANK0
   824  007A  0020               	movlb	0	; select bank0
   825  007B  01A1               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   826  007C  01A2               	clrf	((__pbitbssBANK0/(0+8)+1))& (0+127)
   827  007D  01A3               	clrf	((__pbitbssBANK0/(0+8)+2))& (0+127)
   828  007E  01A4               	clrf	((__pbitbssBANK0/(0+8)+3))& (0+127)
   829  007F  01A5               	clrf	((__pbitbssBANK0/(0+8)+4))& (0+127)
   830                           
   831                           ; Clear objects allocated to BANK0
   832  0080  3026               	movlw	low __pbssBANK0
   833  0081  0084               	movwf	4
   834  0082  3000               	movlw	high __pbssBANK0
   835  0083  0085               	movwf	5
   836  0084  3018               	movlw	24
   837  0085  3184  243C  3180   	fcall	clear_ram0
   838  0088                     end_of_initialization:	
   839                           ;End of C runtime variable initialization code
   840                           
   841  0088                     __end_of__initialization:
   842  0088  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   843  0089  0020               	movlb	0
   844  008A  29FA               	ljmp	_main	;jump to C main() function
   845                           
   846                           	psect	bitbssCOMMON
   847  0380                     __pbitbssCOMMON:
   848  0380                     __ccovbit13_21:
   849  0380                     	ds	1
   850  0381                     __ccovbit11_20:
   851  0381                     	ds	1
   852  0382                     __ccovbit7_19:
   853  0382                     	ds	1
   854  0383                     __ccovbit3_18:
   855  0383                     	ds	1
   856  0384                     __ccovbit1_17:
   857  0384                     	ds	1
   858  0385                     __ccovbit1_16:
   859  0385                     	ds	1
   860  0386                     __ccovbit1_15:
   861  0386                     	ds	1
   862  0387                     __ccovbit24_14:
   863  0387                     	ds	1
   864  0388                     __ccovbit22_13:
   865  0388                     	ds	1
   866  0389                     __ccovbit18_12:
   867  0389                     	ds	1
   868  038A                     __ccovbit14_11:
   869  038A                     	ds	1
   870  038B                     __ccovbit10_10:
   871  038B                     	ds	1
   872  038C                     __ccovbit6_9:
   873  038C                     	ds	1
   874  038D                     __ccovbit2_8:
   875  038D                     	ds	1
   876  038E                     __ccovbit18_7:
   877  038E                     	ds	1
   878  038F                     __ccovbit3_6:
   879  038F                     	ds	1
   880  0390                     __ccovbit76_5:
   881  0390                     	ds	1
   882  0391                     __ccovbit74_4:
   883  0391                     	ds	1
   884  0392                     __ccovbit66_3:
   885  0392                     	ds	1
   886  0393                     __ccovbit62_2:
   887  0393                     	ds	1
   888  0394                     __ccovbit50_1:
   889  0394                     	ds	1
   890  0395                     main@output_polarity:
   891  0395                     	ds	1
   892  0396                     _NewDoorPolarity:
   893  0396                     	ds	1
   894  0397                     _NewStateChangeDetected:
   895  0397                     	ds	1
   896                           
   897                           	psect	bssCOMMON
   898  007C                     __pbssCOMMON:
   899  007C                     _BatteryVoltage:
   900  007C                     	ds	2
   901                           
   902                           	psect	bitbssBANK0
   903  0108                     __pbitbssBANK0:
   904  0108                     __ccovbit1_54:
   905  0108                     	ds	1
   906  0109                     __ccovbit1_53:
   907  0109                     	ds	1
   908  010A                     __ccovbit1_52:
   909  010A                     	ds	1
   910  010B                     __ccovbit1_51:
   911  010B                     	ds	1
   912  010C                     __ccovbit1_50:
   913  010C                     	ds	1
   914  010D                     __ccovbit1_49:
   915  010D                     	ds	1
   916  010E                     __ccovbit1_48:
   917  010E                     	ds	1
   918  010F                     __ccovbit82_47:
   919  010F                     	ds	1
   920  0110                     __ccovbit71_46:
   921  0110                     	ds	1
   922  0111                     __ccovbit69_45:
   923  0111                     	ds	1
   924  0112                     __ccovbit68_44:
   925  0112                     	ds	1
   926  0113                     __ccovbit63_43:
   927  0113                     	ds	1
   928  0114                     __ccovbit51_42:
   929  0114                     	ds	1
   930  0115                     __ccovbit47_41:
   931  0115                     	ds	1
   932  0116                     __ccovbit45_40:
   933  0116                     	ds	1
   934  0117                     __ccovbit40_39:
   935  0117                     	ds	1
   936  0118                     __ccovbit37_38:
   937  0118                     	ds	1
   938  0119                     __ccovbit30_37:
   939  0119                     	ds	1
   940  011A                     __ccovbit29_36:
   941  011A                     	ds	1
   942  011B                     __ccovbit23_35:
   943  011B                     	ds	1
   944  011C                     __ccovbit20_34:
   945  011C                     	ds	1
   946  011D                     __ccovbit15_33:
   947  011D                     	ds	1
   948  011E                     __ccovbit12_32:
   949  011E                     	ds	1
   950  011F                     __ccovbit11_31:
   951  011F                     	ds	1
   952  0120                     __ccovbit9_30:
   953  0120                     	ds	1
   954  0121                     __ccovbit8_29:
   955  0121                     	ds	1
   956  0122                     __ccovbit7_28:
   957  0122                     	ds	1
   958  0123                     __ccovbit4_27:
   959  0123                     	ds	1
   960  0124                     __ccovbit3_26:
   961  0124                     	ds	1
   962  0125                     __ccovbit22_25:
   963  0125                     	ds	1
   964  0126                     __ccovbit19_24:
   965  0126                     	ds	1
   966  0127                     __ccovbit17_23:
   967  0127                     	ds	1
   968  0128                     __ccovbit15_22:
   969  0128                     	ds	1
   970                           
   971                           	psect	bssBANK0
   972  0026                     __pbssBANK0:
   973  0026                     _WakeUpCounter:
   974  0026                     	ds	2
   975  0028                     _sleep_256s_counter:
   976  0028                     	ds	2
   977  002A                     _sleep_4s_counter:
   978  002A                     	ds	2
   979  002C                     _sleep_1s_counter:
   980  002C                     	ds	2
   981  002E                     _sleep_256ms_counter:
   982  002E                     	ds	2
   983  0030                     _sleep_128ms_counter:
   984  0030                     	ds	2
   985  0032                     _ihcPulseTimer:
   986  0032                     	ds	2
   987  0034                     _prelCounter:
   988  0034                     	ds	2
   989  0036                     _millivolts:
   990  0036                     	ds	2
   991  0038                     _state_selftest:
   992  0038                     	ds	1
   993  0039                     _state_output_pulse:
   994  0039                     	ds	1
   995  003A                     _DoorStateAfterPrel:
   996  003A                     	ds	1
   997  003B                     _DoorStateBeforePrel:
   998  003B                     	ds	1
   999  003C                     _state_machine:
  1000  003C                     	ds	1
  1001  003D                     _state_door:
  1002  003D                     	ds	1
  1003                           
  1004                           	psect	clrtext
  1005  043C                     clear_ram0:	
  1006                           ;	Called with FSR0 containing the base address, and
  1007                           ;	WREG with the size to clear
  1008                           
  1009  043C  0064               	clrwdt	;clear the watchdog before getting into this loop
  1010  043D                     clrloop0:
  1011  043D  0180               	clrf	0	;clear RAM location pointed to by FSR
  1012  043E  3101               	addfsr 0,1
  1013  043F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1014  0440  2C3D               	goto	clrloop0	;have we reached the end yet?
  1015  0441  3400               	retlw	0	;all done for this memory range, return
  1016                           
  1017                           	psect	cstackCOMMON
  1018  0073                     __pcstackCOMMON:
  1019  0073                     ?_timer2_init:
  1020  0073                     ?_disable_watchdog_timer:	
  1021                           ; 1 bytes @ 0x0
  1022                           
  1023  0073                     ?_set_watchdog_timer_128ms:	
  1024                           ; 1 bytes @ 0x0
  1025                           
  1026  0073                     ?_enable_external_interrupt:	
  1027                           ; 1 bytes @ 0x0
  1028                           
  1029  0073                     ?_checkState1:	
  1030                           ; 1 bytes @ 0x0
  1031                           
  1032  0073                     ?_set_watchdog_timer_256ms:	
  1033                           ; 1 bytes @ 0x0
  1034                           
  1035  0073                     ?_set_watchdog_timer_1s:	
  1036                           ; 1 bytes @ 0x0
  1037                           
  1038  0073                     ?_set_watchdog_timer_4s:	
  1039                           ; 1 bytes @ 0x0
  1040                           
  1041  0073                     ?_set_watchdog_timer_256s:	
  1042                           ; 1 bytes @ 0x0
  1043                           
  1044  0073                     ?_enable_watchdog_timer:	
  1045                           ; 1 bytes @ 0x0
  1046                           
  1047  0073                     ?_main:	
  1048                           ; 1 bytes @ 0x0
  1049                           
  1050  0073                     ?_watch_dog_incrementing_timer:	
  1051                           ; 1 bytes @ 0x0
  1052                           
  1053  0073                     ?_disable_external_interrupt:	
  1054                           ; 1 bytes @ 0x0
  1055                           
  1056  0073                     ?_my_isr:	
  1057                           ; 1 bytes @ 0x0
  1058                           
  1059  0073                     ??_my_isr:	
  1060                           ; 1 bytes @ 0x0
  1061                           
  1062                           
  1063                           ; 1 bytes @ 0x0
  1064  0073                     	ds	2
  1065  0075                     ??_timer2_init:
  1066  0075                     ??_disable_watchdog_timer:	
  1067                           ; 1 bytes @ 0x2
  1068                           
  1069  0075                     ??_set_watchdog_timer_128ms:	
  1070                           ; 1 bytes @ 0x2
  1071                           
  1072  0075                     ??_enable_external_interrupt:	
  1073                           ; 1 bytes @ 0x2
  1074                           
  1075  0075                     ??_set_watchdog_timer_256ms:	
  1076                           ; 1 bytes @ 0x2
  1077                           
  1078  0075                     ??_set_watchdog_timer_1s:	
  1079                           ; 1 bytes @ 0x2
  1080                           
  1081  0075                     ??_set_watchdog_timer_4s:	
  1082                           ; 1 bytes @ 0x2
  1083                           
  1084  0075                     ??_set_watchdog_timer_256s:	
  1085                           ; 1 bytes @ 0x2
  1086                           
  1087  0075                     ??_enable_watchdog_timer:	
  1088                           ; 1 bytes @ 0x2
  1089                           
  1090  0075                     ??_watch_dog_incrementing_timer:	
  1091                           ; 1 bytes @ 0x2
  1092                           
  1093  0075                     ??_disable_external_interrupt:	
  1094                           ; 1 bytes @ 0x2
  1095                           
  1096  0075                     ?_getBatteryVoltage:	
  1097                           ; 1 bytes @ 0x2
  1098                           
  1099  0075                     ?___awdiv:	
  1100                           ; 2 bytes @ 0x2
  1101                           
  1102  0075                     ___awdiv@divisor:	
  1103                           ; 2 bytes @ 0x2
  1104                           
  1105                           
  1106                           ; 2 bytes @ 0x2
  1107  0075                     	ds	2
  1108  0077                     ??_getBatteryVoltage:
  1109  0077                     ___awdiv@dividend:	
  1110                           ; 1 bytes @ 0x4
  1111                           
  1112                           
  1113                           ; 2 bytes @ 0x4
  1114  0077                     	ds	2
  1115  0079                     ??___awdiv:
  1116                           
  1117                           ; 1 bytes @ 0x6
  1118  0079                     	ds	1
  1119  007A                     getBatteryVoltage@adc_val:
  1120                           
  1121                           ; 2 bytes @ 0x7
  1122  007A                     	ds	2
  1123                           
  1124                           	psect	cstackBANK0
  1125  003E                     __pcstackBANK0:
  1126  003E                     ___awdiv@counter:
  1127                           
  1128                           ; 1 bytes @ 0x0
  1129  003E                     	ds	1
  1130  003F                     ___awdiv@sign:
  1131                           
  1132                           ; 1 bytes @ 0x1
  1133  003F                     	ds	1
  1134  0040                     ___awdiv@quotient:
  1135                           
  1136                           ; 2 bytes @ 0x2
  1137  0040                     	ds	2
  1138  0042                     ??_checkState1:
  1139                           
  1140                           ; 1 bytes @ 0x4
  1141  0042                     	ds	2
  1142  0044                     ??_main:
  1143                           
  1144                           ; 1 bytes @ 0x6
  1145  0044                     	ds	2
  1146                           
  1147                           	psect	maintext
  1148  01FA                     __pmaintext:	
  1149 ;;
  1150 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1151 ;;
  1152 ;; *************** function _main *****************
  1153 ;; Defined at:
  1154 ;;		line 107 in file "main.c"
  1155 ;; Parameters:    Size  Location     Type
  1156 ;;		None
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;		None
  1159 ;; Return value:  Size  Location     Type
  1160 ;;                  1    wreg      void 
  1161 ;; Registers used:
  1162 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1163 ;; Tracked objects:
  1164 ;;		On entry : B1F/0
  1165 ;;		On exit  : 0/0
  1166 ;;		Unchanged: 0/0
  1167 ;; Data sizes:     COMMON   BANK0   BANK1
  1168 ;;      Params:         0       0       0
  1169 ;;      Locals:         0       0       0
  1170 ;;      Temps:          0       2       0
  1171 ;;      Totals:         0       2       0
  1172 ;;Total ram usage:        2 bytes
  1173 ;; Hardware stack levels required when called: 4
  1174 ;; This function calls:
  1175 ;;		___awdiv
  1176 ;;		_checkState1
  1177 ;;		_disable_watchdog_timer
  1178 ;;		_enable_external_interrupt
  1179 ;;		_getBatteryVoltage
  1180 ;;		_set_watchdog_timer_128ms
  1181 ;;		_timer2_init
  1182 ;; This function is called by:
  1183 ;;		Startup code after reset
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187                           
  1188                           ;psect for function _main
  1189  01FA                     _main:
  1190                           
  1191                           ;incstack = 0
  1192                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1193  01FA                     l2345:
  1194                           
  1195                           ;main.c: 108:     static __bit output_polarity;;main.c: 118:     ANSELA = 0;
  1196  01FA  0023               	movlb	3	; select bank3
  1197  01FB  018C               	clrf	12	;volatile
  1198  01FC                     __ccov1_end_blk0:
  1199  01FC                     __ccov2_start_blk1:
  1200  01FC                     l2347:
  1201                           
  1202                           ;main.c: 123:     OSCCONbits.IRCF = 0b1111;
  1203  01FC  3078               	movlw	120
  1204  01FD  0021               	movlb	1	; select bank1
  1205  01FE  0499               	iorwf	25,f	;volatile
  1206  01FF                     __ccov2_end_blk1:
  1207  01FF                     __ccov3_start_blk2:
  1208  01FF                     l2349:
  1209                           
  1210                           ;main.c: 124:     OSCCONbits.SPLLEN = 0;
  1211  01FF  1399               	bcf	25,7	;volatile
  1212  0200                     __ccov3_end_blk2:
  1213  0200                     __ccov4_start_blk3:
  1214  0200                     l2351:
  1215                           
  1216                           ;main.c: 125:     OSCCONbits.SCS = 0b10;
  1217  0200  0819               	movf	25,w	;volatile
  1218  0201  39FC               	andlw	-4
  1219  0202  3802               	iorlw	2
  1220  0203  0099               	movwf	25	;volatile
  1221  0204                     __ccov4_end_blk3:
  1222  0204                     __ccov5_start_blk4:
  1223  0204                     l2353:
  1224                           
  1225                           ;main.c: 151:     TRISAbits.TRISA5 = 0;
  1226  0204  128C               	bcf	12,5	;volatile
  1227  0205                     __ccov5_end_blk4:
  1228  0205                     __ccov6_start_blk5:
  1229  0205                     l2355:
  1230                           
  1231                           ;main.c: 152:     TRISAbits.TRISA4 = 0;
  1232  0205  120C               	bcf	12,4	;volatile
  1233  0206                     __ccov6_end_blk5:
  1234  0206                     __ccov7_start_blk6:
  1235  0206                     l2357:
  1236                           
  1237                           ;main.c: 153:     TRISAbits.TRISA3 = 1;
  1238  0206  158C               	bsf	12,3	;volatile
  1239  0207                     __ccov7_end_blk6:
  1240  0207                     __ccov8_start_blk7:
  1241  0207                     l2359:
  1242                           
  1243                           ;main.c: 154:     TRISAbits.TRISA2 = 1;
  1244  0207  150C               	bsf	12,2	;volatile
  1245  0208                     __ccov8_end_blk7:
  1246  0208                     __ccov9_start_blk8:
  1247  0208                     l2361:
  1248                           
  1249                           ;main.c: 155:     TRISAbits.TRISA1 = 0;
  1250  0208  108C               	bcf	12,1	;volatile
  1251  0209                     __ccov9_end_blk8:
  1252  0209                     __ccov10_start_blk9:
  1253  0209                     l2363:
  1254                           
  1255                           ;main.c: 156:     TRISAbits.TRISA0 = 0;
  1256  0209  100C               	bcf	12,0	;volatile
  1257  020A                     __ccov10_end_blk9:
  1258  020A                     __ccov11_start_blk10:
  1259  020A                     l2365:
  1260                           
  1261                           ;main.c: 159:     ANSELAbits.ANSA4 = 0;
  1262  020A  0023               	movlb	3	; select bank3
  1263  020B  120C               	bcf	12,4	;volatile
  1264  020C                     __ccov11_end_blk10:
  1265  020C                     __ccov12_start_blk11:
  1266  020C                     l2367:
  1267                           
  1268                           ;main.c: 160:     ANSELAbits.ANSA2 = 0;
  1269  020C  110C               	bcf	12,2	;volatile
  1270  020D                     __ccov12_end_blk11:
  1271  020D                     __ccov13_start_blk12:
  1272  020D                     l2369:
  1273                           
  1274                           ;main.c: 161:     ANSELAbits.ANSA1 = 0;
  1275  020D  108C               	bcf	12,1	;volatile
  1276  020E                     __ccov13_end_blk12:
  1277  020E                     __ccov14_start_blk13:
  1278  020E                     l2371:
  1279                           
  1280                           ;main.c: 162:     ANSELAbits.ANSA0 = 0;
  1281  020E  100C               	bcf	12,0	;volatile
  1282  020F                     __ccov14_end_blk13:
  1283  020F                     __ccov15_start_blk14:
  1284  020F                     l2373:
  1285                           
  1286                           ;main.c: 169:     OPTION_REGbits.nWPUEN = 0;
  1287  020F  0021               	movlb	1	; select bank1
  1288  0210  1395               	bcf	21,7	;volatile
  1289  0211                     __ccov15_end_blk14:
  1290  0211                     __ccov16_start_blk15:
  1291  0211                     l2375:
  1292                           
  1293                           ;main.c: 170:     WPUAbits.WPUA3 = 1;
  1294  0211  0024               	movlb	4	; select bank4
  1295  0212  158C               	bsf	12,3	;volatile
  1296  0213                     __ccov16_end_blk15:
  1297  0213                     __ccov17_start_blk16:
  1298  0213                     l2377:
  1299                           
  1300                           ;main.c: 171:     WPUAbits.WPUA2 = 0;
  1301  0213  110C               	bcf	12,2	;volatile
  1302  0214                     __ccov17_end_blk16:
  1303  0214                     __ccov18_start_blk17:
  1304  0214                     l2379:
  1305                           
  1306                           ;main.c: 178:     INTCONbits.PEIE = 1;
  1307  0214  170B               	bsf	11,6	;volatile
  1308  0215                     __ccov18_end_blk17:
  1309  0215                     __ccov19_start_blk18:
  1310  0215                     l2381:
  1311                           
  1312                           ;main.c: 180:     PIE1bits.TMR1GIE = 0;
  1313  0215  0021               	movlb	1	; select bank1
  1314  0216  1391               	bcf	17,7	;volatile
  1315  0217                     __ccov19_end_blk18:
  1316  0217                     __ccov20_start_blk19:
  1317  0217                     l2383:
  1318                           
  1319                           ;main.c: 181:     PIE1bits.SSP1IE = 0;
  1320  0217  1191               	bcf	17,3	;volatile
  1321  0218                     __ccov20_end_blk19:
  1322  0218                     __ccov21_start_blk20:
  1323  0218                     l2385:
  1324                           
  1325                           ;main.c: 183:     INTCONbits.GIE = 1;
  1326  0218  178B               	bsf	11,7	;volatile
  1327  0219                     __ccov21_end_blk20:
  1328  0219                     __ccov22_start_blk21:
  1329  0219                     l2387:
  1330                           
  1331                           ;main.c: 185:     MDCARHbits.MDCH = 0b0100;
  1332  0219  0027               	movlb	7	; select bank7
  1333  021A  081F               	movf	31,w	;volatile
  1334  021B  39F0               	andlw	-16
  1335  021C  3804               	iorlw	4
  1336  021D  009F               	movwf	31	;volatile
  1337  021E                     __ccov22_end_blk21:
  1338  021E                     __ccov23_start_blk22:
  1339  021E                     l2389:
  1340                           
  1341                           ;main.c: 186:     MDCONbits.MDEN = 0;
  1342  021E  139C               	bcf	28,7	;volatile
  1343  021F                     __ccov23_end_blk22:
  1344  021F                     __ccov24_start_blk23:
  1345  021F                     l2391:
  1346                           
  1347                           ;main.c: 187:     MDSRCbits.MDMSODIS = 1;
  1348  021F  179D               	bsf	29,7	;volatile
  1349  0220                     __ccov24_end_blk23:
  1350  0220                     __ccov25_start_blk24:
  1351  0220                     l2393:
  1352                           
  1353                           ;main.c: 189:     PIE1bits.TMR2IE = 1;
  1354  0220  0021               	movlb	1	; select bank1
  1355  0221  1491               	bsf	17,1	;volatile
  1356  0222                     __ccov25_end_blk24:
  1357  0222                     __ccov26_start_blk25:
  1358  0222                     l2395:
  1359                           
  1360                           ;main.c: 190:     PIR1 = 0;
  1361  0222  0020               	movlb	0	; select bank0
  1362  0223  0191               	clrf	17	;volatile
  1363  0224                     __ccov26_end_blk25:
  1364  0224                     __ccov27_start_blk26:
  1365  0224                     l2397:
  1366                           
  1367                           ;main.c: 191:     PIR2 = 0;
  1368  0224  0192               	clrf	18	;volatile
  1369  0225                     __ccov27_end_blk26:
  1370  0225                     __ccov28_start_blk27:
  1371  0225                     l2399:
  1372                           
  1373                           ;main.c: 198:     IOCAF = 0;
  1374  0225  0027               	movlb	7	; select bank7
  1375  0226  0193               	clrf	19	;volatile
  1376  0227                     __ccov28_end_blk27:
  1377  0227                     __ccov29_start_blk28:
  1378  0227                     l2401:
  1379                           
  1380                           ;main.c: 202:     FVRCON = 0;
  1381  0227  0022               	movlb	2	; select bank2
  1382  0228  0197               	clrf	23	;volatile
  1383  0229                     __ccov29_end_blk28:
  1384  0229                     __ccov30_start_blk29:
  1385  0229                     l2403:
  1386                           
  1387                           ;main.c: 204:     MDSRCbits.MDMS = 0b0010;
  1388  0229  0027               	movlb	7	; select bank7
  1389  022A  081D               	movf	29,w	;volatile
  1390  022B  39F0               	andlw	-16
  1391  022C  3802               	iorlw	2
  1392  022D  009D               	movwf	29	;volatile
  1393  022E                     __ccov30_end_blk29:
  1394  022E                     __ccov31_start_blk30:
  1395  022E                     l2405:
  1396                           
  1397                           ;main.c: 205:     MDCARHbits.MDCH = 0b0100;
  1398  022E  081F               	movf	31,w	;volatile
  1399  022F  39F0               	andlw	-16
  1400  0230  3804               	iorlw	4
  1401  0231  009F               	movwf	31	;volatile
  1402  0232                     __ccov31_end_blk30:
  1403  0232                     __ccov32_start_blk31:
  1404  0232                     l2407:
  1405                           
  1406                           ;main.c: 206:     MDCARLbits.MDCL = 0b0100;
  1407  0232  081E               	movf	30,w	;volatile
  1408  0233  39F0               	andlw	-16
  1409  0234  3804               	iorlw	4
  1410  0235  009E               	movwf	30	;volatile
  1411  0236                     __ccov32_end_blk31:
  1412  0236                     __ccov33_start_blk32:
  1413  0236                     l2409:
  1414                           
  1415                           ;main.c: 208:     SSP1CON1bits.SSPEN = 0;
  1416  0236  0024               	movlb	4	; select bank4
  1417  0237  1295               	bcf	21,5	;volatile
  1418  0238                     __ccov33_end_blk32:
  1419  0238                     __ccov34_start_blk33:
  1420  0238                     l2411:
  1421                           
  1422                           ;main.c: 209:     RCSTAbits.SPEN = 0;
  1423  0238  0023               	movlb	3	; select bank3
  1424  0239  139D               	bcf	29,7	;volatile
  1425  023A                     __ccov34_end_blk33:
  1426  023A                     __ccov35_start_blk34:
  1427  023A                     l2413:
  1428                           
  1429                           ;main.c: 211:     CM1CON0bits.C1ON = 0;
  1430  023A  0022               	movlb	2	; select bank2
  1431  023B  1391               	bcf	17,7	;volatile
  1432  023C                     __ccov35_end_blk34:
  1433  023C                     __ccov36_start_blk35:
  1434  023C                     l2415:
  1435                           
  1436                           ;main.c: 215:     SRCON0bits.SRLEN = 0;
  1437  023C  139A               	bcf	26,7	;volatile
  1438  023D                     __ccov36_end_blk35:
  1439  023D                     __ccov37_start_blk36:
  1440  023D                     l2417:
  1441                           
  1442                           ;main.c: 217:     RCSTAbits.SREN = 0;
  1443  023D  0023               	movlb	3	; select bank3
  1444  023E  129D               	bcf	29,5	;volatile
  1445  023F                     __ccov37_end_blk36:
  1446  023F                     __ccov38_start_blk37:
  1447  023F                     l2419:
  1448                           
  1449                           ;main.c: 218:     TXSTAbits.TXEN = 0;
  1450  023F  129E               	bcf	30,5	;volatile
  1451  0240                     __ccov38_end_blk37:
  1452  0240                     __ccov39_start_blk38:
  1453  0240                     l2421:
  1454                           
  1455                           ;main.c: 219:     timer2_init();
  1456  0240  3184  2405  3181   	fcall	_timer2_init
  1457  0243                     __ccov39_end_blk38:
  1458  0243                     __ccov40_start_blk39:
  1459  0243                     l2423:
  1460                           
  1461                           ;main.c: 234:     disable_watchdog_timer();
  1462  0243  3184  2447  3181   	fcall	_disable_watchdog_timer
  1463  0246                     __ccov40_end_blk39:
  1464  0246                     __ccov41_start_blk40:
  1465  0246                     l2425:
  1466                           
  1467                           ;main.c: 241:     _delay((unsigned long)((200)*(16000000/4000.0)));
  1468  0246  3005               	movlw	5
  1469  0247  0020               	movlb	0	; select bank0
  1470  0248  00C5               	movwf	??_main+1
  1471  0249  300F               	movlw	15
  1472  024A  00C4               	movwf	??_main
  1473  024B  30F1               	movlw	241
  1474  024C                     u807:
  1475  024C  0B89               	decfsz	9,f
  1476  024D  2A4C               	goto	u807
  1477  024E  0BC4               	decfsz	??_main,f
  1478  024F  2A4C               	goto	u807
  1479  0250  0BC5               	decfsz	??_main+1,f
  1480  0251  2A4C               	goto	u807
  1481  0252                     __ccov41_end_blk40:
  1482  0252                     __ccov42_start_blk41:
  1483  0252                     l2427:
  1484                           
  1485                           ;main.c: 242:     NewStateChangeDetected = 0;
  1486  0252  13F2               	bcf	_NewStateChangeDetected/(0+8),_NewStateChangeDetected& (0+7)
  1487  0253                     __ccov42_end_blk41:
  1488  0253                     __ccov43_start_blk42:
  1489  0253                     l2429:
  1490                           
  1491                           ;main.c: 245:     state_door = PORTAbits.RA2;
  1492  0253  3000               	movlw	0
  1493  0254  0020               	movlb	0	; select bank0
  1494  0255  190C               	btfsc	12,2	;volatile
  1495  0256  3001               	movlw	1
  1496  0257  00BD               	movwf	_state_door
  1497  0258                     __ccov43_end_blk42:
  1498  0258                     __ccov44_start_blk43:
  1499  0258                     l2431:
  1500                           
  1501                           ;main.c: 246:     state_machine = STATE_JUST_AWAKED;
  1502  0258  01BC               	clrf	_state_machine
  1503  0259                     __ccov44_end_blk43:
  1504  0259                     __ccov45_start_blk44:
  1505  0259                     l2433:
  1506                           
  1507                           ;main.c: 250:     BatteryVoltage = getBatteryVoltage();
  1508  0259  3183  23CF  3181   	fcall	_getBatteryVoltage
  1509  025C  0876               	movf	?_getBatteryVoltage+1,w
  1510  025D  00FD               	movwf	_BatteryVoltage+1	;volatile
  1511  025E  0875               	movf	?_getBatteryVoltage,w
  1512  025F  00FC               	movwf	_BatteryVoltage	;volatile
  1513  0260                     __ccov45_end_blk44:
  1514  0260                     __ccov46_start_blk45:
  1515  0260                     l2435:
  1516                           
  1517                           ;main.c: 251:     millivolts = (8192 / BatteryVoltage) * 1024;
  1518  0260  087D               	movf	_BatteryVoltage+1,w	;volatile
  1519  0261  00F6               	movwf	___awdiv@divisor+1
  1520  0262  087C               	movf	_BatteryVoltage,w	;volatile
  1521  0263  00F5               	movwf	___awdiv@divisor
  1522  0264  3000               	movlw	0
  1523  0265  00F7               	movwf	___awdiv@dividend
  1524  0266  3020               	movlw	32
  1525  0267  00F8               	movwf	___awdiv@dividend+1
  1526  0268  3183  236F  3181   	fcall	___awdiv
  1527  026B  0875               	movf	?___awdiv,w
  1528  026C  0020               	movlb	0	; select bank0
  1529  026D  00C4               	movwf	??_main
  1530  026E  0876               	movf	?___awdiv+1,w
  1531  026F  00C5               	movwf	??_main+1
  1532  0270  300A               	movlw	10
  1533  0271                     u775:
  1534  0271  35C4               	lslf	??_main,f
  1535  0272  0DC5               	rlf	??_main+1,f
  1536  0273  0B89               	decfsz	9,f
  1537  0274  2A71               	goto	u775
  1538  0275  0844               	movf	??_main,w
  1539  0276  00B6               	movwf	_millivolts	;volatile
  1540  0277  0845               	movf	??_main+1,w
  1541  0278  00B7               	movwf	_millivolts+1	;volatile
  1542  0279                     __ccov46_end_blk45:
  1543  0279                     __ccov47_start_blk46:
  1544  0279                     l2437:
  1545                           
  1546                           ;main.c: 252:     millivolts = millivolts / 8;
  1547  0279  3008               	movlw	8
  1548  027A  00F5               	movwf	___awdiv@divisor
  1549  027B  3000               	movlw	0
  1550  027C  00F6               	movwf	___awdiv@divisor+1
  1551  027D  0837               	movf	_millivolts+1,w	;volatile
  1552  027E  00F8               	movwf	___awdiv@dividend+1
  1553  027F  0836               	movf	_millivolts,w	;volatile
  1554  0280  00F7               	movwf	___awdiv@dividend
  1555  0281  3183  236F  3181   	fcall	___awdiv
  1556  0284  0876               	movf	?___awdiv+1,w
  1557  0285  0020               	movlb	0	; select bank0
  1558  0286  00B7               	movwf	_millivolts+1	;volatile
  1559  0287  0875               	movf	?___awdiv,w
  1560  0288  00B6               	movwf	_millivolts	;volatile
  1561  0289                     __ccov47_end_blk46:
  1562  0289                     __ccov48_start_blk47:
  1563  0289                     l2439:
  1564                           
  1565                           ;main.c: 253:     if (BatteryVoltage <= 2400) {
  1566  0289  087D               	movf	_BatteryVoltage+1,w	;volatile
  1567  028A  3A80               	xorlw	128
  1568  028B  00C4               	movwf	??_main
  1569  028C  3089               	movlw	137
  1570  028D  0244               	subwf	??_main,w
  1571  028E  1D03               	skipz
  1572  028F  2A92               	goto	u785
  1573  0290  3061               	movlw	97
  1574  0291  027C               	subwf	_BatteryVoltage,w	;volatile
  1575  0292                     u785:
  1576  0292  1803               	skipnc
  1577  0293  2A95               	goto	u781
  1578  0294  2A96               	goto	u780
  1579  0295                     u781:
  1580  0295  2AA4               	goto	l2447
  1581  0296                     __ccov48_end_blk47:
  1582  0296                     u780:
  1583  0296                     __ccov49_start_blk48:
  1584  0296                     l2441:
  1585                           
  1586                           ;main.c: 255:         LATAbits.LATA4 = 1;
  1587  0296  0022               	movlb	2	; select bank2
  1588  0297  160C               	bsf	12,4	;volatile
  1589  0298                     __ccov49_end_blk48:
  1590  0298                     __ccov50_start_blk49:
  1591  0298                     l2443:
  1592                           
  1593                           ;main.c: 256:         _delay((unsigned long)((5 * 8)*(16000000/4000.0)));
  1594  0298  30D0               	movlw	208
  1595  0299  0020               	movlb	0	; select bank0
  1596  029A  00C4               	movwf	??_main
  1597  029B  30C9               	movlw	201
  1598  029C                     u817:
  1599  029C  0B89               	decfsz	9,f
  1600  029D  2A9C               	goto	u817
  1601  029E  0BC4               	decfsz	??_main,f
  1602  029F  2A9C               	goto	u817
  1603  02A0  3200               	nop2
  1604  02A1                     __ccov50_end_blk49:
  1605  02A1                     __ccov51_start_blk50:
  1606  02A1                     l2445:
  1607  02A1  1672               	bsf	__ccovbit50_1/(0+8),__ccovbit50_1& (0+7)	;volatile
  1608                           
  1609                           ;main.c: 257:         LATAbits.LATA4 = !1;
  1610  02A2  0022               	movlb	2	; select bank2
  1611  02A3  120C               	bcf	12,4	;volatile
  1612  02A4                     __ccov51_end_blk50:
  1613  02A4                     __ccov52_start_blk52:
  1614  02A4                     l2447:
  1615                           
  1616                           ;main.c: 260:     DoorStateBeforePrel = PORTAbits.RA2;
  1617  02A4  3000               	movlw	0
  1618  02A5  0020               	movlb	0	; select bank0
  1619  02A6  190C               	btfsc	12,2	;volatile
  1620  02A7  3001               	movlw	1
  1621  02A8  00BB               	movwf	_DoorStateBeforePrel
  1622  02A9                     __ccov52_end_blk52:
  1623  02A9                     __ccov53_start_blk53:
  1624  02A9                     l2449:
  1625                           
  1626                           ;main.c: 261:     DoorStateAfterPrel = PORTAbits.RA2;
  1627  02A9  3000               	movlw	0
  1628  02AA  190C               	btfsc	12,2	;volatile
  1629  02AB  3001               	movlw	1
  1630  02AC  00BA               	movwf	_DoorStateAfterPrel
  1631  02AD                     __ccov53_end_blk53:
  1632  02AD                     __ccov54_start_blk54:
  1633  02AD                     l2451:
  1634                           
  1635                           ;main.c: 263:     INTCONbits.INTF = 0;
  1636  02AD  108B               	bcf	11,1	;volatile
  1637  02AE                     __ccov54_end_blk54:
  1638  02AE                     __ccov55_start_blk55:
  1639  02AE                     l2453:
  1640                           
  1641                           ;main.c: 264:     INTCONbits.GIE = 1;
  1642  02AE  178B               	bsf	11,7	;volatile
  1643  02AF                     __ccov55_end_blk55:
  1644  02AF                     __ccov56_start_blk56:
  1645  02AF                     l2455:
  1646                           
  1647                           ;main.c: 266:     sleep_128ms_counter = 0;
  1648  02AF  01B0               	clrf	_sleep_128ms_counter	;volatile
  1649  02B0  01B1               	clrf	_sleep_128ms_counter+1	;volatile
  1650  02B1                     __ccov56_end_blk56:
  1651  02B1                     __ccov57_start_blk57:
  1652  02B1                     l2457:
  1653                           
  1654                           ;main.c: 267:     sleep_256ms_counter = 0;
  1655  02B1  01AE               	clrf	_sleep_256ms_counter	;volatile
  1656  02B2  01AF               	clrf	_sleep_256ms_counter+1	;volatile
  1657  02B3                     __ccov57_end_blk57:
  1658  02B3                     __ccov58_start_blk58:
  1659  02B3                     l2459:
  1660                           
  1661                           ;main.c: 268:     sleep_1s_counter = 0;
  1662  02B3  01AC               	clrf	_sleep_1s_counter	;volatile
  1663  02B4  01AD               	clrf	_sleep_1s_counter+1	;volatile
  1664  02B5                     __ccov58_end_blk58:
  1665  02B5                     __ccov59_start_blk59:
  1666  02B5                     l2461:
  1667                           
  1668                           ;main.c: 269:     sleep_4s_counter = 0;
  1669  02B5  01AA               	clrf	_sleep_4s_counter	;volatile
  1670  02B6  01AB               	clrf	_sleep_4s_counter+1	;volatile
  1671  02B7                     __ccov59_end_blk59:
  1672  02B7                     __ccov60_start_blk60:
  1673  02B7                     l2463:
  1674                           
  1675                           ;main.c: 270:     sleep_256s_counter = 0;
  1676  02B7  01A8               	clrf	_sleep_256s_counter	;volatile
  1677  02B8  01A9               	clrf	_sleep_256s_counter+1	;volatile
  1678  02B9                     __ccov60_end_blk60:
  1679  02B9                     __ccov61_start_blk61:
  1680  02B9                     l2465:
  1681                           
  1682                           ;main.c: 271:     set_watchdog_timer_128ms();
  1683  02B9  3184  2434  3181   	fcall	_set_watchdog_timer_128ms
  1684                           
  1685                           ;main.c: 274:     switch (PORTAbits.RA2) {
  1686  02BC  2ACF               	goto	l2475
  1687  02BD                     __ccov61_end_blk61:
  1688  02BD                     __ccov62_start_blk62:
  1689  02BD                     l125:	
  1690                           ;main.c: 275:         case 1:
  1691                           
  1692  02BD  15F2               	bsf	__ccovbit62_2/(0+8),__ccovbit62_2& (0+7)	;volatile
  1693                           
  1694                           ;main.c: 276:              state_door = STATE_DOOR_OPEN;
  1695  02BE  01BD               	clrf	_state_door
  1696  02BF  0ABD               	incf	_state_door,f
  1697                           
  1698                           ;main.c: 277:              OPTION_REGbits.INTEDG = !1;
  1699  02C0  0021               	movlb	1	; select bank1
  1700  02C1  1315               	bcf	21,6	;volatile
  1701                           
  1702                           ;main.c: 278:              NewDoorPolarity = 1;
  1703  02C2  1772               	bsf	_NewDoorPolarity/(0+8),_NewDoorPolarity& (0+7)
  1704                           
  1705                           ;main.c: 279:              DoorStateBeforePrel = 1;
  1706  02C3  0020               	movlb	0	; select bank0
  1707  02C4  01BB               	clrf	_DoorStateBeforePrel
  1708  02C5  0ABB               	incf	_DoorStateBeforePrel,f
  1709                           
  1710                           ;main.c: 280:              break;
  1711  02C6  2AE2               	goto	l2477
  1712  02C7                     __ccov62_end_blk62:
  1713  02C7                     __ccov63_start_blk64:
  1714  02C7                     l2467:
  1715                           
  1716                           ;main.c: 282:             state_door = STATE_DOOR_CLOSED;
  1717  02C7  01BD               	clrf	_state_door
  1718  02C8                     __ccov63_end_blk64:
  1719  02C8                     __ccov64_start_blk65:
  1720  02C8                     l2469:
  1721                           
  1722                           ;main.c: 283:             OPTION_REGbits.INTEDG = !0;
  1723  02C8  0021               	movlb	1	; select bank1
  1724  02C9  1715               	bsf	21,6	;volatile
  1725  02CA                     __ccov64_end_blk65:
  1726  02CA                     __ccov65_start_blk66:
  1727  02CA                     l2471:
  1728  02CA  1572               	bsf	__ccovbit66_3/(0+8),__ccovbit66_3& (0+7)	;volatile
  1729                           
  1730                           ;main.c: 284:             NewDoorPolarity = 0;
  1731  02CB  1372               	bcf	_NewDoorPolarity/(0+8),_NewDoorPolarity& (0+7)
  1732                           
  1733                           ;main.c: 285:             DoorStateBeforePrel = 0;
  1734  02CC  0020               	movlb	0	; select bank0
  1735  02CD  01BB               	clrf	_DoorStateBeforePrel
  1736                           
  1737                           ;main.c: 286:             break;
  1738  02CE  2AE2               	goto	l2477
  1739  02CF                     __ccov65_end_blk66:
  1740  02CF                     __ccov66_start_blk69:
  1741  02CF                     l2475:
  1742  02CF  0020               	movlb	0	; select bank0
  1743  02D0  0C0C               	rrf	12,w	;volatile
  1744  02D1  0C89               	rrf	9,f
  1745  02D2  3901               	andlw	1
  1746  02D3  00C4               	movwf	??_main
  1747  02D4  01C5               	clrf	??_main+1
  1748                           
  1749                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1750                           ; Switch size 1, requested type "simple"
  1751                           ; Number of cases is 1, Range of values is 0 to 0
  1752                           ; switch strategies available:
  1753                           ; Name         Instructions Cycles
  1754                           ; simple_byte            4     3 (average)
  1755                           ; direct_byte            8     6 (fixed)
  1756                           ; jumptable            260     6 (fixed)
  1757                           ;	Chosen strategy is simple_byte
  1758  02D5  0845               	movf	??_main+1,w
  1759  02D6  3A00               	xorlw	0	; case 0
  1760  02D7  1903               	skipnz
  1761  02D8  2ADA               	goto	l2671
  1762  02D9  2AE2               	goto	l2477
  1763  02DA                     l2671:
  1764                           
  1765                           ; Switch size 1, requested type "simple"
  1766                           ; Number of cases is 2, Range of values is 0 to 1
  1767                           ; switch strategies available:
  1768                           ; Name         Instructions Cycles
  1769                           ; simple_byte            7     4 (average)
  1770                           ; direct_byte           10     6 (fixed)
  1771                           ; jumptable            260     6 (fixed)
  1772                           ;	Chosen strategy is simple_byte
  1773  02DA  0844               	movf	??_main,w
  1774  02DB  3A00               	xorlw	0	; case 0
  1775  02DC  1903               	skipnz
  1776  02DD  2AC7               	goto	l2467
  1777  02DE  3A01               	xorlw	1	; case 1
  1778  02DF  1903               	skipnz
  1779  02E0  2ABD               	goto	l125
  1780  02E1  2AE2               	goto	l2477
  1781  02E2                     __ccov66_end_blk69:
  1782  02E2                     __ccov67_start_blk71:
  1783  02E2                     l2477:
  1784                           
  1785                           ;main.c: 289:     enable_external_interrupt();
  1786  02E2  3184  244C  3181   	fcall	_enable_external_interrupt
  1787  02E5                     __ccov67_end_blk71:
  1788  02E5                     __ccov68_start_blk73:
  1789  02E5                     l2479:
  1790                           
  1791                           ;main.c: 293:         if (NewStateChangeDetected == 1) {
  1792  02E5  1FF2               	btfss	_NewStateChangeDetected/(0+8),_NewStateChangeDetected& (0+7)
  1793  02E6  2AE8               	goto	u791
  1794  02E7  2AE9               	goto	u790
  1795  02E8                     u791:
  1796  02E8  2AEE               	goto	l2483
  1797  02E9                     __ccov68_end_blk73:
  1798  02E9                     u790:
  1799  02E9                     __ccov69_start_blk74:
  1800  02E9                     l2481:
  1801  02E9  14F2               	bsf	__ccovbit74_4/(0+8),__ccovbit74_4& (0+7)	;volatile
  1802                           
  1803                           ;main.c: 294:             state_machine = STATE_NEW_DOOR_STATE;
  1804  02EA  0020               	movlb	0	; select bank0
  1805  02EB  01BC               	clrf	_state_machine
  1806  02EC  0ABC               	incf	_state_machine,f
  1807                           
  1808                           ;main.c: 295:             NewStateChangeDetected = 0;
  1809  02ED  13F2               	bcf	_NewStateChangeDetected/(0+8),_NewStateChangeDetected& (0+7)
  1810  02EE                     __ccov69_end_blk74:
  1811  02EE                     __ccov70_start_blk76:
  1812  02EE                     l2483:
  1813  02EE  1472               	bsf	__ccovbit76_5/(0+8),__ccovbit76_5& (0+7)	;volatile
  1814                           
  1815                           ;main.c: 307:         checkState1();
  1816  02EF  3180  208B  3181   	fcall	_checkState1
  1817  02F2  2AE5               	goto	l2479
  1818  02F3                     __ccov70_end_blk76:
  1819  02F3  2871               	ljmp	start
  1820  02F4                     __end_of_main:
  1821                           
  1822                           	psect	text1
  1823  0405                     __ptext1:	
  1824 ;; *************** function _timer2_init *****************
  1825 ;; Defined at:
  1826 ;;		line 405 in file "main.c"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;		None
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;		None
  1831 ;; Return value:  Size  Location     Type
  1832 ;;                  1    wreg      void 
  1833 ;; Registers used:
  1834 ;;		wreg, status,2, status,0
  1835 ;; Tracked objects:
  1836 ;;		On entry : 0/0
  1837 ;;		On exit  : 0/0
  1838 ;;		Unchanged: 0/0
  1839 ;; Data sizes:     COMMON   BANK0   BANK1
  1840 ;;      Params:         0       0       0
  1841 ;;      Locals:         0       0       0
  1842 ;;      Temps:          0       0       0
  1843 ;;      Totals:         0       0       0
  1844 ;;Total ram usage:        0 bytes
  1845 ;; Hardware stack levels used: 1
  1846 ;; Hardware stack levels required when called: 1
  1847 ;; This function calls:
  1848 ;;		Nothing
  1849 ;; This function is called by:
  1850 ;;		_main
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853                           
  1854                           
  1855                           ;psect for function _timer2_init
  1856  0405                     _timer2_init:
  1857                           
  1858                           ;incstack = 0
  1859                           ; Regs used in _timer2_init: [wreg+status,2+status,0]
  1860  0405                     l1425:
  1861                           
  1862                           ;main.c: 407:     T2CONbits.T2OUTPS = 0b1111;
  1863  0405  3078               	movlw	120
  1864  0406  0020               	movlb	0	; select bank0
  1865  0407  049C               	iorwf	28,f	;volatile
  1866  0408                     __ccov71_end_blk0:
  1867  0408                     __ccov72_start_blk1:
  1868  0408                     l1427:
  1869                           
  1870                           ;main.c: 408:     T2CONbits.TMR2ON = 1;
  1871  0408  151C               	bsf	28,2	;volatile
  1872                           
  1873                           ;main.c: 410:     T2CONbits.T2CKPS = 0b10;
  1874  0409  081C               	movf	28,w	;volatile
  1875  040A  39FC               	andlw	-4
  1876  040B  3802               	iorlw	2
  1877  040C  009C               	movwf	28	;volatile
  1878                           
  1879                           ;main.c: 411:     T2CONbits.T2OUTPS = 0b111;
  1880  040D  081C               	movf	28,w	;volatile
  1881  040E  3987               	andlw	-121
  1882  040F  3838               	iorlw	56
  1883  0410  009C               	movwf	28	;volatile
  1884  0411                     __ccov72_end_blk1:
  1885  0411                     __ccov73_start_blk2:
  1886  0411                     l1429:
  1887                           
  1888                           ;main.c: 412:     T2CONbits.TMR2ON = 1;
  1889  0411  151C               	bsf	28,2	;volatile
  1890  0412                     __ccov73_end_blk2:
  1891  0412                     __ccov74_start_blk3:
  1892  0412                     l135:
  1893  0412  17F1               	bsf	__ccovbit3_6/(0+8),__ccovbit3_6& (0+7)	;volatile
  1894  0413  0008               	return
  1895  0414                     __end_of_timer2_init:
  1896  0414                     
  1897                           	psect	text2
  1898  008B                     __ptext2:	
  1899 ;; *************** function _checkState1 *****************
  1900 ;; Defined at:
  1901 ;;		line 41 in file "statemachine.c"
  1902 ;; Parameters:    Size  Location     Type
  1903 ;;		None
  1904 ;; Auto vars:     Size  Location     Type
  1905 ;;		None
  1906 ;; Return value:  Size  Location     Type
  1907 ;;                  1    wreg      void 
  1908 ;; Registers used:
  1909 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMMON   BANK0   BANK1
  1915 ;;      Params:         0       0       0
  1916 ;;      Locals:         0       0       0
  1917 ;;      Temps:          0       2       0
  1918 ;;      Totals:         0       2       0
  1919 ;;Total ram usage:        2 bytes
  1920 ;; Hardware stack levels used: 1
  1921 ;; Hardware stack levels required when called: 3
  1922 ;; This function calls:
  1923 ;;		___awdiv
  1924 ;;		_disable_external_interrupt
  1925 ;;		_disable_watchdog_timer
  1926 ;;		_enable_external_interrupt
  1927 ;;		_enable_watchdog_timer
  1928 ;;		_getBatteryVoltage
  1929 ;;		_set_watchdog_timer_128ms
  1930 ;;		_set_watchdog_timer_1s
  1931 ;;		_watch_dog_incrementing_timer
  1932 ;; This function is called by:
  1933 ;;		_main
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           
  1938                           ;psect for function _checkState1
  1939  008B                     _checkState1:
  1940                           
  1941                           ;incstack = 0
  1942                           ; Regs used in _checkState1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1943  008B                     l2239:
  1944                           
  1945                           ;statemachine.c: 42:     switch(state_machine) {
  1946  008B  29CC               	goto	l2335
  1947  008C                     __ccov129_end_blk0:
  1948  008C                     __ccov130_start_blk2:
  1949  008C                     l2241:
  1950                           
  1951                           ;statemachine.c: 44:             disable_external_interrupt();
  1952  008C  3184  244F  3180   	fcall	_disable_external_interrupt
  1953                           
  1954                           ;statemachine.c: 45:             disable_watchdog_timer();
  1955  008F  3184  2447  3180   	fcall	_disable_watchdog_timer
  1956  0092                     __ccov130_end_blk2:
  1957  0092                     __ccov131_start_blk3:
  1958  0092                     l2243:
  1959  0092  0020               	movlb	0	; select bank0
  1960  0093  1624               	bsf	__ccovbit3_26/(0+8),__ccovbit3_26& (0+7)	;volatile
  1961                           
  1962                           ;statemachine.c: 46:             state_door = STATE_DOOR_UNKNOWN;
  1963  0094  3002               	movlw	2
  1964  0095  00C2               	movwf	??_checkState1
  1965  0096  0842               	movf	??_checkState1,w
  1966  0097  00BD               	movwf	_state_door
  1967  0098                     __ccov131_end_blk3:
  1968  0098                     __ccov132_start_blk4:
  1969  0098                     l2245:
  1970  0098  0020               	movlb	0	; select bank0
  1971  0099  15A4               	bsf	__ccovbit4_27/(0+8),__ccovbit4_27& (0+7)	;volatile
  1972                           
  1973                           ;statemachine.c: 50:             state_machine = STATE_CHECK_DOOR;
  1974  009A  3002               	movlw	2
  1975  009B  00C2               	movwf	??_checkState1
  1976  009C  0842               	movf	??_checkState1,w
  1977  009D  00BC               	movwf	_state_machine
  1978                           
  1979                           ;statemachine.c: 51:             break;
  1980  009E  29F8               	goto	l280
  1981  009F                     __ccov132_end_blk4:
  1982  009F                     __ccov133_start_blk6:
  1983  009F                     l2247:
  1984                           
  1985                           ;statemachine.c: 55:             sleep_128ms_counter = 0;
  1986  009F  01B0               	clrf	_sleep_128ms_counter	;volatile
  1987  00A0  01B1               	clrf	_sleep_128ms_counter+1	;volatile
  1988                           
  1989                           ;statemachine.c: 56:             sleep_256ms_counter = 0;
  1990  00A1  01AE               	clrf	_sleep_256ms_counter	;volatile
  1991  00A2  01AF               	clrf	_sleep_256ms_counter+1	;volatile
  1992                           
  1993                           ;statemachine.c: 57:             sleep_1s_counter = 0;
  1994  00A3  01AC               	clrf	_sleep_1s_counter	;volatile
  1995  00A4  01AD               	clrf	_sleep_1s_counter+1	;volatile
  1996                           
  1997                           ;statemachine.c: 58:             sleep_4s_counter = 0;
  1998  00A5  01AA               	clrf	_sleep_4s_counter	;volatile
  1999  00A6  01AB               	clrf	_sleep_4s_counter+1	;volatile
  2000  00A7                     __ccov133_end_blk6:
  2001  00A7                     __ccov134_start_blk7:
  2002  00A7                     l2249:
  2003  00A7  1524               	bsf	__ccovbit7_28/(0+8),__ccovbit7_28& (0+7)	;volatile
  2004                           
  2005                           ;statemachine.c: 59:             set_watchdog_timer_128ms();
  2006  00A8  3184  2434  3180   	fcall	_set_watchdog_timer_128ms
  2007  00AB                     __ccov134_end_blk7:
  2008  00AB                     __ccov135_start_blk8:
  2009  00AB                     l2251:
  2010  00AB  0020               	movlb	0	; select bank0
  2011  00AC  14A4               	bsf	__ccovbit8_29/(0+8),__ccovbit8_29& (0+7)	;volatile
  2012                           
  2013                           ;statemachine.c: 61:             prelCounter = 1;
  2014  00AD  3001               	movlw	1
  2015  00AE  00B4               	movwf	_prelCounter	;volatile
  2016  00AF  3000               	movlw	0
  2017  00B0  00B5               	movwf	_prelCounter+1	;volatile
  2018  00B1                     __ccov135_end_blk8:
  2019  00B1                     __ccov136_start_blk9:
  2020  00B1                     l2253:
  2021  00B1  0020               	movlb	0	; select bank0
  2022  00B2  1424               	bsf	__ccovbit9_30/(0+8),__ccovbit9_30& (0+7)	;volatile
  2023                           
  2024                           ;statemachine.c: 62:             state_machine = STATE_DOOR_CHANGED_WAIT_PREL;
  2025  00B3  3004               	movlw	4
  2026  00B4  00C2               	movwf	??_checkState1
  2027  00B5  0842               	movf	??_checkState1,w
  2028  00B6  00BC               	movwf	_state_machine
  2029                           
  2030                           ;statemachine.c: 66:             break;
  2031  00B7  29F8               	goto	l280
  2032  00B8                     __ccov136_end_blk9:
  2033  00B8                     __ccov137_start_blk11:
  2034  00B8                     l2255:
  2035  00B8  17A3               	bsf	__ccovbit11_31/(0+8),__ccovbit11_31& (0+7)	;volatile
  2036                           
  2037                           ;statemachine.c: 81:             if (state_door == PORTAbits.RA2) {
  2038  00B9  0C0C               	rrf	12,w	;volatile
  2039  00BA  0C89               	rrf	9,f
  2040  00BB  3901               	andlw	1
  2041  00BC  063D               	xorwf	_state_door,w
  2042  00BD  1D03               	skipz
  2043  00BE  28C0               	goto	u701
  2044  00BF  28C1               	goto	u700
  2045  00C0                     u701:
  2046  00C0  28C8               	goto	l2259
  2047  00C1                     __ccov137_end_blk11:
  2048  00C1                     u700:
  2049  00C1                     __ccov138_start_blk12:
  2050  00C1                     l2257:
  2051  00C1  0020               	movlb	0	; select bank0
  2052  00C2  1723               	bsf	__ccovbit12_32/(0+8),__ccovbit12_32& (0+7)	;volatile
  2053                           
  2054                           ;statemachine.c: 84:                 state_machine = STATE_GO_SLEEP;
  2055  00C3  3009               	movlw	9
  2056  00C4  00C2               	movwf	??_checkState1
  2057  00C5  0842               	movf	??_checkState1,w
  2058  00C6  00BC               	movwf	_state_machine
  2059                           
  2060                           ;statemachine.c: 88:             }
  2061  00C7  29F8               	goto	l280
  2062  00C8                     __ccov138_end_blk12:
  2063  00C8                     __ccov139_start_blk14:
  2064  00C8                     l2259:
  2065                           
  2066                           ;statemachine.c: 92:                 state_door = PORTAbits.RA2;
  2067  00C8  3000               	movlw	0
  2068  00C9  190C               	btfsc	12,2	;volatile
  2069  00CA  3001               	movlw	1
  2070  00CB  00BD               	movwf	_state_door
  2071  00CC                     __ccov139_end_blk14:
  2072  00CC                     __ccov140_start_blk15:
  2073  00CC                     l2261:
  2074  00CC  16A3               	bsf	__ccovbit15_33/(0+8),__ccovbit15_33& (0+7)	;volatile
  2075                           
  2076                           ;statemachine.c: 93:                 DoorStateBeforePrel = state_door;
  2077  00CD  083D               	movf	_state_door,w
  2078  00CE  00C2               	movwf	??_checkState1
  2079  00CF  0842               	movf	??_checkState1,w
  2080  00D0  00BB               	movwf	_DoorStateBeforePrel
  2081  00D1  28AB               	goto	l2251
  2082  00D2                     __ccov140_end_blk15:
  2083  00D2                     __ccov141_start_blk20:
  2084  00D2                     l2267:
  2085  00D2  1623               	bsf	__ccovbit20_34/(0+8),__ccovbit20_34& (0+7)	;volatile
  2086                           
  2087                           ;statemachine.c: 102:             if (prelCounter > 0) {
  2088  00D3  0835               	movf	_prelCounter+1,w	;volatile
  2089  00D4  3A80               	xorlw	128
  2090  00D5  00C2               	movwf	??_checkState1
  2091  00D6  3080               	movlw	128
  2092  00D7  0242               	subwf	??_checkState1,w
  2093  00D8  1D03               	skipz
  2094  00D9  28DC               	goto	u715
  2095  00DA  3001               	movlw	1
  2096  00DB  0234               	subwf	_prelCounter,w	;volatile
  2097  00DC                     u715:
  2098  00DC  1C03               	skipc
  2099  00DD  28DF               	goto	u711
  2100  00DE  28E0               	goto	u710
  2101  00DF                     u711:
  2102  00DF  28E1               	goto	l2271
  2103  00E0                     u710:
  2104  00E0  28B1               	goto	l2253
  2105  00E1                     __ccov141_end_blk20:
  2106  00E1                     __ccov142_start_blk23:
  2107  00E1                     l2271:
  2108  00E1  0020               	movlb	0	; select bank0
  2109  00E2  15A3               	bsf	__ccovbit23_35/(0+8),__ccovbit23_35& (0+7)	;volatile
  2110                           
  2111                           ;statemachine.c: 106:                 state_machine = STATE_DOOR_CHECK_AFTER_PREL;
  2112  00E3  3005               	movlw	5
  2113  00E4  00C2               	movwf	??_checkState1
  2114  00E5  0842               	movf	??_checkState1,w
  2115  00E6  00BC               	movwf	_state_machine
  2116  00E7  29F8               	goto	l280
  2117  00E8                     __ccov142_end_blk23:
  2118  00E8                     __ccov143_start_blk26:
  2119  00E8                     l2273:
  2120                           
  2121                           ;statemachine.c: 114:             DoorStateAfterPrel = PORTAbits.RA2;
  2122  00E8  3000               	movlw	0
  2123  00E9  190C               	btfsc	12,2	;volatile
  2124  00EA  3001               	movlw	1
  2125  00EB  00BA               	movwf	_DoorStateAfterPrel
  2126  00EC                     __ccov143_end_blk26:
  2127  00EC                     __ccov144_start_blk27:
  2128  00EC                     l2275:
  2129                           
  2130                           ;statemachine.c: 121:             if (DoorStateAfterPrel == DoorStateBeforePrel) {
  2131  00EC  083A               	movf	_DoorStateAfterPrel,w
  2132  00ED  063B               	xorwf	_DoorStateBeforePrel,w
  2133  00EE  1D03               	skipz
  2134  00EF  28F1               	goto	u721
  2135  00F0  28F2               	goto	u720
  2136  00F1                     u721:
  2137  00F1  291D               	goto	l2285
  2138  00F2                     __ccov144_end_blk27:
  2139  00F2                     u720:
  2140  00F2                     __ccov145_start_blk28:
  2141  00F2                     l2277:
  2142                           
  2143                           ;statemachine.c: 124:                 state_door = DoorStateAfterPrel;
  2144  00F2  083A               	movf	_DoorStateAfterPrel,w
  2145  00F3  00C2               	movwf	??_checkState1
  2146  00F4  0842               	movf	??_checkState1,w
  2147  00F5  00BD               	movwf	_state_door
  2148                           
  2149                           ;statemachine.c: 127:                 switch (state_door) {
  2150  00F6  28FF               	goto	l2281
  2151  00F7                     __ccov145_end_blk28:
  2152  00F7                     __ccov146_start_blk29:
  2153  00F7                     l260:	
  2154                           ;statemachine.c: 128:                     case STATE_DOOR_OPEN:
  2155                           
  2156  00F7  1523               	bsf	__ccovbit29_36/(0+8),__ccovbit29_36& (0+7)	;volatile
  2157                           
  2158                           ;statemachine.c: 129:                         LATAbits.LATA0 = 1;
  2159  00F8  0022               	movlb	2	; select bank2
  2160  00F9  140C               	bsf	12,0	;volatile
  2161                           
  2162                           ;statemachine.c: 133:                         break;
  2163  00FA  2912               	goto	l2283
  2164  00FB                     __ccov146_end_blk29:
  2165  00FB                     __ccov147_start_blk30:
  2166  00FB                     l262:	
  2167                           ;statemachine.c: 134:                     case STATE_DOOR_CLOSED:
  2168                           
  2169  00FB  14A3               	bsf	__ccovbit30_37/(0+8),__ccovbit30_37& (0+7)	;volatile
  2170                           
  2171                           ;statemachine.c: 135:                         LATAbits.LATA1 = 1;
  2172  00FC  0022               	movlb	2	; select bank2
  2173  00FD  148C               	bsf	12,1	;volatile
  2174                           
  2175                           ;statemachine.c: 139:                         break;
  2176  00FE  2912               	goto	l2283
  2177  00FF                     __ccov147_end_blk30:
  2178  00FF                     __ccov148_start_blk35:
  2179  00FF                     l2281:
  2180  00FF  083D               	movf	_state_door,w
  2181  0100  00C2               	movwf	??_checkState1
  2182  0101  01C3               	clrf	??_checkState1+1
  2183                           
  2184                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2185                           ; Switch size 1, requested type "simple"
  2186                           ; Number of cases is 1, Range of values is 0 to 0
  2187                           ; switch strategies available:
  2188                           ; Name         Instructions Cycles
  2189                           ; simple_byte            4     3 (average)
  2190                           ; direct_byte            8     6 (fixed)
  2191                           ; jumptable            260     6 (fixed)
  2192                           ;	Chosen strategy is simple_byte
  2193  0102  0843               	movf	??_checkState1+1,w
  2194  0103  3A00               	xorlw	0	; case 0
  2195  0104  1903               	skipnz
  2196  0105  2907               	goto	l2673
  2197  0106  2912               	goto	l2283
  2198  0107                     l2673:
  2199                           
  2200                           ; Switch size 1, requested type "simple"
  2201                           ; Number of cases is 3, Range of values is 0 to 2
  2202                           ; switch strategies available:
  2203                           ; Name         Instructions Cycles
  2204                           ; simple_byte           10     6 (average)
  2205                           ; direct_byte           12     6 (fixed)
  2206                           ; jumptable            260     6 (fixed)
  2207                           ;	Chosen strategy is simple_byte
  2208  0107  0842               	movf	??_checkState1,w
  2209  0108  3A00               	xorlw	0	; case 0
  2210  0109  1903               	skipnz
  2211  010A  28FB               	goto	l262
  2212  010B  3A01               	xorlw	1	; case 1
  2213  010C  1903               	skipnz
  2214  010D  28F7               	goto	l260
  2215  010E  3A03               	xorlw	3	; case 2
  2216  010F  1903               	skipnz
  2217  0110  2912               	goto	l2283
  2218  0111  2912               	goto	l2283
  2219  0112                     __ccov148_end_blk35:
  2220  0112                     __ccov149_start_blk37:
  2221  0112                     l2283:
  2222  0112  0020               	movlb	0	; select bank0
  2223  0113  1423               	bsf	__ccovbit37_38/(0+8),__ccovbit37_38& (0+7)	;volatile
  2224                           
  2225                           ;statemachine.c: 148:                 ihcPulseTimer = 5;
  2226  0114  3005               	movlw	5
  2227  0115  00B2               	movwf	_ihcPulseTimer	;volatile
  2228  0116  3000               	movlw	0
  2229  0117  00B3               	movwf	_ihcPulseTimer+1	;volatile
  2230                           
  2231                           ;statemachine.c: 149:                 state_machine = STATE_SEND_IHC_PULSE;
  2232  0118  3006               	movlw	6
  2233  0119  00C2               	movwf	??_checkState1
  2234  011A  0842               	movf	??_checkState1,w
  2235  011B  00BC               	movwf	_state_machine
  2236                           
  2237                           ;statemachine.c: 150:             }
  2238  011C  29F8               	goto	l280
  2239  011D                     __ccov149_end_blk37:
  2240  011D                     __ccov150_start_blk39:
  2241  011D                     l2285:
  2242                           
  2243                           ;statemachine.c: 157:                 sleep_128ms_counter = 0;
  2244  011D  01B0               	clrf	_sleep_128ms_counter	;volatile
  2245  011E  01B1               	clrf	_sleep_128ms_counter+1	;volatile
  2246                           
  2247                           ;statemachine.c: 158:                 sleep_256ms_counter = 0;
  2248  011F  01AE               	clrf	_sleep_256ms_counter	;volatile
  2249  0120  01AF               	clrf	_sleep_256ms_counter+1	;volatile
  2250                           
  2251                           ;statemachine.c: 159:                 sleep_1s_counter = 0;
  2252  0121  01AC               	clrf	_sleep_1s_counter	;volatile
  2253  0122  01AD               	clrf	_sleep_1s_counter+1	;volatile
  2254                           
  2255                           ;statemachine.c: 160:                 sleep_4s_counter = 0;
  2256  0123  01AA               	clrf	_sleep_4s_counter	;volatile
  2257  0124  01AB               	clrf	_sleep_4s_counter+1	;volatile
  2258  0125                     __ccov150_end_blk39:
  2259  0125                     __ccov151_start_blk40:
  2260  0125                     l2287:
  2261  0125  17A2               	bsf	__ccovbit40_39/(0+8),__ccovbit40_39& (0+7)	;volatile
  2262                           
  2263                           ;statemachine.c: 163:                 set_watchdog_timer_1s();
  2264  0126  3184  242C  3180   	fcall	_set_watchdog_timer_1s
  2265  0129  28C1               	goto	l2257
  2266  012A                     __ccov151_end_blk40:
  2267  012A                     __ccov152_start_blk44:
  2268  012A                     l2291:
  2269                           
  2270                           ;statemachine.c: 168:             if (ihcPulseTimer > 0)
  2271  012A  0833               	movf	_ihcPulseTimer+1,w	;volatile
  2272  012B  3A80               	xorlw	128
  2273  012C  00C2               	movwf	??_checkState1
  2274  012D  3080               	movlw	128
  2275  012E  0242               	subwf	??_checkState1,w
  2276  012F  1D03               	skipz
  2277  0130  2933               	goto	u735
  2278  0131  3001               	movlw	1
  2279  0132  0232               	subwf	_ihcPulseTimer,w	;volatile
  2280  0133                     u735:
  2281  0133  1C03               	skipc
  2282  0134  2936               	goto	u731
  2283  0135  2937               	goto	u730
  2284  0136                     u731:
  2285  0136  293E               	goto	l2295
  2286  0137                     __ccov152_end_blk44:
  2287  0137                     u730:
  2288  0137                     __ccov153_start_blk45:
  2289  0137                     l2293:
  2290  0137  0020               	movlb	0	; select bank0
  2291  0138  1722               	bsf	__ccovbit45_40/(0+8),__ccovbit45_40& (0+7)	;volatile
  2292                           
  2293                           ;statemachine.c: 169:                 state_machine = STATE_SEND_IHC_PULSE;
  2294  0139  3006               	movlw	6
  2295  013A  00C2               	movwf	??_checkState1
  2296  013B  0842               	movf	??_checkState1,w
  2297  013C  00BC               	movwf	_state_machine
  2298  013D  29F8               	goto	l280
  2299  013E                     __ccov153_end_blk45:
  2300  013E                     __ccov154_start_blk47:
  2301  013E                     l2295:
  2302  013E  0020               	movlb	0	; select bank0
  2303  013F  16A2               	bsf	__ccovbit47_41/(0+8),__ccovbit47_41& (0+7)	;volatile
  2304                           
  2305                           ;statemachine.c: 171:                 state_machine = STATE_STOP_SENDING_IHC_PULSE;
  2306  0140  3007               	movlw	7
  2307  0141  00C2               	movwf	??_checkState1
  2308  0142  0842               	movf	??_checkState1,w
  2309  0143  00BC               	movwf	_state_machine
  2310  0144  29F8               	goto	l280
  2311  0145                     __ccov154_end_blk47:
  2312  0145                     __ccov155_start_blk49:
  2313  0145                     l269:	
  2314                           ;statemachine.c: 176:         case STATE_STOP_SENDING_IHC_PULSE:
  2315                           
  2316                           
  2317                           ;statemachine.c: 178:             LATAbits.LATA0 = !1;
  2318  0145  0022               	movlb	2	; select bank2
  2319  0146  100C               	bcf	12,0	;volatile
  2320                           
  2321                           ;statemachine.c: 179:             LATAbits.LATA1 = !1;
  2322  0147  108C               	bcf	12,1	;volatile
  2323                           
  2324                           ;statemachine.c: 180:             LATAbits.LATA4 = !1;
  2325  0148  120C               	bcf	12,4	;volatile
  2326  0149                     __ccov155_end_blk49:
  2327  0149                     __ccov156_start_blk50:
  2328  0149                     l2297:
  2329                           
  2330                           ;statemachine.c: 184:             sleep_128ms_counter = 0;
  2331  0149  0020               	movlb	0	; select bank0
  2332  014A  01B0               	clrf	_sleep_128ms_counter	;volatile
  2333  014B  01B1               	clrf	_sleep_128ms_counter+1	;volatile
  2334                           
  2335                           ;statemachine.c: 185:             sleep_256ms_counter = 0;
  2336  014C  01AE               	clrf	_sleep_256ms_counter	;volatile
  2337  014D  01AF               	clrf	_sleep_256ms_counter+1	;volatile
  2338                           
  2339                           ;statemachine.c: 186:             sleep_1s_counter = 0;
  2340  014E  01AC               	clrf	_sleep_1s_counter	;volatile
  2341  014F  01AD               	clrf	_sleep_1s_counter+1	;volatile
  2342                           
  2343                           ;statemachine.c: 187:             sleep_4s_counter = 0;
  2344  0150  01AA               	clrf	_sleep_4s_counter	;volatile
  2345  0151  01AB               	clrf	_sleep_4s_counter+1	;volatile
  2346  0152                     __ccov156_end_blk50:
  2347  0152                     __ccov157_start_blk51:
  2348  0152                     l2299:
  2349  0152  1622               	bsf	__ccovbit51_42/(0+8),__ccovbit51_42& (0+7)	;volatile
  2350                           
  2351                           ;statemachine.c: 190:             set_watchdog_timer_128ms();
  2352  0153  3184  2434  3180   	fcall	_set_watchdog_timer_128ms
  2353  0156  28C1               	goto	l2257
  2354  0157                     __ccov157_end_blk51:
  2355  0157                     __ccov158_start_blk54:
  2356  0157                     l2303:
  2357                           
  2358                           ;statemachine.c: 212:             enable_external_interrupt();
  2359  0157  3184  244C  3180   	fcall	_enable_external_interrupt
  2360                           
  2361                           ;statemachine.c: 213:             enable_watchdog_timer();
  2362  015A  3184  2442  3180   	fcall	_enable_watchdog_timer
  2363  015D  0063               	sleep	;# 
  2364  015E                     __ccov158_end_blk54:
  2365  015E                     __ccov159_start_blk55:
  2366  015E                     l2305:
  2367                           
  2368                           ;statemachine.c: 221:             __nop();
  2369  015E  0000               	nop
  2370                           
  2371                           ;statemachine.c: 224:             disable_watchdog_timer();
  2372  015F  3184  2447  3180   	fcall	_disable_watchdog_timer
  2373  0162                     __ccov159_end_blk55:
  2374  0162                     __ccov160_start_blk61:
  2375  0162                     l2313:
  2376                           
  2377                           ;statemachine.c: 238:             watch_dog_incrementing_timer();
  2378  0162  3182  22F4  3180   	fcall	_watch_dog_incrementing_timer
  2379  0165                     __ccov160_end_blk61:
  2380  0165                     __ccov161_start_blk62:
  2381  0165                     l2315:
  2382                           
  2383                           ;statemachine.c: 245:             PSTR1CONbits.STR1A = 1;
  2384  0165  0025               	movlb	5	; select bank5
  2385  0166  1416               	bsf	22,0	;volatile
  2386  0167                     __ccov161_end_blk62:
  2387  0167                     __ccov162_start_blk63:
  2388  0167                     l2317:
  2389  0167  0020               	movlb	0	; select bank0
  2390  0168  15A2               	bsf	__ccovbit63_43/(0+8),__ccovbit63_43& (0+7)	;volatile
  2391                           
  2392                           ;statemachine.c: 247:             if (sleep_256s_counter >= 337) {
  2393  0169  0829               	movf	_sleep_256s_counter+1,w	;volatile
  2394  016A  3A80               	xorlw	128
  2395  016B  00C2               	movwf	??_checkState1
  2396  016C  3081               	movlw	129
  2397  016D  0242               	subwf	??_checkState1,w
  2398  016E  1D03               	skipz
  2399  016F  2972               	goto	u745
  2400  0170  3051               	movlw	81
  2401  0171  0228               	subwf	_sleep_256s_counter,w	;volatile
  2402  0172                     u745:
  2403  0172  1C03               	skipc
  2404  0173  2975               	goto	u741
  2405  0174  2976               	goto	u740
  2406  0175                     u741:
  2407  0175  2898               	goto	l2245
  2408  0176                     __ccov162_end_blk63:
  2409  0176                     u740:
  2410  0176                     __ccov163_start_blk64:
  2411  0176                     l2319:
  2412                           
  2413                           ;statemachine.c: 253:                 BatteryVoltage = getBatteryVoltage();
  2414  0176  3183  23CF  3180   	fcall	_getBatteryVoltage
  2415  0179  0876               	movf	?_getBatteryVoltage+1,w
  2416  017A  00FD               	movwf	_BatteryVoltage+1	;volatile
  2417  017B  0875               	movf	?_getBatteryVoltage,w
  2418  017C  00FC               	movwf	_BatteryVoltage	;volatile
  2419                           
  2420                           ;statemachine.c: 256:                 millivolts = (8192 / BatteryVoltage) * 1024;
  2421  017D  087D               	movf	_BatteryVoltage+1,w	;volatile
  2422  017E  00F6               	movwf	___awdiv@divisor+1
  2423  017F  087C               	movf	_BatteryVoltage,w	;volatile
  2424  0180  00F5               	movwf	___awdiv@divisor
  2425  0181  3000               	movlw	0
  2426  0182  00F7               	movwf	___awdiv@dividend
  2427  0183  3020               	movlw	32
  2428  0184  00F8               	movwf	___awdiv@dividend+1
  2429  0185  3183  236F  3180   	fcall	___awdiv
  2430  0188  0875               	movf	?___awdiv,w
  2431  0189  0020               	movlb	0	; select bank0
  2432  018A  00C2               	movwf	??_checkState1
  2433  018B  0876               	movf	?___awdiv+1,w
  2434  018C  00C3               	movwf	??_checkState1+1
  2435  018D  300A               	movlw	10
  2436  018E                     u755:
  2437  018E  35C2               	lslf	??_checkState1,f
  2438  018F  0DC3               	rlf	??_checkState1+1,f
  2439  0190  0B89               	decfsz	9,f
  2440  0191  298E               	goto	u755
  2441  0192  0842               	movf	??_checkState1,w
  2442  0193  00B6               	movwf	_millivolts	;volatile
  2443  0194  0843               	movf	??_checkState1+1,w
  2444  0195  00B7               	movwf	_millivolts+1	;volatile
  2445                           
  2446                           ;statemachine.c: 257:                 millivolts = millivolts /8;
  2447  0196  3008               	movlw	8
  2448  0197  00F5               	movwf	___awdiv@divisor
  2449  0198  3000               	movlw	0
  2450  0199  00F6               	movwf	___awdiv@divisor+1
  2451  019A  0837               	movf	_millivolts+1,w	;volatile
  2452  019B  00F8               	movwf	___awdiv@dividend+1
  2453  019C  0836               	movf	_millivolts,w	;volatile
  2454  019D  00F7               	movwf	___awdiv@dividend
  2455  019E  3183  236F  3180   	fcall	___awdiv
  2456  01A1  0876               	movf	?___awdiv+1,w
  2457  01A2  0020               	movlb	0	; select bank0
  2458  01A3  00B7               	movwf	_millivolts+1	;volatile
  2459  01A4  0875               	movf	?___awdiv,w
  2460  01A5  00B6               	movwf	_millivolts	;volatile
  2461  01A6                     __ccov163_end_blk64:
  2462  01A6                     __ccov164_start_blk65:
  2463  01A6                     l2321:
  2464                           
  2465                           ;statemachine.c: 267:                 if (millivolts <= 2400) {
  2466  01A6  0837               	movf	_millivolts+1,w	;volatile
  2467  01A7  3A80               	xorlw	128
  2468  01A8  00C2               	movwf	??_checkState1
  2469  01A9  3089               	movlw	137
  2470  01AA  0242               	subwf	??_checkState1,w
  2471  01AB  1D03               	skipz
  2472  01AC  29AF               	goto	u765
  2473  01AD  3061               	movlw	97
  2474  01AE  0236               	subwf	_millivolts,w	;volatile
  2475  01AF                     u765:
  2476  01AF  1803               	skipnc
  2477  01B0  29B2               	goto	u761
  2478  01B1  29B3               	goto	u760
  2479  01B2                     u761:
  2480  01B2  29C3               	goto	l274
  2481  01B3                     __ccov164_end_blk65:
  2482  01B3                     u760:
  2483  01B3                     __ccov165_start_blk66:
  2484  01B3                     l2323:
  2485                           
  2486                           ;statemachine.c: 268:                     LATAbits.LATA4 = 1;
  2487  01B3  0022               	movlb	2	; select bank2
  2488  01B4  160C               	bsf	12,4	;volatile
  2489  01B5                     __ccov165_end_blk66:
  2490  01B5                     __ccov166_start_blk67:
  2491  01B5                     l2325:
  2492                           
  2493                           ;statemachine.c: 269:                     _delay((unsigned long)((5*8)*(16000000/4000.0)
      +                          ));
  2494  01B5  30D0               	movlw	208
  2495  01B6  0020               	movlb	0	; select bank0
  2496  01B7  00C2               	movwf	??_checkState1
  2497  01B8  30C9               	movlw	201
  2498  01B9                     u827:
  2499  01B9  0B89               	decfsz	9,f
  2500  01BA  29B9               	goto	u827
  2501  01BB  0BC2               	decfsz	??_checkState1,f
  2502  01BC  29B9               	goto	u827
  2503  01BD  3200               	nop2
  2504  01BE                     __ccov166_end_blk67:
  2505  01BE                     __ccov167_start_blk68:
  2506  01BE                     l2327:
  2507  01BE  0020               	movlb	0	; select bank0
  2508  01BF  1522               	bsf	__ccovbit68_44/(0+8),__ccovbit68_44& (0+7)	;volatile
  2509                           
  2510                           ;statemachine.c: 270:                     LATAbits.LATA4 = !1;
  2511  01C0  0022               	movlb	2	; select bank2
  2512  01C1  120C               	bcf	12,4	;volatile
  2513                           
  2514                           ;statemachine.c: 271:                 }
  2515  01C2  29C7               	goto	l2329
  2516  01C3                     __ccov167_end_blk68:
  2517  01C3                     __ccov168_start_blk69:
  2518  01C3                     l274:	
  2519                           ;statemachine.c: 272:                 else {
  2520                           
  2521  01C3  0020               	movlb	0	; select bank0
  2522  01C4  14A2               	bsf	__ccovbit69_45/(0+8),__ccovbit69_45& (0+7)	;volatile
  2523                           
  2524                           ;statemachine.c: 273:                     LATAbits.LATA4 = !1;
  2525  01C5  0022               	movlb	2	; select bank2
  2526  01C6  120C               	bcf	12,4	;volatile
  2527  01C7                     __ccov168_end_blk69:
  2528  01C7                     __ccov169_start_blk71:
  2529  01C7                     l2329:
  2530  01C7  0020               	movlb	0	; select bank0
  2531  01C8  1422               	bsf	__ccovbit71_46/(0+8),__ccovbit71_46& (0+7)	;volatile
  2532                           
  2533                           ;statemachine.c: 275:                 sleep_256s_counter = 0;
  2534  01C9  01A8               	clrf	_sleep_256s_counter	;volatile
  2535  01CA  01A9               	clrf	_sleep_256s_counter+1	;volatile
  2536  01CB  2898               	goto	l2245
  2537  01CC                     __ccov169_end_blk71:
  2538  01CC                     __ccov170_start_blk80:
  2539  01CC                     l2335:
  2540  01CC  0020               	movlb	0	; select bank0
  2541  01CD  083C               	movf	_state_machine,w
  2542  01CE  00C2               	movwf	??_checkState1
  2543  01CF  01C3               	clrf	??_checkState1+1
  2544                           
  2545                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2546                           ; Switch size 1, requested type "simple"
  2547                           ; Number of cases is 1, Range of values is 0 to 0
  2548                           ; switch strategies available:
  2549                           ; Name         Instructions Cycles
  2550                           ; simple_byte            4     3 (average)
  2551                           ; direct_byte            8     6 (fixed)
  2552                           ; jumptable            260     6 (fixed)
  2553                           ;	Chosen strategy is simple_byte
  2554  01D0  0843               	movf	??_checkState1+1,w
  2555  01D1  3A00               	xorlw	0	; case 0
  2556  01D2  1903               	skipnz
  2557  01D3  29D5               	goto	l2675
  2558  01D4  29F8               	goto	l280
  2559  01D5                     l2675:
  2560                           
  2561                           ; Switch size 1, requested type "simple"
  2562                           ; Number of cases is 11, Range of values is 0 to 10
  2563                           ; switch strategies available:
  2564                           ; Name         Instructions Cycles
  2565                           ; direct_byte           28     6 (fixed)
  2566                           ; simple_byte           34    18 (average)
  2567                           ; jumptable            260     6 (fixed)
  2568                           ;	Chosen strategy is simple_byte
  2569  01D5  0842               	movf	??_checkState1,w
  2570  01D6  3A00               	xorlw	0	; case 0
  2571  01D7  1903               	skipnz
  2572  01D8  288C               	goto	l2241
  2573  01D9  3A01               	xorlw	1	; case 1
  2574  01DA  1903               	skipnz
  2575  01DB  289F               	goto	l2247
  2576  01DC  3A03               	xorlw	3	; case 2
  2577  01DD  1903               	skipnz
  2578  01DE  28B8               	goto	l2255
  2579  01DF  3A01               	xorlw	1	; case 3
  2580  01E0  1903               	skipnz
  2581  01E1  29F8               	goto	l280
  2582  01E2  3A07               	xorlw	7	; case 4
  2583  01E3  1903               	skipnz
  2584  01E4  28D2               	goto	l2267
  2585  01E5  3A01               	xorlw	1	; case 5
  2586  01E6  1903               	skipnz
  2587  01E7  28E8               	goto	l2273
  2588  01E8  3A03               	xorlw	3	; case 6
  2589  01E9  1903               	skipnz
  2590  01EA  292A               	goto	l2291
  2591  01EB  3A01               	xorlw	1	; case 7
  2592  01EC  1903               	skipnz
  2593  01ED  2945               	goto	l269
  2594  01EE  3A0F               	xorlw	15	; case 8
  2595  01EF  1903               	skipnz
  2596  01F0  29F8               	goto	l280
  2597  01F1  3A01               	xorlw	1	; case 9
  2598  01F2  1903               	skipnz
  2599  01F3  2957               	goto	l2303
  2600  01F4  3A03               	xorlw	3	; case 10
  2601  01F5  1903               	skipnz
  2602  01F6  29F8               	goto	l280
  2603  01F7  29F8               	goto	l280
  2604  01F8                     __ccov170_end_blk80:
  2605  01F8                     __ccov171_start_blk82:
  2606  01F8                     l280:
  2607  01F8  17A1               	bsf	__ccovbit82_47/(0+8),__ccovbit82_47& (0+7)	;volatile
  2608  01F9  0008               	return
  2609  01FA                     __end_of_checkState1:
  2610  01FA                     
  2611                           	psect	text3
  2612  02F4                     __ptext3:	
  2613 ;; *************** function _watch_dog_incrementing_timer *****************
  2614 ;; Defined at:
  2615 ;;		line 449 in file "main.c"
  2616 ;; Parameters:    Size  Location     Type
  2617 ;;		None
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;		None
  2620 ;; Return value:  Size  Location     Type
  2621 ;;                  1    wreg      void 
  2622 ;; Registers used:
  2623 ;;		wreg, status,2, status,0, pclath, cstack
  2624 ;; Tracked objects:
  2625 ;;		On entry : 0/0
  2626 ;;		On exit  : 0/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMMON   BANK0   BANK1
  2629 ;;      Params:         0       0       0
  2630 ;;      Locals:         0       0       0
  2631 ;;      Temps:          1       0       0
  2632 ;;      Totals:         1       0       0
  2633 ;;Total ram usage:        1 bytes
  2634 ;; Hardware stack levels used: 1
  2635 ;; Hardware stack levels required when called: 2
  2636 ;; This function calls:
  2637 ;;		_set_watchdog_timer_128ms
  2638 ;;		_set_watchdog_timer_1s
  2639 ;;		_set_watchdog_timer_256ms
  2640 ;;		_set_watchdog_timer_256s
  2641 ;;		_set_watchdog_timer_4s
  2642 ;; This function is called by:
  2643 ;;		_checkState1
  2644 ;; This function uses a non-reentrant model
  2645 ;;
  2646                           
  2647                           
  2648                           ;psect for function _watch_dog_incrementing_timer
  2649  02F4                     _watch_dog_incrementing_timer:
  2650                           
  2651                           ;incstack = 0
  2652                           ; Regs used in _watch_dog_incrementing_timer: [wreg+status,2+status,0+pclath+cstack]
  2653  02F4                     l1391:
  2654                           
  2655                           ;main.c: 451:     if (sleep_128ms_counter < 8) {
  2656  02F4  0020               	movlb	0	; select bank0
  2657  02F5  0831               	movf	_sleep_128ms_counter+1,w	;volatile
  2658  02F6  3A80               	xorlw	128
  2659  02F7  00F5               	movwf	??_watch_dog_incrementing_timer
  2660  02F8  3080               	movlw	128
  2661  02F9  0275               	subwf	??_watch_dog_incrementing_timer,w
  2662  02FA  1D03               	skipz
  2663  02FB  2AFE               	goto	u195
  2664  02FC  3008               	movlw	8
  2665  02FD  0230               	subwf	_sleep_128ms_counter,w	;volatile
  2666  02FE                     u195:
  2667  02FE  1803               	skipnc
  2668  02FF  2B01               	goto	u191
  2669  0300  2B02               	goto	u190
  2670  0301                     u191:
  2671  0301  2B0C               	goto	l1397
  2672  0302                     __ccov90_end_blk0:
  2673  0302                     u190:
  2674  0302                     __ccov91_start_blk1:
  2675  0302                     l1393:
  2676                           
  2677                           ;main.c: 453:         sleep_128ms_counter++;
  2678  0302  3001               	movlw	1
  2679  0303  0020               	movlb	0	; select bank0
  2680  0304  07B0               	addwf	_sleep_128ms_counter,f	;volatile
  2681  0305  3000               	movlw	0
  2682  0306  3DB1               	addwfc	_sleep_128ms_counter+1,f	;volatile
  2683  0307                     __ccov91_end_blk1:
  2684  0307                     __ccov92_start_blk2:
  2685  0307                     l1395:
  2686  0307  16F1               	bsf	__ccovbit2_8/(0+8),__ccovbit2_8& (0+7)	;volatile
  2687                           
  2688                           ;main.c: 454:         set_watchdog_timer_128ms(); }
  2689  0308  3184  2434  3182   	fcall	_set_watchdog_timer_128ms
  2690  030B  2B6D               	goto	l156
  2691  030C                     __ccov92_end_blk2:
  2692  030C                     __ccov93_start_blk4:
  2693  030C                     l1397:
  2694  030C  0020               	movlb	0	; select bank0
  2695  030D  082F               	movf	_sleep_256ms_counter+1,w	;volatile
  2696  030E  3A80               	xorlw	128
  2697  030F  00F5               	movwf	??_watch_dog_incrementing_timer
  2698  0310  3080               	movlw	128
  2699  0311  0275               	subwf	??_watch_dog_incrementing_timer,w
  2700  0312  1D03               	skipz
  2701  0313  2B16               	goto	u205
  2702  0314  3014               	movlw	20
  2703  0315  022E               	subwf	_sleep_256ms_counter,w	;volatile
  2704  0316                     u205:
  2705  0316  1803               	skipnc
  2706  0317  2B19               	goto	u201
  2707  0318  2B1A               	goto	u200
  2708  0319                     u201:
  2709  0319  2B24               	goto	l1403
  2710  031A                     __ccov93_end_blk4:
  2711  031A                     u200:
  2712  031A                     __ccov94_start_blk5:
  2713  031A                     l1399:
  2714                           
  2715                           ;main.c: 457:         sleep_256ms_counter++;
  2716  031A  3001               	movlw	1
  2717  031B  0020               	movlb	0	; select bank0
  2718  031C  07AE               	addwf	_sleep_256ms_counter,f	;volatile
  2719  031D  3000               	movlw	0
  2720  031E  3DAF               	addwfc	_sleep_256ms_counter+1,f	;volatile
  2721  031F                     __ccov94_end_blk5:
  2722  031F                     __ccov95_start_blk6:
  2723  031F                     l1401:
  2724  031F  1671               	bsf	__ccovbit6_9/(0+8),__ccovbit6_9& (0+7)	;volatile
  2725                           
  2726                           ;main.c: 458:         set_watchdog_timer_256ms(); }
  2727  0320  3184  2424  3182   	fcall	_set_watchdog_timer_256ms
  2728  0323  2B6D               	goto	l156
  2729  0324                     __ccov95_end_blk6:
  2730  0324                     __ccov96_start_blk8:
  2731  0324                     l1403:
  2732  0324  0020               	movlb	0	; select bank0
  2733  0325  082D               	movf	_sleep_1s_counter+1,w	;volatile
  2734  0326  3A80               	xorlw	128
  2735  0327  00F5               	movwf	??_watch_dog_incrementing_timer
  2736  0328  3080               	movlw	128
  2737  0329  0275               	subwf	??_watch_dog_incrementing_timer,w
  2738  032A  1D03               	skipz
  2739  032B  2B2E               	goto	u215
  2740  032C  300A               	movlw	10
  2741  032D  022C               	subwf	_sleep_1s_counter,w	;volatile
  2742  032E                     u215:
  2743  032E  1803               	skipnc
  2744  032F  2B31               	goto	u211
  2745  0330  2B32               	goto	u210
  2746  0331                     u211:
  2747  0331  2B3C               	goto	l1409
  2748  0332                     __ccov96_end_blk8:
  2749  0332                     u210:
  2750  0332                     __ccov97_start_blk9:
  2751  0332                     l1405:
  2752                           
  2753                           ;main.c: 461:         sleep_1s_counter++;
  2754  0332  3001               	movlw	1
  2755  0333  0020               	movlb	0	; select bank0
  2756  0334  07AC               	addwf	_sleep_1s_counter,f	;volatile
  2757  0335  3000               	movlw	0
  2758  0336  3DAD               	addwfc	_sleep_1s_counter+1,f	;volatile
  2759  0337                     __ccov97_end_blk9:
  2760  0337                     __ccov98_start_blk10:
  2761  0337                     l1407:
  2762  0337  15F1               	bsf	__ccovbit10_10/(0+8),__ccovbit10_10& (0+7)	;volatile
  2763                           
  2764                           ;main.c: 462:         set_watchdog_timer_1s(); }
  2765  0338  3184  242C  3182   	fcall	_set_watchdog_timer_1s
  2766  033B  2B6D               	goto	l156
  2767  033C                     __ccov98_end_blk10:
  2768  033C                     __ccov99_start_blk12:
  2769  033C                     l1409:
  2770  033C  0020               	movlb	0	; select bank0
  2771  033D  082B               	movf	_sleep_4s_counter+1,w	;volatile
  2772  033E  3A80               	xorlw	128
  2773  033F  00F5               	movwf	??_watch_dog_incrementing_timer
  2774  0340  3080               	movlw	128
  2775  0341  0275               	subwf	??_watch_dog_incrementing_timer,w
  2776  0342  1D03               	skipz
  2777  0343  2B46               	goto	u225
  2778  0344  3096               	movlw	150
  2779  0345  022A               	subwf	_sleep_4s_counter,w	;volatile
  2780  0346                     u225:
  2781  0346  1803               	skipnc
  2782  0347  2B49               	goto	u221
  2783  0348  2B4A               	goto	u220
  2784  0349                     u221:
  2785  0349  2B54               	goto	l1415
  2786  034A                     __ccov99_end_blk12:
  2787  034A                     u220:
  2788  034A                     __ccov100_start_blk13:
  2789  034A                     l1411:
  2790                           
  2791                           ;main.c: 465:         sleep_4s_counter++;
  2792  034A  3001               	movlw	1
  2793  034B  0020               	movlb	0	; select bank0
  2794  034C  07AA               	addwf	_sleep_4s_counter,f	;volatile
  2795  034D  3000               	movlw	0
  2796  034E  3DAB               	addwfc	_sleep_4s_counter+1,f	;volatile
  2797  034F                     __ccov100_end_blk13:
  2798  034F                     __ccov101_start_blk14:
  2799  034F                     l1413:
  2800  034F  1571               	bsf	__ccovbit14_11/(0+8),__ccovbit14_11& (0+7)	;volatile
  2801                           
  2802                           ;main.c: 466:         set_watchdog_timer_4s(); }
  2803  0350  3184  2414  3182   	fcall	_set_watchdog_timer_4s
  2804  0353  2B6D               	goto	l156
  2805  0354                     __ccov101_end_blk14:
  2806  0354                     __ccov102_start_blk16:
  2807  0354                     l1415:
  2808  0354  0020               	movlb	0	; select bank0
  2809  0355  0829               	movf	_sleep_256s_counter+1,w	;volatile
  2810  0356  3A80               	xorlw	128
  2811  0357  00F5               	movwf	??_watch_dog_incrementing_timer
  2812  0358  3081               	movlw	129
  2813  0359  0275               	subwf	??_watch_dog_incrementing_timer,w
  2814  035A  1D03               	skipz
  2815  035B  2B5E               	goto	u235
  2816  035C  3051               	movlw	81
  2817  035D  0228               	subwf	_sleep_256s_counter,w	;volatile
  2818  035E                     u235:
  2819  035E  1803               	skipnc
  2820  035F  2B61               	goto	u231
  2821  0360  2B62               	goto	u230
  2822  0361                     u231:
  2823  0361  2B6C               	goto	l150
  2824  0362                     __ccov102_end_blk16:
  2825  0362                     u230:
  2826  0362                     __ccov103_start_blk17:
  2827  0362                     l1417:
  2828                           
  2829                           ;main.c: 468:         sleep_256s_counter++;
  2830  0362  3001               	movlw	1
  2831  0363  0020               	movlb	0	; select bank0
  2832  0364  07A8               	addwf	_sleep_256s_counter,f	;volatile
  2833  0365  3000               	movlw	0
  2834  0366  3DA9               	addwfc	_sleep_256s_counter+1,f	;volatile
  2835  0367                     __ccov103_end_blk17:
  2836  0367                     __ccov104_start_blk18:
  2837  0367                     l1419:
  2838  0367  14F1               	bsf	__ccovbit18_12/(0+8),__ccovbit18_12& (0+7)	;volatile
  2839                           
  2840                           ;main.c: 469:         set_watchdog_timer_256s(); }
  2841  0368  3184  241C  3182   	fcall	_set_watchdog_timer_256s
  2842  036B  2B6D               	goto	l156
  2843  036C                     __ccov104_end_blk18:
  2844  036C                     __ccov105_start_blk22:
  2845  036C                     l150:
  2846  036C  1471               	bsf	__ccovbit22_13/(0+8),__ccovbit22_13& (0+7)	;volatile
  2847  036D                     __ccov105_end_blk22:
  2848  036D                     __ccov106_start_blk24:
  2849  036D                     l156:
  2850  036D  17F0               	bsf	__ccovbit24_14/(0+8),__ccovbit24_14& (0+7)	;volatile
  2851  036E  0008               	return
  2852  036F                     __end_of_watch_dog_incrementing_timer:
  2853  036F                     
  2854                           	psect	text4
  2855  0414                     __ptext4:	
  2856 ;; *************** function _set_watchdog_timer_4s *****************
  2857 ;; Defined at:
  2858 ;;		line 32 in file "watchdog.c"
  2859 ;; Parameters:    Size  Location     Type
  2860 ;;		None
  2861 ;; Auto vars:     Size  Location     Type
  2862 ;;		None
  2863 ;; Return value:  Size  Location     Type
  2864 ;;                  1    wreg      void 
  2865 ;; Registers used:
  2866 ;;		wreg, status,2, status,0
  2867 ;; Tracked objects:
  2868 ;;		On entry : 0/0
  2869 ;;		On exit  : 0/0
  2870 ;;		Unchanged: 0/0
  2871 ;; Data sizes:     COMMON   BANK0   BANK1
  2872 ;;      Params:         0       0       0
  2873 ;;      Locals:         0       0       0
  2874 ;;      Temps:          0       0       0
  2875 ;;      Totals:         0       0       0
  2876 ;;Total ram usage:        0 bytes
  2877 ;; Hardware stack levels used: 1
  2878 ;; Hardware stack levels required when called: 1
  2879 ;; This function calls:
  2880 ;;		Nothing
  2881 ;; This function is called by:
  2882 ;;		_watch_dog_incrementing_timer
  2883 ;; This function uses a non-reentrant model
  2884 ;;
  2885                           
  2886                           
  2887                           ;psect for function _set_watchdog_timer_4s
  2888  0414                     _set_watchdog_timer_4s:
  2889                           
  2890                           ;incstack = 0
  2891                           ; Regs used in _set_watchdog_timer_4s: [wreg+status,2+status,0]
  2892  0414                     l1359:
  2893                           
  2894                           ;watchdog.c: 33:     WDTCONbits.WDTPS = 0b01100;
  2895  0414  0021               	movlb	1	; select bank1
  2896  0415  0817               	movf	23,w	;volatile
  2897  0416  39C1               	andlw	-63
  2898  0417  3818               	iorlw	24
  2899  0418  0097               	movwf	23	;volatile
  2900  0419                     __ccov202_end_blk0:
  2901  0419                     __ccov203_start_blk1:
  2902  0419                     l340:
  2903  0419  0020               	movlb	0	; select bank0
  2904  041A  15A1               	bsf	__ccovbit1_51/(0+8),__ccovbit1_51& (0+7)	;volatile
  2905  041B  0008               	return
  2906  041C                     __end_of_set_watchdog_timer_4s:
  2907  041C                     
  2908                           	psect	text5
  2909  041C                     __ptext5:	
  2910 ;; *************** function _set_watchdog_timer_256s *****************
  2911 ;; Defined at:
  2912 ;;		line 39 in file "watchdog.c"
  2913 ;; Parameters:    Size  Location     Type
  2914 ;;		None
  2915 ;; Auto vars:     Size  Location     Type
  2916 ;;		None
  2917 ;; Return value:  Size  Location     Type
  2918 ;;                  1    wreg      void 
  2919 ;; Registers used:
  2920 ;;		wreg, status,2, status,0
  2921 ;; Tracked objects:
  2922 ;;		On entry : 0/0
  2923 ;;		On exit  : 0/0
  2924 ;;		Unchanged: 0/0
  2925 ;; Data sizes:     COMMON   BANK0   BANK1
  2926 ;;      Params:         0       0       0
  2927 ;;      Locals:         0       0       0
  2928 ;;      Temps:          0       0       0
  2929 ;;      Totals:         0       0       0
  2930 ;;Total ram usage:        0 bytes
  2931 ;; Hardware stack levels used: 1
  2932 ;; Hardware stack levels required when called: 1
  2933 ;; This function calls:
  2934 ;;		Nothing
  2935 ;; This function is called by:
  2936 ;;		_watch_dog_incrementing_timer
  2937 ;; This function uses a non-reentrant model
  2938 ;;
  2939                           
  2940                           
  2941                           ;psect for function _set_watchdog_timer_256s
  2942  041C                     _set_watchdog_timer_256s:
  2943                           
  2944                           ;incstack = 0
  2945                           ; Regs used in _set_watchdog_timer_256s: [wreg+status,2+status,0]
  2946  041C                     l1361:
  2947                           
  2948                           ;watchdog.c: 40:     WDTCONbits.WDTPS = 0b10010;
  2949  041C  0021               	movlb	1	; select bank1
  2950  041D  0817               	movf	23,w	;volatile
  2951  041E  39C1               	andlw	-63
  2952  041F  3824               	iorlw	36
  2953  0420  0097               	movwf	23	;volatile
  2954  0421                     __ccov204_end_blk0:
  2955  0421                     __ccov205_start_blk1:
  2956  0421                     l343:
  2957  0421  0020               	movlb	0	; select bank0
  2958  0422  1521               	bsf	__ccovbit1_52/(0+8),__ccovbit1_52& (0+7)	;volatile
  2959  0423  0008               	return
  2960  0424                     __end_of_set_watchdog_timer_256s:
  2961  0424                     
  2962                           	psect	text6
  2963  0424                     __ptext6:	
  2964 ;; *************** function _set_watchdog_timer_256ms *****************
  2965 ;; Defined at:
  2966 ;;		line 23 in file "watchdog.c"
  2967 ;; Parameters:    Size  Location     Type
  2968 ;;		None
  2969 ;; Auto vars:     Size  Location     Type
  2970 ;;		None
  2971 ;; Return value:  Size  Location     Type
  2972 ;;                  1    wreg      void 
  2973 ;; Registers used:
  2974 ;;		wreg, status,2, status,0
  2975 ;; Tracked objects:
  2976 ;;		On entry : 0/0
  2977 ;;		On exit  : 0/0
  2978 ;;		Unchanged: 0/0
  2979 ;; Data sizes:     COMMON   BANK0   BANK1
  2980 ;;      Params:         0       0       0
  2981 ;;      Locals:         0       0       0
  2982 ;;      Temps:          0       0       0
  2983 ;;      Totals:         0       0       0
  2984 ;;Total ram usage:        0 bytes
  2985 ;; Hardware stack levels used: 1
  2986 ;; Hardware stack levels required when called: 1
  2987 ;; This function calls:
  2988 ;;		Nothing
  2989 ;; This function is called by:
  2990 ;;		_watch_dog_incrementing_timer
  2991 ;; This function uses a non-reentrant model
  2992 ;;
  2993                           
  2994                           
  2995                           ;psect for function _set_watchdog_timer_256ms
  2996  0424                     _set_watchdog_timer_256ms:
  2997                           
  2998                           ;incstack = 0
  2999                           ; Regs used in _set_watchdog_timer_256ms: [wreg+status,2+status,0]
  3000  0424                     l1355:
  3001                           
  3002                           ;watchdog.c: 24:     WDTCONbits.WDTPS = 0b01000;
  3003  0424  0021               	movlb	1	; select bank1
  3004  0425  0817               	movf	23,w	;volatile
  3005  0426  39C1               	andlw	-63
  3006  0427  3810               	iorlw	16
  3007  0428  0097               	movwf	23	;volatile
  3008  0429                     __ccov198_end_blk0:
  3009  0429                     __ccov199_start_blk1:
  3010  0429                     l334:
  3011  0429  0020               	movlb	0	; select bank0
  3012  042A  16A1               	bsf	__ccovbit1_49/(0+8),__ccovbit1_49& (0+7)	;volatile
  3013  042B  0008               	return
  3014  042C                     __end_of_set_watchdog_timer_256ms:
  3015  042C                     
  3016                           	psect	text7
  3017  042C                     __ptext7:	
  3018 ;; *************** function _set_watchdog_timer_1s *****************
  3019 ;; Defined at:
  3020 ;;		line 26 in file "watchdog.c"
  3021 ;; Parameters:    Size  Location     Type
  3022 ;;		None
  3023 ;; Auto vars:     Size  Location     Type
  3024 ;;		None
  3025 ;; Return value:  Size  Location     Type
  3026 ;;                  1    wreg      void 
  3027 ;; Registers used:
  3028 ;;		wreg, status,2, status,0
  3029 ;; Tracked objects:
  3030 ;;		On entry : 0/0
  3031 ;;		On exit  : 0/0
  3032 ;;		Unchanged: 0/0
  3033 ;; Data sizes:     COMMON   BANK0   BANK1
  3034 ;;      Params:         0       0       0
  3035 ;;      Locals:         0       0       0
  3036 ;;      Temps:          0       0       0
  3037 ;;      Totals:         0       0       0
  3038 ;;Total ram usage:        0 bytes
  3039 ;; Hardware stack levels used: 1
  3040 ;; Hardware stack levels required when called: 1
  3041 ;; This function calls:
  3042 ;;		Nothing
  3043 ;; This function is called by:
  3044 ;;		_watch_dog_incrementing_timer
  3045 ;;		_checkState1
  3046 ;; This function uses a non-reentrant model
  3047 ;;
  3048                           
  3049                           
  3050                           ;psect for function _set_watchdog_timer_1s
  3051  042C                     _set_watchdog_timer_1s:
  3052                           
  3053                           ;incstack = 0
  3054                           ; Regs used in _set_watchdog_timer_1s: [wreg+status,2+status,0]
  3055  042C                     l1357:
  3056                           
  3057                           ;watchdog.c: 27:     WDTCONbits.WDTPS = 0b01010;
  3058  042C  0021               	movlb	1	; select bank1
  3059  042D  0817               	movf	23,w	;volatile
  3060  042E  39C1               	andlw	-63
  3061  042F  3814               	iorlw	20
  3062  0430  0097               	movwf	23	;volatile
  3063  0431                     __ccov200_end_blk0:
  3064  0431                     __ccov201_start_blk1:
  3065  0431                     l337:
  3066  0431  0020               	movlb	0	; select bank0
  3067  0432  1621               	bsf	__ccovbit1_50/(0+8),__ccovbit1_50& (0+7)	;volatile
  3068  0433  0008               	return
  3069  0434                     __end_of_set_watchdog_timer_1s:
  3070  0434                     
  3071                           	psect	text8
  3072  0434                     __ptext8:	
  3073 ;; *************** function _set_watchdog_timer_128ms *****************
  3074 ;; Defined at:
  3075 ;;		line 20 in file "watchdog.c"
  3076 ;; Parameters:    Size  Location     Type
  3077 ;;		None
  3078 ;; Auto vars:     Size  Location     Type
  3079 ;;		None
  3080 ;; Return value:  Size  Location     Type
  3081 ;;                  1    wreg      void 
  3082 ;; Registers used:
  3083 ;;		wreg, status,2, status,0
  3084 ;; Tracked objects:
  3085 ;;		On entry : 0/0
  3086 ;;		On exit  : 0/0
  3087 ;;		Unchanged: 0/0
  3088 ;; Data sizes:     COMMON   BANK0   BANK1
  3089 ;;      Params:         0       0       0
  3090 ;;      Locals:         0       0       0
  3091 ;;      Temps:          0       0       0
  3092 ;;      Totals:         0       0       0
  3093 ;;Total ram usage:        0 bytes
  3094 ;; Hardware stack levels used: 1
  3095 ;; Hardware stack levels required when called: 1
  3096 ;; This function calls:
  3097 ;;		Nothing
  3098 ;; This function is called by:
  3099 ;;		_main
  3100 ;;		_watch_dog_incrementing_timer
  3101 ;;		_checkState1
  3102 ;; This function uses a non-reentrant model
  3103 ;;
  3104                           
  3105                           
  3106                           ;psect for function _set_watchdog_timer_128ms
  3107  0434                     _set_watchdog_timer_128ms:
  3108                           
  3109                           ;incstack = 0
  3110                           ; Regs used in _set_watchdog_timer_128ms: [wreg+status,2+status,0]
  3111  0434                     l1353:
  3112                           
  3113                           ;watchdog.c: 21:     WDTCONbits.WDTPS = 0b00111;
  3114  0434  0021               	movlb	1	; select bank1
  3115  0435  0817               	movf	23,w	;volatile
  3116  0436  39C1               	andlw	-63
  3117  0437  380E               	iorlw	14
  3118  0438  0097               	movwf	23	;volatile
  3119  0439                     __ccov196_end_blk0:
  3120  0439                     __ccov197_start_blk1:
  3121  0439                     l331:
  3122  0439  0020               	movlb	0	; select bank0
  3123  043A  1721               	bsf	__ccovbit1_48/(0+8),__ccovbit1_48& (0+7)	;volatile
  3124  043B  0008               	return
  3125  043C                     __end_of_set_watchdog_timer_128ms:
  3126  043C                     
  3127                           	psect	text9
  3128  03CF                     __ptext9:	
  3129 ;; *************** function _getBatteryVoltage *****************
  3130 ;; Defined at:
  3131 ;;		line 414 in file "main.c"
  3132 ;; Parameters:    Size  Location     Type
  3133 ;;		None
  3134 ;; Auto vars:     Size  Location     Type
  3135 ;;  adc_val         2    7[COMMON] int 
  3136 ;; Return value:  Size  Location     Type
  3137 ;;                  2    2[COMMON] int 
  3138 ;; Registers used:
  3139 ;;		wreg, status,2, status,0
  3140 ;; Tracked objects:
  3141 ;;		On entry : 0/0
  3142 ;;		On exit  : 0/0
  3143 ;;		Unchanged: 0/0
  3144 ;; Data sizes:     COMMON   BANK0   BANK1
  3145 ;;      Params:         2       0       0
  3146 ;;      Locals:         2       0       0
  3147 ;;      Temps:          3       0       0
  3148 ;;      Totals:         7       0       0
  3149 ;;Total ram usage:        7 bytes
  3150 ;; Hardware stack levels used: 1
  3151 ;; Hardware stack levels required when called: 1
  3152 ;; This function calls:
  3153 ;;		Nothing
  3154 ;; This function is called by:
  3155 ;;		_main
  3156 ;;		_checkState1
  3157 ;; This function uses a non-reentrant model
  3158 ;;
  3159                           
  3160                           
  3161                           ;psect for function _getBatteryVoltage
  3162  03CF                     _getBatteryVoltage:
  3163                           
  3164                           ;incstack = 0
  3165                           ; Regs used in _getBatteryVoltage: [wreg+status,2+status,0]
  3166  03CF                     l1365:
  3167                           
  3168                           ;main.c: 423:     FVRCONbits.ADFVR = 0b01;
  3169  03CF  0022               	movlb	2	; select bank2
  3170  03D0  0817               	movf	23,w	;volatile
  3171  03D1  39FC               	andlw	-4
  3172  03D2  3801               	iorlw	1
  3173  03D3  0097               	movwf	23	;volatile
  3174  03D4                     __ccov75_end_blk0:
  3175  03D4                     __ccov76_start_blk1:
  3176  03D4                     l1367:
  3177                           
  3178                           ;main.c: 425:     FVRCONbits.FVREN = 1;
  3179  03D4  1797               	bsf	23,7	;volatile
  3180  03D5                     __ccov76_end_blk1:
  3181  03D5                     __ccov77_start_blk3:
  3182  03D5                     l138:	
  3183                           ;main.c: 426:     while (!FVRCONbits.FVRRDY);
  3184                           
  3185  03D5  1F17               	btfss	23,6	;volatile
  3186  03D6  2BD8               	goto	u171
  3187  03D7  2BD9               	goto	u170
  3188  03D8                     u171:
  3189  03D8  2BD5               	goto	l138
  3190  03D9                     __ccov77_end_blk3:
  3191  03D9                     u170:
  3192  03D9                     __ccov78_start_blk4:
  3193  03D9                     l140:
  3194                           
  3195                           ;main.c: 428:     ADCON1bits.ADFM = 1;
  3196  03D9  0021               	movlb	1	; select bank1
  3197  03DA  179E               	bsf	30,7	;volatile
  3198  03DB                     __ccov78_end_blk4:
  3199  03DB                     __ccov79_start_blk5:
  3200  03DB                     l1369:
  3201                           
  3202                           ;main.c: 429:     ADCON0bits.CHS = 0b11111;
  3203  03DB  307C               	movlw	124
  3204  03DC  049D               	iorwf	29,f	;volatile
  3205  03DD                     __ccov79_end_blk5:
  3206  03DD                     __ccov80_start_blk6:
  3207  03DD                     l1371:
  3208                           
  3209                           ;main.c: 430:     _delay((unsigned long)((200)*(16000000/4000000.0)));
  3210  03DD  30A0               	movlw	160
  3211  03DE                     u837:
  3212  03DE  3200               	nop2
  3213  03DF  0B89               	decfsz	9,f
  3214  03E0  2BDE               	goto	u837
  3215  03E1                     __ccov80_end_blk6:
  3216  03E1                     __ccov81_start_blk7:
  3217  03E1                     l1373:
  3218                           
  3219                           ;main.c: 432:     ADCON1bits.ADPREF = 0b00;
  3220  03E1  30FC               	movlw	-4
  3221  03E2  0021               	movlb	1	; select bank1
  3222  03E3  059E               	andwf	30,f	;volatile
  3223  03E4                     __ccov81_end_blk7:
  3224  03E4                     __ccov82_start_blk8:
  3225  03E4                     l1375:
  3226                           
  3227                           ;main.c: 434:     ADCON0bits.ADON = 1;
  3228  03E4  141D               	bsf	29,0	;volatile
  3229  03E5                     __ccov82_end_blk8:
  3230  03E5                     l1377:
  3231  03E5                     __ccov84_start_blk10:
  3232  03E5                     l1379:
  3233                           
  3234                           ;main.c: 439:     ADCON0bits.GO = 1;
  3235  03E5  149D               	bsf	29,1	;volatile
  3236  03E6                     __ccov84_end_blk10:
  3237  03E6                     __ccov85_start_blk12:
  3238  03E6                     l141:	
  3239                           ;main.c: 440:     while (!ADCON0bits.GO_nDONE);
  3240                           
  3241  03E6  1C9D               	btfss	29,1	;volatile
  3242  03E7  2BE9               	goto	u181
  3243  03E8  2BEA               	goto	u180
  3244  03E9                     u181:
  3245  03E9  2BE6               	goto	l141
  3246  03EA                     __ccov85_end_blk12:
  3247  03EA                     u180:
  3248  03EA                     __ccov86_start_blk14:
  3249  03EA                     l1381:
  3250                           
  3251                           ;main.c: 442:     adc_val = (ADRESH << 8);
  3252  03EA  081C               	movf	28,w	;volatile
  3253  03EB  00F7               	movwf	??_getBatteryVoltage
  3254  03EC  01F8               	clrf	??_getBatteryVoltage+1
  3255  03ED  0877               	movf	??_getBatteryVoltage,w
  3256  03EE  00F8               	movwf	??_getBatteryVoltage+1
  3257  03EF  01F7               	clrf	??_getBatteryVoltage
  3258  03F0  0877               	movf	??_getBatteryVoltage,w
  3259  03F1  00FA               	movwf	getBatteryVoltage@adc_val
  3260  03F2  0878               	movf	??_getBatteryVoltage+1,w
  3261  03F3  00FB               	movwf	getBatteryVoltage@adc_val+1
  3262                           
  3263                           ;main.c: 443:     adc_val |= ADRESL;
  3264  03F4  081B               	movf	27,w	;volatile
  3265  03F5  00F7               	movwf	??_getBatteryVoltage
  3266  03F6  01F8               	clrf	??_getBatteryVoltage+1
  3267  03F7  0877               	movf	??_getBatteryVoltage,w
  3268  03F8  04FA               	iorwf	getBatteryVoltage@adc_val,f
  3269  03F9  0878               	movf	??_getBatteryVoltage+1,w
  3270  03FA  04FB               	iorwf	getBatteryVoltage@adc_val+1,f
  3271  03FB                     __ccov86_end_blk14:
  3272  03FB                     __ccov87_start_blk15:
  3273  03FB                     l1383:
  3274                           
  3275                           ;main.c: 445:     FVRCONbits.FVREN = 0;
  3276  03FB  0022               	movlb	2	; select bank2
  3277  03FC  1397               	bcf	23,7	;volatile
  3278  03FD                     __ccov87_end_blk15:
  3279  03FD                     __ccov88_start_blk16:
  3280  03FD                     l1385:
  3281                           
  3282                           ;main.c: 446:     ADCON0bits.ADON = 0;
  3283  03FD  0021               	movlb	1	; select bank1
  3284  03FE  101D               	bcf	29,0	;volatile
  3285                           
  3286                           ;main.c: 447:     return adc_val;
  3287  03FF  087B               	movf	getBatteryVoltage@adc_val+1,w
  3288  0400  00F6               	movwf	?_getBatteryVoltage+1
  3289  0401  087A               	movf	getBatteryVoltage@adc_val,w
  3290  0402  00F5               	movwf	?_getBatteryVoltage
  3291  0403                     __ccov88_end_blk16:
  3292  0403                     __ccov89_start_blk18:
  3293  0403                     l144:
  3294  0403  1771               	bsf	__ccovbit18_7/(0+8),__ccovbit18_7& (0+7)	;volatile
  3295  0404  0008               	return
  3296  0405                     __end_of_getBatteryVoltage:
  3297  0405                     
  3298                           	psect	text10
  3299  0442                     __ptext10:	
  3300 ;; *************** function _enable_watchdog_timer *****************
  3301 ;; Defined at:
  3302 ;;		line 45 in file "watchdog.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;		None
  3305 ;; Auto vars:     Size  Location     Type
  3306 ;;		None
  3307 ;; Return value:  Size  Location     Type
  3308 ;;                  1    wreg      void 
  3309 ;; Registers used:
  3310 ;;		None
  3311 ;; Tracked objects:
  3312 ;;		On entry : 0/0
  3313 ;;		On exit  : 0/0
  3314 ;;		Unchanged: 0/0
  3315 ;; Data sizes:     COMMON   BANK0   BANK1
  3316 ;;      Params:         0       0       0
  3317 ;;      Locals:         0       0       0
  3318 ;;      Temps:          0       0       0
  3319 ;;      Totals:         0       0       0
  3320 ;;Total ram usage:        0 bytes
  3321 ;; Hardware stack levels used: 1
  3322 ;; Hardware stack levels required when called: 1
  3323 ;; This function calls:
  3324 ;;		Nothing
  3325 ;; This function is called by:
  3326 ;;		_checkState1
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330                           
  3331                           ;psect for function _enable_watchdog_timer
  3332  0442                     _enable_watchdog_timer:
  3333                           
  3334                           ;incstack = 0
  3335                           ; Regs used in _enable_watchdog_timer: []
  3336  0442                     l1423:
  3337                           
  3338                           ;watchdog.c: 46:     WDTCONbits.SWDTEN = 1;
  3339  0442  0021               	movlb	1	; select bank1
  3340  0443  1417               	bsf	23,0	;volatile
  3341  0444                     __ccov206_end_blk0:
  3342  0444                     __ccov207_start_blk1:
  3343  0444                     l346:
  3344  0444  0020               	movlb	0	; select bank0
  3345  0445  14A1               	bsf	__ccovbit1_53/(0+8),__ccovbit1_53& (0+7)	;volatile
  3346  0446  0008               	return
  3347  0447                     __end_of_enable_watchdog_timer:
  3348  0447                     
  3349                           	psect	text11
  3350  044C                     __ptext11:	
  3351 ;; *************** function _enable_external_interrupt *****************
  3352 ;; Defined at:
  3353 ;;		line 471 in file "main.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;		None
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;		None
  3358 ;; Return value:  Size  Location     Type
  3359 ;;                  1    wreg      void 
  3360 ;; Registers used:
  3361 ;;		None
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMMON   BANK0   BANK1
  3367 ;;      Params:         0       0       0
  3368 ;;      Locals:         0       0       0
  3369 ;;      Temps:          0       0       0
  3370 ;;      Totals:         0       0       0
  3371 ;;Total ram usage:        0 bytes
  3372 ;; Hardware stack levels used: 1
  3373 ;; Hardware stack levels required when called: 1
  3374 ;; This function calls:
  3375 ;;		Nothing
  3376 ;; This function is called by:
  3377 ;;		_main
  3378 ;;		_checkState1
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382                           
  3383                           ;psect for function _enable_external_interrupt
  3384  044C                     _enable_external_interrupt:
  3385                           
  3386                           ;incstack = 0
  3387                           ; Regs used in _enable_external_interrupt: []
  3388  044C                     l1389:
  3389                           
  3390                           ;main.c: 472:     INTCONbits.INTE = 1;
  3391  044C  160B               	bsf	11,4	;volatile
  3392  044D                     __ccov107_end_blk0:
  3393  044D                     __ccov108_start_blk1:
  3394  044D                     l159:
  3395  044D  1770               	bsf	__ccovbit1_15/(0+8),__ccovbit1_15& (0+7)	;volatile
  3396  044E  0008               	return
  3397  044F                     __end_of_enable_external_interrupt:
  3398  044F                     
  3399                           	psect	text12
  3400  0447                     __ptext12:	
  3401 ;; *************** function _disable_watchdog_timer *****************
  3402 ;; Defined at:
  3403 ;;		line 48 in file "watchdog.c"
  3404 ;; Parameters:    Size  Location     Type
  3405 ;;		None
  3406 ;; Auto vars:     Size  Location     Type
  3407 ;;		None
  3408 ;; Return value:  Size  Location     Type
  3409 ;;                  1    wreg      void 
  3410 ;; Registers used:
  3411 ;;		None
  3412 ;; Tracked objects:
  3413 ;;		On entry : 0/0
  3414 ;;		On exit  : 0/0
  3415 ;;		Unchanged: 0/0
  3416 ;; Data sizes:     COMMON   BANK0   BANK1
  3417 ;;      Params:         0       0       0
  3418 ;;      Locals:         0       0       0
  3419 ;;      Temps:          0       0       0
  3420 ;;      Totals:         0       0       0
  3421 ;;Total ram usage:        0 bytes
  3422 ;; Hardware stack levels used: 1
  3423 ;; Hardware stack levels required when called: 1
  3424 ;; This function calls:
  3425 ;;		Nothing
  3426 ;; This function is called by:
  3427 ;;		_main
  3428 ;;		_checkState1
  3429 ;; This function uses a non-reentrant model
  3430 ;;
  3431                           
  3432                           
  3433                           ;psect for function _disable_watchdog_timer
  3434  0447                     _disable_watchdog_timer:
  3435                           
  3436                           ;incstack = 0
  3437                           ; Regs used in _disable_watchdog_timer: []
  3438  0447                     l1363:
  3439                           
  3440                           ;watchdog.c: 49:     WDTCONbits.SWDTEN = 0;
  3441  0447  0021               	movlb	1	; select bank1
  3442  0448  1017               	bcf	23,0	;volatile
  3443  0449                     __ccov208_end_blk0:
  3444  0449                     __ccov209_start_blk1:
  3445  0449                     l349:
  3446  0449  0020               	movlb	0	; select bank0
  3447  044A  1421               	bsf	__ccovbit1_54/(0+8),__ccovbit1_54& (0+7)	;volatile
  3448  044B  0008               	return
  3449  044C                     __end_of_disable_watchdog_timer:
  3450  044C                     
  3451                           	psect	text13
  3452  044F                     __ptext13:	
  3453 ;; *************** function _disable_external_interrupt *****************
  3454 ;; Defined at:
  3455 ;;		line 474 in file "main.c"
  3456 ;; Parameters:    Size  Location     Type
  3457 ;;		None
  3458 ;; Auto vars:     Size  Location     Type
  3459 ;;		None
  3460 ;; Return value:  Size  Location     Type
  3461 ;;                  1    wreg      void 
  3462 ;; Registers used:
  3463 ;;		None
  3464 ;; Tracked objects:
  3465 ;;		On entry : 0/0
  3466 ;;		On exit  : 0/0
  3467 ;;		Unchanged: 0/0
  3468 ;; Data sizes:     COMMON   BANK0   BANK1
  3469 ;;      Params:         0       0       0
  3470 ;;      Locals:         0       0       0
  3471 ;;      Temps:          0       0       0
  3472 ;;      Totals:         0       0       0
  3473 ;;Total ram usage:        0 bytes
  3474 ;; Hardware stack levels used: 1
  3475 ;; Hardware stack levels required when called: 1
  3476 ;; This function calls:
  3477 ;;		Nothing
  3478 ;; This function is called by:
  3479 ;;		_checkState1
  3480 ;; This function uses a non-reentrant model
  3481 ;;
  3482                           
  3483                           
  3484                           ;psect for function _disable_external_interrupt
  3485  044F                     _disable_external_interrupt:
  3486                           
  3487                           ;incstack = 0
  3488                           ; Regs used in _disable_external_interrupt: []
  3489  044F                     l1421:
  3490                           
  3491                           ;main.c: 475:     INTCONbits.INTE = 0;
  3492  044F  120B               	bcf	11,4	;volatile
  3493  0450                     __ccov109_end_blk0:
  3494  0450                     __ccov110_start_blk1:
  3495  0450                     l162:
  3496  0450  16F0               	bsf	__ccovbit1_16/(0+8),__ccovbit1_16& (0+7)	;volatile
  3497  0451  0008               	return
  3498  0452                     __end_of_disable_external_interrupt:
  3499  0452                     
  3500                           	psect	text14
  3501  036F                     __ptext14:	
  3502 ;; *************** function ___awdiv *****************
  3503 ;; Defined at:
  3504 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  3505 ;; Parameters:    Size  Location     Type
  3506 ;;  divisor         2    2[COMMON] int 
  3507 ;;  dividend        2    4[COMMON] int 
  3508 ;; Auto vars:     Size  Location     Type
  3509 ;;  quotient        2    2[BANK0 ] int 
  3510 ;;  sign            1    1[BANK0 ] unsigned char 
  3511 ;;  counter         1    0[BANK0 ] unsigned char 
  3512 ;; Return value:  Size  Location     Type
  3513 ;;                  2    2[COMMON] int 
  3514 ;; Registers used:
  3515 ;;		wreg, status,2, status,0
  3516 ;; Tracked objects:
  3517 ;;		On entry : 0/0
  3518 ;;		On exit  : 0/0
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMMON   BANK0   BANK1
  3521 ;;      Params:         4       0       0
  3522 ;;      Locals:         0       4       0
  3523 ;;      Temps:          1       0       0
  3524 ;;      Totals:         5       4       0
  3525 ;;Total ram usage:        9 bytes
  3526 ;; Hardware stack levels used: 1
  3527 ;; Hardware stack levels required when called: 1
  3528 ;; This function calls:
  3529 ;;		Nothing
  3530 ;; This function is called by:
  3531 ;;		_main
  3532 ;;		_checkState1
  3533 ;; This function uses a non-reentrant model
  3534 ;;
  3535                           
  3536                           
  3537                           ;psect for function ___awdiv
  3538  036F                     ___awdiv:
  3539  036F                     l2195:	
  3540                           ;incstack = 0
  3541                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3542                           
  3543  036F  0020               	movlb	0	; select bank0
  3544  0370  01BF               	clrf	___awdiv@sign
  3545  0371                     l2197:
  3546  0371  1FF6               	btfss	___awdiv@divisor+1,7
  3547  0372  2B74               	goto	u601
  3548  0373  2B75               	goto	u600
  3549  0374                     u601:
  3550  0374  2B7C               	goto	l2203
  3551  0375                     u600:
  3552  0375                     l2199:
  3553  0375  09F5               	comf	___awdiv@divisor,f
  3554  0376  09F6               	comf	___awdiv@divisor+1,f
  3555  0377  0AF5               	incf	___awdiv@divisor,f
  3556  0378  1903               	skipnz
  3557  0379  0AF6               	incf	___awdiv@divisor+1,f
  3558  037A                     l2201:
  3559  037A  01BF               	clrf	___awdiv@sign
  3560  037B  0ABF               	incf	___awdiv@sign,f
  3561  037C                     l2203:
  3562  037C  1FF8               	btfss	___awdiv@dividend+1,7
  3563  037D  2B7F               	goto	u611
  3564  037E  2B80               	goto	u610
  3565  037F                     u611:
  3566  037F  2B89               	goto	l2209
  3567  0380                     u610:
  3568  0380                     l2205:
  3569  0380  09F7               	comf	___awdiv@dividend,f
  3570  0381  09F8               	comf	___awdiv@dividend+1,f
  3571  0382  0AF7               	incf	___awdiv@dividend,f
  3572  0383  1903               	skipnz
  3573  0384  0AF8               	incf	___awdiv@dividend+1,f
  3574  0385                     l2207:
  3575  0385  3001               	movlw	1
  3576  0386  00F9               	movwf	??___awdiv
  3577  0387  0879               	movf	??___awdiv,w
  3578  0388  06BF               	xorwf	___awdiv@sign,f
  3579  0389                     l2209:
  3580  0389  01C0               	clrf	___awdiv@quotient
  3581  038A  01C1               	clrf	___awdiv@quotient+1
  3582  038B                     l2211:
  3583  038B  0875               	movf	___awdiv@divisor,w
  3584  038C  0476               	iorwf	___awdiv@divisor+1,w
  3585  038D  1903               	btfsc	3,2
  3586  038E  2B90               	goto	u621
  3587  038F  2B91               	goto	u620
  3588  0390                     u621:
  3589  0390  2BC0               	goto	l2231
  3590  0391                     u620:
  3591  0391                     l2213:
  3592  0391  01BE               	clrf	___awdiv@counter
  3593  0392  0ABE               	incf	___awdiv@counter,f
  3594  0393  2B9D               	goto	l2219
  3595  0394                     l2215:
  3596  0394  3001               	movlw	1
  3597  0395                     u635:
  3598  0395  35F5               	lslf	___awdiv@divisor,f
  3599  0396  0DF6               	rlf	___awdiv@divisor+1,f
  3600  0397  0B89               	decfsz	9,f
  3601  0398  2B95               	goto	u635
  3602  0399                     l2217:
  3603  0399  3001               	movlw	1
  3604  039A  00F9               	movwf	??___awdiv
  3605  039B  0879               	movf	??___awdiv,w
  3606  039C  07BE               	addwf	___awdiv@counter,f
  3607  039D                     l2219:
  3608  039D  1FF6               	btfss	___awdiv@divisor+1,7
  3609  039E  2BA0               	goto	u641
  3610  039F  2BA1               	goto	u640
  3611  03A0                     u641:
  3612  03A0  2B94               	goto	l2215
  3613  03A1                     u640:
  3614  03A1                     l2221:
  3615  03A1  3001               	movlw	1
  3616  03A2                     u655:
  3617  03A2  35C0               	lslf	___awdiv@quotient,f
  3618  03A3  0DC1               	rlf	___awdiv@quotient+1,f
  3619  03A4  0B89               	decfsz	9,f
  3620  03A5  2BA2               	goto	u655
  3621  03A6  0876               	movf	___awdiv@divisor+1,w
  3622  03A7  0278               	subwf	___awdiv@dividend+1,w
  3623  03A8  1D03               	skipz
  3624  03A9  2BAC               	goto	u665
  3625  03AA  0875               	movf	___awdiv@divisor,w
  3626  03AB  0277               	subwf	___awdiv@dividend,w
  3627  03AC                     u665:
  3628  03AC  1C03               	skipc
  3629  03AD  2BAF               	goto	u661
  3630  03AE  2BB0               	goto	u660
  3631  03AF                     u661:
  3632  03AF  2BB5               	goto	l2227
  3633  03B0                     u660:
  3634  03B0                     l2223:
  3635  03B0  0875               	movf	___awdiv@divisor,w
  3636  03B1  02F7               	subwf	___awdiv@dividend,f
  3637  03B2  0876               	movf	___awdiv@divisor+1,w
  3638  03B3  3BF8               	subwfb	___awdiv@dividend+1,f
  3639  03B4                     l2225:
  3640  03B4  1440               	bsf	___awdiv@quotient,0
  3641  03B5                     l2227:
  3642  03B5  3001               	movlw	1
  3643  03B6                     u675:
  3644  03B6  36F6               	lsrf	___awdiv@divisor+1,f
  3645  03B7  0CF5               	rrf	___awdiv@divisor,f
  3646  03B8  0B89               	decfsz	9,f
  3647  03B9  2BB6               	goto	u675
  3648  03BA                     l2229:
  3649  03BA  3001               	movlw	1
  3650  03BB  02BE               	subwf	___awdiv@counter,f
  3651  03BC  1D03               	btfss	3,2
  3652  03BD  2BBF               	goto	u681
  3653  03BE  2BC0               	goto	u680
  3654  03BF                     u681:
  3655  03BF  2BA1               	goto	l2221
  3656  03C0                     u680:
  3657  03C0                     l2231:
  3658  03C0  083F               	movf	___awdiv@sign,w
  3659  03C1  1903               	btfsc	3,2
  3660  03C2  2BC4               	goto	u691
  3661  03C3  2BC5               	goto	u690
  3662  03C4                     u691:
  3663  03C4  2BCA               	goto	l2235
  3664  03C5                     u690:
  3665  03C5                     l2233:
  3666  03C5  09C0               	comf	___awdiv@quotient,f
  3667  03C6  09C1               	comf	___awdiv@quotient+1,f
  3668  03C7  0AC0               	incf	___awdiv@quotient,f
  3669  03C8  1903               	skipnz
  3670  03C9  0AC1               	incf	___awdiv@quotient+1,f
  3671  03CA                     l2235:
  3672  03CA  0841               	movf	___awdiv@quotient+1,w
  3673  03CB  00F6               	movwf	?___awdiv+1
  3674  03CC  0840               	movf	___awdiv@quotient,w
  3675  03CD  00F5               	movwf	?___awdiv
  3676  03CE                     l652:
  3677  03CE  0008               	return
  3678  03CF                     __end_of___awdiv:
  3679                           
  3680                           	psect	intentry
  3681  0004                     __pintentry:	
  3682 ;; *************** function _my_isr *****************
  3683 ;; Defined at:
  3684 ;;		line 480 in file "main.c"
  3685 ;; Parameters:    Size  Location     Type
  3686 ;;		None
  3687 ;; Auto vars:     Size  Location     Type
  3688 ;;		None
  3689 ;; Return value:  Size  Location     Type
  3690 ;;                  1    wreg      void 
  3691 ;; Registers used:
  3692 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3693 ;; Tracked objects:
  3694 ;;		On entry : 0/0
  3695 ;;		On exit  : 0/0
  3696 ;;		Unchanged: 0/0
  3697 ;; Data sizes:     COMMON   BANK0   BANK1
  3698 ;;      Params:         0       0       0
  3699 ;;      Locals:         0       0       0
  3700 ;;      Temps:          2       0       0
  3701 ;;      Totals:         2       0       0
  3702 ;;Total ram usage:        2 bytes
  3703 ;; Hardware stack levels used: 1
  3704 ;; This function calls:
  3705 ;;		Nothing
  3706 ;; This function is called by:
  3707 ;;		Interrupt level 1
  3708 ;; This function uses a non-reentrant model
  3709 ;;
  3710                           
  3711  0004                     _my_isr:
  3712                           
  3713                           ;incstack = 0
  3714  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3715                           
  3716                           ; Regs used in _my_isr: [wreg-fsr0h+status,2+status,0]
  3717  0005  3180               	pagesel	$
  3718  0006                     i1l1687:
  3719                           
  3720                           ;main.c: 483:     if (INTE && INTF) {
  3721  0006  1E0B               	btfss	11,4	;volatile
  3722  0007  2809               	goto	u34_21
  3723  0008  280A               	goto	u34_20
  3724  0009                     u34_21:
  3725  0009  2838               	goto	i1l170
  3726  000A                     u34_20:
  3727  000A                     __ccov113_end_blk0:
  3728  000A                     __ccov114_start_blk1:
  3729  000A                     i1l1689:
  3730  000A  1670               	bsf	__ccovbit1_17/(0+8),__ccovbit1_17& (0+7)	;volatile
  3731  000B  1C8B               	btfss	11,1	;volatile
  3732  000C  280E               	goto	u35_21
  3733  000D  280F               	goto	u35_20
  3734  000E                     u35_21:
  3735  000E  2838               	goto	i1l170
  3736  000F                     u35_20:
  3737  000F  2822               	goto	i1l1701
  3738  0010                     __ccov114_end_blk1:
  3739  0010                     __ccov115_start_blk3:
  3740  0010                     i1l172:	
  3741                           ;main.c: 486:             case 1:
  3742                           
  3743  0010  15F0               	bsf	__ccovbit3_18/(0+8),__ccovbit3_18& (0+7)	;volatile
  3744                           
  3745                           ;main.c: 487:                 state_door = STATE_DOOR_OPEN;
  3746  0011  01BD               	clrf	_state_door
  3747  0012  0ABD               	incf	_state_door,f
  3748                           
  3749                           ;main.c: 488:                 OPTION_REGbits.INTEDG = !1;
  3750  0013  0021               	movlb	1	; select bank1
  3751  0014  1315               	bcf	21,6	;volatile
  3752                           
  3753                           ;main.c: 489:                 NewDoorPolarity = 1;
  3754  0015  1772               	bsf	_NewDoorPolarity/(0+8),_NewDoorPolarity& (0+7)
  3755                           
  3756                           ;main.c: 490:                 DoorStateBeforePrel = 1;
  3757  0016  0020               	movlb	0	; select bank0
  3758  0017  01BB               	clrf	_DoorStateBeforePrel
  3759  0018  0ABB               	incf	_DoorStateBeforePrel,f
  3760                           
  3761                           ;main.c: 491:                 break;
  3762  0019  2835               	goto	i1l173
  3763  001A                     __ccov115_end_blk3:
  3764  001A                     __ccov116_start_blk5:
  3765  001A                     i1l1693:
  3766                           
  3767                           ;main.c: 493:                 state_door = STATE_DOOR_CLOSED;
  3768  001A  01BD               	clrf	_state_door
  3769  001B                     __ccov116_end_blk5:
  3770  001B                     __ccov117_start_blk6:
  3771  001B                     i1l1695:
  3772                           
  3773                           ;main.c: 494:                 OPTION_REGbits.INTEDG = !0;
  3774  001B  0021               	movlb	1	; select bank1
  3775  001C  1715               	bsf	21,6	;volatile
  3776  001D                     __ccov117_end_blk6:
  3777  001D                     __ccov118_start_blk7:
  3778  001D                     i1l1697:
  3779  001D  1570               	bsf	__ccovbit7_19/(0+8),__ccovbit7_19& (0+7)	;volatile
  3780                           
  3781                           ;main.c: 495:                 NewDoorPolarity = 0;
  3782  001E  1372               	bcf	_NewDoorPolarity/(0+8),_NewDoorPolarity& (0+7)
  3783                           
  3784                           ;main.c: 496:                 DoorStateBeforePrel = 0;
  3785  001F  0020               	movlb	0	; select bank0
  3786  0020  01BB               	clrf	_DoorStateBeforePrel
  3787                           
  3788                           ;main.c: 497:                 break;
  3789  0021  2835               	goto	i1l173
  3790  0022                     __ccov118_end_blk7:
  3791  0022                     __ccov119_start_blk10:
  3792  0022                     i1l1701:
  3793  0022  0020               	movlb	0	; select bank0
  3794  0023  0C0C               	rrf	12,w	;volatile
  3795  0024  0C89               	rrf	9,f
  3796  0025  3901               	andlw	1
  3797  0026  00F3               	movwf	??_my_isr
  3798  0027  01F4               	clrf	??_my_isr+1
  3799                           
  3800                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3801                           ; Switch size 1, requested type "simple"
  3802                           ; Number of cases is 1, Range of values is 0 to 0
  3803                           ; switch strategies available:
  3804                           ; Name         Instructions Cycles
  3805                           ; simple_byte            4     3 (average)
  3806                           ; direct_byte            8     6 (fixed)
  3807                           ; jumptable            260     6 (fixed)
  3808                           ;	Chosen strategy is simple_byte
  3809  0028  0874               	movf	??_my_isr+1,w
  3810  0029  3A00               	xorlw	0	; case 0
  3811  002A  1903               	skipnz
  3812  002B  282D               	goto	i1l2677
  3813  002C  2835               	goto	i1l173
  3814  002D                     i1l2677:
  3815                           
  3816                           ; Switch size 1, requested type "simple"
  3817                           ; Number of cases is 2, Range of values is 0 to 1
  3818                           ; switch strategies available:
  3819                           ; Name         Instructions Cycles
  3820                           ; simple_byte            7     4 (average)
  3821                           ; direct_byte           10     6 (fixed)
  3822                           ; jumptable            260     6 (fixed)
  3823                           ;	Chosen strategy is simple_byte
  3824  002D  0873               	movf	??_my_isr,w
  3825  002E  3A00               	xorlw	0	; case 0
  3826  002F  1903               	skipnz
  3827  0030  281A               	goto	i1l1693
  3828  0031  3A01               	xorlw	1	; case 1
  3829  0032  1903               	skipnz
  3830  0033  2810               	goto	i1l172
  3831  0034  2835               	goto	i1l173
  3832  0035                     __ccov119_end_blk10:
  3833  0035                     __ccov120_start_blk11:
  3834  0035                     i1l173:
  3835  0035  14F0               	bsf	__ccovbit11_20/(0+8),__ccovbit11_20& (0+7)	;volatile
  3836                           
  3837                           ;main.c: 499:         NewStateChangeDetected = 1;
  3838  0036  17F2               	bsf	_NewStateChangeDetected/(0+8),_NewStateChangeDetected& (0+7)
  3839                           
  3840                           ;main.c: 501:         INTF = 0;
  3841  0037  108B               	bcf	11,1	;volatile
  3842  0038                     __ccov120_end_blk11:
  3843  0038                     __ccov121_start_blk12:
  3844  0038                     i1l170:	
  3845                           ;main.c: 502:     }
  3846                           
  3847                           
  3848                           ;main.c: 505:     if (PIE1bits.TMR2IE && PIR1bits.TMR2IF) {
  3849  0038  0021               	movlb	1	; select bank1
  3850  0039  1C91               	btfss	17,1	;volatile
  3851  003A  283C               	goto	u36_21
  3852  003B  283D               	goto	u36_20
  3853  003C                     u36_21:
  3854  003C  286D               	goto	i1l178
  3855  003D                     u36_20:
  3856  003D                     __ccov121_end_blk12:
  3857  003D                     __ccov122_start_blk13:
  3858  003D                     i1l1703:
  3859  003D  1470               	bsf	__ccovbit13_21/(0+8),__ccovbit13_21& (0+7)	;volatile
  3860  003E  0020               	movlb	0	; select bank0
  3861  003F  1C91               	btfss	17,1	;volatile
  3862  0040  2842               	goto	u37_21
  3863  0041  2843               	goto	u37_20
  3864  0042                     u37_21:
  3865  0042  286D               	goto	i1l178
  3866  0043                     u37_20:
  3867  0043                     __ccov122_end_blk13:
  3868  0043                     __ccov123_start_blk14:
  3869  0043                     i1l1705:
  3870                           
  3871                           ;main.c: 506:         if (prelCounter > 0)
  3872  0043  0835               	movf	_prelCounter+1,w	;volatile
  3873  0044  3A80               	xorlw	128
  3874  0045  00F3               	movwf	??_my_isr
  3875  0046  3080               	movlw	128
  3876  0047  0273               	subwf	??_my_isr,w
  3877  0048  1D03               	skipz
  3878  0049  284C               	goto	u38_25
  3879  004A  3001               	movlw	1
  3880  004B  0234               	subwf	_prelCounter,w	;volatile
  3881  004C                     u38_25:
  3882  004C  1C03               	skipc
  3883  004D  284F               	goto	u38_21
  3884  004E  2850               	goto	u38_20
  3885  004F                     u38_21:
  3886  004F  2856               	goto	i1l176
  3887  0050                     u38_20:
  3888  0050                     __ccov123_end_blk14:
  3889  0050                     __ccov124_start_blk15:
  3890  0050                     i1l1707:
  3891  0050  0020               	movlb	0	; select bank0
  3892  0051  1425               	bsf	__ccovbit15_22/(0+8),__ccovbit15_22& (0+7)	;volatile
  3893                           
  3894                           ;main.c: 507:             prelCounter--;
  3895  0052  30FF               	movlw	255
  3896  0053  07B4               	addwf	_prelCounter,f	;volatile
  3897  0054  30FF               	movlw	255
  3898  0055  3DB5               	addwfc	_prelCounter+1,f	;volatile
  3899  0056                     __ccov124_end_blk15:
  3900  0056                     __ccov125_start_blk16:
  3901  0056                     i1l176:
  3902                           
  3903                           ;main.c: 509:         if (ihcPulseTimer > 0)
  3904  0056  0020               	movlb	0	; select bank0
  3905  0057  0833               	movf	_ihcPulseTimer+1,w	;volatile
  3906  0058  3A80               	xorlw	128
  3907  0059  00F3               	movwf	??_my_isr
  3908  005A  3080               	movlw	128
  3909  005B  0273               	subwf	??_my_isr,w
  3910  005C  1D03               	skipz
  3911  005D  2860               	goto	u39_25
  3912  005E  3001               	movlw	1
  3913  005F  0232               	subwf	_ihcPulseTimer,w	;volatile
  3914  0060                     u39_25:
  3915  0060  1C03               	skipc
  3916  0061  2863               	goto	u39_21
  3917  0062  2864               	goto	u39_20
  3918  0063                     u39_21:
  3919  0063  286A               	goto	i1l1711
  3920  0064                     u39_20:
  3921  0064                     __ccov125_end_blk16:
  3922  0064                     __ccov126_start_blk17:
  3923  0064                     i1l1709:
  3924  0064  0020               	movlb	0	; select bank0
  3925  0065  17A4               	bsf	__ccovbit17_23/(0+8),__ccovbit17_23& (0+7)	;volatile
  3926                           
  3927                           ;main.c: 510:             ihcPulseTimer--;
  3928  0066  30FF               	movlw	255
  3929  0067  07B2               	addwf	_ihcPulseTimer,f	;volatile
  3930  0068  30FF               	movlw	255
  3931  0069  3DB3               	addwfc	_ihcPulseTimer+1,f	;volatile
  3932  006A                     __ccov126_end_blk17:
  3933  006A                     __ccov127_start_blk19:
  3934  006A                     i1l1711:
  3935  006A  0020               	movlb	0	; select bank0
  3936  006B  1724               	bsf	__ccovbit19_24/(0+8),__ccovbit19_24& (0+7)	;volatile
  3937                           
  3938                           ;main.c: 511:         PIR1bits.TMR2IF = 0;
  3939  006C  1091               	bcf	17,1	;volatile
  3940  006D                     __ccov127_end_blk19:
  3941  006D                     __ccov128_start_blk22:
  3942  006D                     i1l178:
  3943  006D  0020               	movlb	0	; select bank0
  3944  006E  16A4               	bsf	__ccovbit22_25/(0+8),__ccovbit22_25& (0+7)	;volatile
  3945  006F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3946  0070  0009               	retfie
  3947  0071                     __end_of_my_isr:
  3948  0071                     
  3949                           	psect	codecov_info_hdr
  3950  0000                     __pcodecov_info_hdr:	
  3951                           ;
  3952                           ; Code-coverage Info Header
  3953                           ;
  3954                           
  3955  0000  0010               	db	16	; SIZE
  3956  0001  00000001           	ddw	1	; VERSION
  3957  0005  0001               	db	1	; POINTSIZE
  3958  0006  0008               	db	8	; UNITSIZE
  3959  0007  0001               	db	1	; FLAGS=SET
  3960  0008  00000000           	ddw	0	; Reserved
  3961  000C  00000000           	ddw	0	; Reserved
  3962                           
  3963                           	psect	codecov_info
  3964  0000                     __pcodecov_info:	
  3965                           ;
  3966                           ; Code-coverage Info
  3967                           ;
  3968                           
  3969                           
  3970                           ; Function: main, coverage: 50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,
      +                          30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0
  3971  0000  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  3972  0004  00000072           	ddw	__ccovbit50_1/(0+8)	; CC_ADDR
  3973  0008  00000001           	ddw	1	; NUM_POINTS
  3974  000C  00000004           	ddw	__ccovbit50_1& (0+7)	; OFFSET
  3975  0010  00000000           	ddw	0	; Reserved
  3976  0014  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  3977  0018  00000033           	ddw	51	; NUM_RANGES
  3978  001C  000002A1           	ddw	__ccov51_start_blk50	; block 50 START_ADDR
  3979  0020  000002A4           	ddw	__ccov51_end_blk50	; block 50 END_ADDR
  3980  0024  00000298           	ddw	__ccov50_start_blk49	; block 49 START_ADDR
  3981  0028  000002A1           	ddw	__ccov50_end_blk49	; block 49 END_ADDR
  3982  002C  00000296           	ddw	__ccov49_start_blk48	; block 48 START_ADDR
  3983  0030  00000298           	ddw	__ccov49_end_blk48	; block 48 END_ADDR
  3984  0034  00000289           	ddw	__ccov48_start_blk47	; block 47 START_ADDR
  3985  0038  00000296           	ddw	__ccov48_end_blk47	; block 47 END_ADDR
  3986  003C  00000279           	ddw	__ccov47_start_blk46	; block 46 START_ADDR
  3987  0040  00000289           	ddw	__ccov47_end_blk46	; block 46 END_ADDR
  3988  0044  00000260           	ddw	__ccov46_start_blk45	; block 45 START_ADDR
  3989  0048  00000279           	ddw	__ccov46_end_blk45	; block 45 END_ADDR
  3990  004C  00000259           	ddw	__ccov45_start_blk44	; block 44 START_ADDR
  3991  0050  00000260           	ddw	__ccov45_end_blk44	; block 44 END_ADDR
  3992  0054  00000258           	ddw	__ccov44_start_blk43	; block 43 START_ADDR
  3993  0058  00000259           	ddw	__ccov44_end_blk43	; block 43 END_ADDR
  3994  005C  00000253           	ddw	__ccov43_start_blk42	; block 42 START_ADDR
  3995  0060  00000258           	ddw	__ccov43_end_blk42	; block 42 END_ADDR
  3996  0064  00000252           	ddw	__ccov42_start_blk41	; block 41 START_ADDR
  3997  0068  00000253           	ddw	__ccov42_end_blk41	; block 41 END_ADDR
  3998  006C  00000246           	ddw	__ccov41_start_blk40	; block 40 START_ADDR
  3999  0070  00000252           	ddw	__ccov41_end_blk40	; block 40 END_ADDR
  4000  0074  00000243           	ddw	__ccov40_start_blk39	; block 39 START_ADDR
  4001  0078  00000246           	ddw	__ccov40_end_blk39	; block 39 END_ADDR
  4002  007C  00000240           	ddw	__ccov39_start_blk38	; block 38 START_ADDR
  4003  0080  00000243           	ddw	__ccov39_end_blk38	; block 38 END_ADDR
  4004  0084  0000023F           	ddw	__ccov38_start_blk37	; block 37 START_ADDR
  4005  0088  00000240           	ddw	__ccov38_end_blk37	; block 37 END_ADDR
  4006  008C  0000023D           	ddw	__ccov37_start_blk36	; block 36 START_ADDR
  4007  0090  0000023F           	ddw	__ccov37_end_blk36	; block 36 END_ADDR
  4008  0094  0000023C           	ddw	__ccov36_start_blk35	; block 35 START_ADDR
  4009  0098  0000023D           	ddw	__ccov36_end_blk35	; block 35 END_ADDR
  4010  009C  0000023A           	ddw	__ccov35_start_blk34	; block 34 START_ADDR
  4011  00A0  0000023C           	ddw	__ccov35_end_blk34	; block 34 END_ADDR
  4012  00A4  00000238           	ddw	__ccov34_start_blk33	; block 33 START_ADDR
  4013  00A8  0000023A           	ddw	__ccov34_end_blk33	; block 33 END_ADDR
  4014  00AC  00000236           	ddw	__ccov33_start_blk32	; block 32 START_ADDR
  4015  00B0  00000238           	ddw	__ccov33_end_blk32	; block 32 END_ADDR
  4016  00B4  00000232           	ddw	__ccov32_start_blk31	; block 31 START_ADDR
  4017  00B8  00000236           	ddw	__ccov32_end_blk31	; block 31 END_ADDR
  4018  00BC  0000022E           	ddw	__ccov31_start_blk30	; block 30 START_ADDR
  4019  00C0  00000232           	ddw	__ccov31_end_blk30	; block 30 END_ADDR
  4020  00C4  00000229           	ddw	__ccov30_start_blk29	; block 29 START_ADDR
  4021  00C8  0000022E           	ddw	__ccov30_end_blk29	; block 29 END_ADDR
  4022  00CC  00000227           	ddw	__ccov29_start_blk28	; block 28 START_ADDR
  4023  00D0  00000229           	ddw	__ccov29_end_blk28	; block 28 END_ADDR
  4024  00D4  00000225           	ddw	__ccov28_start_blk27	; block 27 START_ADDR
  4025  00D8  00000227           	ddw	__ccov28_end_blk27	; block 27 END_ADDR
  4026  00DC  00000224           	ddw	__ccov27_start_blk26	; block 26 START_ADDR
  4027  00E0  00000225           	ddw	__ccov27_end_blk26	; block 26 END_ADDR
  4028  00E4  00000222           	ddw	__ccov26_start_blk25	; block 25 START_ADDR
  4029  00E8  00000224           	ddw	__ccov26_end_blk25	; block 25 END_ADDR
  4030  00EC  00000220           	ddw	__ccov25_start_blk24	; block 24 START_ADDR
  4031  00F0  00000222           	ddw	__ccov25_end_blk24	; block 24 END_ADDR
  4032  00F4  0000021F           	ddw	__ccov24_start_blk23	; block 23 START_ADDR
  4033  00F8  00000220           	ddw	__ccov24_end_blk23	; block 23 END_ADDR
  4034  00FC  0000021E           	ddw	__ccov23_start_blk22	; block 22 START_ADDR
  4035  0100  0000021F           	ddw	__ccov23_end_blk22	; block 22 END_ADDR
  4036  0104  00000219           	ddw	__ccov22_start_blk21	; block 21 START_ADDR
  4037  0108  0000021E           	ddw	__ccov22_end_blk21	; block 21 END_ADDR
  4038  010C  00000218           	ddw	__ccov21_start_blk20	; block 20 START_ADDR
  4039  0110  00000219           	ddw	__ccov21_end_blk20	; block 20 END_ADDR
  4040  0114  00000217           	ddw	__ccov20_start_blk19	; block 19 START_ADDR
  4041  0118  00000218           	ddw	__ccov20_end_blk19	; block 19 END_ADDR
  4042  011C  00000215           	ddw	__ccov19_start_blk18	; block 18 START_ADDR
  4043  0120  00000217           	ddw	__ccov19_end_blk18	; block 18 END_ADDR
  4044  0124  00000214           	ddw	__ccov18_start_blk17	; block 17 START_ADDR
  4045  0128  00000215           	ddw	__ccov18_end_blk17	; block 17 END_ADDR
  4046  012C  00000213           	ddw	__ccov17_start_blk16	; block 16 START_ADDR
  4047  0130  00000214           	ddw	__ccov17_end_blk16	; block 16 END_ADDR
  4048  0134  00000211           	ddw	__ccov16_start_blk15	; block 15 START_ADDR
  4049  0138  00000213           	ddw	__ccov16_end_blk15	; block 15 END_ADDR
  4050  013C  0000020F           	ddw	__ccov15_start_blk14	; block 14 START_ADDR
  4051  0140  00000211           	ddw	__ccov15_end_blk14	; block 14 END_ADDR
  4052  0144  0000020E           	ddw	__ccov14_start_blk13	; block 13 START_ADDR
  4053  0148  0000020F           	ddw	__ccov14_end_blk13	; block 13 END_ADDR
  4054  014C  0000020D           	ddw	__ccov13_start_blk12	; block 12 START_ADDR
  4055  0150  0000020E           	ddw	__ccov13_end_blk12	; block 12 END_ADDR
  4056  0154  0000020C           	ddw	__ccov12_start_blk11	; block 11 START_ADDR
  4057  0158  0000020D           	ddw	__ccov12_end_blk11	; block 11 END_ADDR
  4058  015C  0000020A           	ddw	__ccov11_start_blk10	; block 10 START_ADDR
  4059  0160  0000020C           	ddw	__ccov11_end_blk10	; block 10 END_ADDR
  4060  0164  00000209           	ddw	__ccov10_start_blk9	; block 9 START_ADDR
  4061  0168  0000020A           	ddw	__ccov10_end_blk9	; block 9 END_ADDR
  4062  016C  00000208           	ddw	__ccov9_start_blk8	; block 8 START_ADDR
  4063  0170  00000209           	ddw	__ccov9_end_blk8	; block 8 END_ADDR
  4064  0174  00000207           	ddw	__ccov8_start_blk7	; block 7 START_ADDR
  4065  0178  00000208           	ddw	__ccov8_end_blk7	; block 7 END_ADDR
  4066  017C  00000206           	ddw	__ccov7_start_blk6	; block 6 START_ADDR
  4067  0180  00000207           	ddw	__ccov7_end_blk6	; block 6 END_ADDR
  4068  0184  00000205           	ddw	__ccov6_start_blk5	; block 5 START_ADDR
  4069  0188  00000206           	ddw	__ccov6_end_blk5	; block 5 END_ADDR
  4070  018C  00000204           	ddw	__ccov5_start_blk4	; block 4 START_ADDR
  4071  0190  00000205           	ddw	__ccov5_end_blk4	; block 4 END_ADDR
  4072  0194  00000200           	ddw	__ccov4_start_blk3	; block 3 START_ADDR
  4073  0198  00000204           	ddw	__ccov4_end_blk3	; block 3 END_ADDR
  4074  019C  000001FF           	ddw	__ccov3_start_blk2	; block 2 START_ADDR
  4075  01A0  00000200           	ddw	__ccov3_end_blk2	; block 2 END_ADDR
  4076  01A4  000001FC           	ddw	__ccov2_start_blk1	; block 1 START_ADDR
  4077  01A8  000001FF           	ddw	__ccov2_end_blk1	; block 1 END_ADDR
  4078  01AC  000001FA           	ddw	_main	; block 0 START_ADDR
  4079  01B0  000001FC           	ddw	__ccov1_end_blk0	; block 0 END_ADDR
  4080                           
  4081                           ; Function: main, coverage: 62,69,61,60,59,58,57,56,55,54,53,52,47,46,45,44,43,42,41,40,
      +                          39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,1
      +                          0,9,8,7,6,5,4,3,2,1,0
  4082  01B4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4083  01B8  00000072           	ddw	__ccovbit62_2/(0+8)	; CC_ADDR
  4084  01BC  00000001           	ddw	1	; NUM_POINTS
  4085  01C0  00000003           	ddw	__ccovbit62_2& (0+7)	; OFFSET
  4086  01C4  00000000           	ddw	0	; Reserved
  4087  01C8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4088  01CC  0000003C           	ddw	60	; NUM_RANGES
  4089  01D0  000002BD           	ddw	__ccov62_start_blk62	; block 62 START_ADDR
  4090  01D4  000002C7           	ddw	__ccov62_end_blk62	; block 62 END_ADDR
  4091  01D8  000002CF           	ddw	__ccov66_start_blk69	; block 69 START_ADDR
  4092  01DC  000002E2           	ddw	__ccov66_end_blk69	; block 69 END_ADDR
  4093  01E0  000002B9           	ddw	__ccov61_start_blk61	; block 61 START_ADDR
  4094  01E4  000002BD           	ddw	__ccov61_end_blk61	; block 61 END_ADDR
  4095  01E8  000002B7           	ddw	__ccov60_start_blk60	; block 60 START_ADDR
  4096  01EC  000002B9           	ddw	__ccov60_end_blk60	; block 60 END_ADDR
  4097  01F0  000002B5           	ddw	__ccov59_start_blk59	; block 59 START_ADDR
  4098  01F4  000002B7           	ddw	__ccov59_end_blk59	; block 59 END_ADDR
  4099  01F8  000002B3           	ddw	__ccov58_start_blk58	; block 58 START_ADDR
  4100  01FC  000002B5           	ddw	__ccov58_end_blk58	; block 58 END_ADDR
  4101  0200  000002B1           	ddw	__ccov57_start_blk57	; block 57 START_ADDR
  4102  0204  000002B3           	ddw	__ccov57_end_blk57	; block 57 END_ADDR
  4103  0208  000002AF           	ddw	__ccov56_start_blk56	; block 56 START_ADDR
  4104  020C  000002B1           	ddw	__ccov56_end_blk56	; block 56 END_ADDR
  4105  0210  000002AE           	ddw	__ccov55_start_blk55	; block 55 START_ADDR
  4106  0214  000002AF           	ddw	__ccov55_end_blk55	; block 55 END_ADDR
  4107  0218  000002AD           	ddw	__ccov54_start_blk54	; block 54 START_ADDR
  4108  021C  000002AE           	ddw	__ccov54_end_blk54	; block 54 END_ADDR
  4109  0220  000002A9           	ddw	__ccov53_start_blk53	; block 53 START_ADDR
  4110  0224  000002AD           	ddw	__ccov53_end_blk53	; block 53 END_ADDR
  4111  0228  000002A4           	ddw	__ccov52_start_blk52	; block 52 START_ADDR
  4112  022C  000002A9           	ddw	__ccov52_end_blk52	; block 52 END_ADDR
  4113  0230  00000289           	ddw	__ccov48_start_blk47	; block 47 START_ADDR
  4114  0234  00000296           	ddw	__ccov48_end_blk47	; block 47 END_ADDR
  4115  0238  00000279           	ddw	__ccov47_start_blk46	; block 46 START_ADDR
  4116  023C  00000289           	ddw	__ccov47_end_blk46	; block 46 END_ADDR
  4117  0240  00000260           	ddw	__ccov46_start_blk45	; block 45 START_ADDR
  4118  0244  00000279           	ddw	__ccov46_end_blk45	; block 45 END_ADDR
  4119  0248  00000259           	ddw	__ccov45_start_blk44	; block 44 START_ADDR
  4120  024C  00000260           	ddw	__ccov45_end_blk44	; block 44 END_ADDR
  4121  0250  00000258           	ddw	__ccov44_start_blk43	; block 43 START_ADDR
  4122  0254  00000259           	ddw	__ccov44_end_blk43	; block 43 END_ADDR
  4123  0258  00000253           	ddw	__ccov43_start_blk42	; block 42 START_ADDR
  4124  025C  00000258           	ddw	__ccov43_end_blk42	; block 42 END_ADDR
  4125  0260  00000252           	ddw	__ccov42_start_blk41	; block 41 START_ADDR
  4126  0264  00000253           	ddw	__ccov42_end_blk41	; block 41 END_ADDR
  4127  0268  00000246           	ddw	__ccov41_start_blk40	; block 40 START_ADDR
  4128  026C  00000252           	ddw	__ccov41_end_blk40	; block 40 END_ADDR
  4129  0270  00000243           	ddw	__ccov40_start_blk39	; block 39 START_ADDR
  4130  0274  00000246           	ddw	__ccov40_end_blk39	; block 39 END_ADDR
  4131  0278  00000240           	ddw	__ccov39_start_blk38	; block 38 START_ADDR
  4132  027C  00000243           	ddw	__ccov39_end_blk38	; block 38 END_ADDR
  4133  0280  0000023F           	ddw	__ccov38_start_blk37	; block 37 START_ADDR
  4134  0284  00000240           	ddw	__ccov38_end_blk37	; block 37 END_ADDR
  4135  0288  0000023D           	ddw	__ccov37_start_blk36	; block 36 START_ADDR
  4136  028C  0000023F           	ddw	__ccov37_end_blk36	; block 36 END_ADDR
  4137  0290  0000023C           	ddw	__ccov36_start_blk35	; block 35 START_ADDR
  4138  0294  0000023D           	ddw	__ccov36_end_blk35	; block 35 END_ADDR
  4139  0298  0000023A           	ddw	__ccov35_start_blk34	; block 34 START_ADDR
  4140  029C  0000023C           	ddw	__ccov35_end_blk34	; block 34 END_ADDR
  4141  02A0  00000238           	ddw	__ccov34_start_blk33	; block 33 START_ADDR
  4142  02A4  0000023A           	ddw	__ccov34_end_blk33	; block 33 END_ADDR
  4143  02A8  00000236           	ddw	__ccov33_start_blk32	; block 32 START_ADDR
  4144  02AC  00000238           	ddw	__ccov33_end_blk32	; block 32 END_ADDR
  4145  02B0  00000232           	ddw	__ccov32_start_blk31	; block 31 START_ADDR
  4146  02B4  00000236           	ddw	__ccov32_end_blk31	; block 31 END_ADDR
  4147  02B8  0000022E           	ddw	__ccov31_start_blk30	; block 30 START_ADDR
  4148  02BC  00000232           	ddw	__ccov31_end_blk30	; block 30 END_ADDR
  4149  02C0  00000229           	ddw	__ccov30_start_blk29	; block 29 START_ADDR
  4150  02C4  0000022E           	ddw	__ccov30_end_blk29	; block 29 END_ADDR
  4151  02C8  00000227           	ddw	__ccov29_start_blk28	; block 28 START_ADDR
  4152  02CC  00000229           	ddw	__ccov29_end_blk28	; block 28 END_ADDR
  4153  02D0  00000225           	ddw	__ccov28_start_blk27	; block 27 START_ADDR
  4154  02D4  00000227           	ddw	__ccov28_end_blk27	; block 27 END_ADDR
  4155  02D8  00000224           	ddw	__ccov27_start_blk26	; block 26 START_ADDR
  4156  02DC  00000225           	ddw	__ccov27_end_blk26	; block 26 END_ADDR
  4157  02E0  00000222           	ddw	__ccov26_start_blk25	; block 25 START_ADDR
  4158  02E4  00000224           	ddw	__ccov26_end_blk25	; block 25 END_ADDR
  4159  02E8  00000220           	ddw	__ccov25_start_blk24	; block 24 START_ADDR
  4160  02EC  00000222           	ddw	__ccov25_end_blk24	; block 24 END_ADDR
  4161  02F0  0000021F           	ddw	__ccov24_start_blk23	; block 23 START_ADDR
  4162  02F4  00000220           	ddw	__ccov24_end_blk23	; block 23 END_ADDR
  4163  02F8  0000021E           	ddw	__ccov23_start_blk22	; block 22 START_ADDR
  4164  02FC  0000021F           	ddw	__ccov23_end_blk22	; block 22 END_ADDR
  4165  0300  00000219           	ddw	__ccov22_start_blk21	; block 21 START_ADDR
  4166  0304  0000021E           	ddw	__ccov22_end_blk21	; block 21 END_ADDR
  4167  0308  00000218           	ddw	__ccov21_start_blk20	; block 20 START_ADDR
  4168  030C  00000219           	ddw	__ccov21_end_blk20	; block 20 END_ADDR
  4169  0310  00000217           	ddw	__ccov20_start_blk19	; block 19 START_ADDR
  4170  0314  00000218           	ddw	__ccov20_end_blk19	; block 19 END_ADDR
  4171  0318  00000215           	ddw	__ccov19_start_blk18	; block 18 START_ADDR
  4172  031C  00000217           	ddw	__ccov19_end_blk18	; block 18 END_ADDR
  4173  0320  00000214           	ddw	__ccov18_start_blk17	; block 17 START_ADDR
  4174  0324  00000215           	ddw	__ccov18_end_blk17	; block 17 END_ADDR
  4175  0328  00000213           	ddw	__ccov17_start_blk16	; block 16 START_ADDR
  4176  032C  00000214           	ddw	__ccov17_end_blk16	; block 16 END_ADDR
  4177  0330  00000211           	ddw	__ccov16_start_blk15	; block 15 START_ADDR
  4178  0334  00000213           	ddw	__ccov16_end_blk15	; block 15 END_ADDR
  4179  0338  0000020F           	ddw	__ccov15_start_blk14	; block 14 START_ADDR
  4180  033C  00000211           	ddw	__ccov15_end_blk14	; block 14 END_ADDR
  4181  0340  0000020E           	ddw	__ccov14_start_blk13	; block 13 START_ADDR
  4182  0344  0000020F           	ddw	__ccov14_end_blk13	; block 13 END_ADDR
  4183  0348  0000020D           	ddw	__ccov13_start_blk12	; block 12 START_ADDR
  4184  034C  0000020E           	ddw	__ccov13_end_blk12	; block 12 END_ADDR
  4185  0350  0000020C           	ddw	__ccov12_start_blk11	; block 11 START_ADDR
  4186  0354  0000020D           	ddw	__ccov12_end_blk11	; block 11 END_ADDR
  4187  0358  0000020A           	ddw	__ccov11_start_blk10	; block 10 START_ADDR
  4188  035C  0000020C           	ddw	__ccov11_end_blk10	; block 10 END_ADDR
  4189  0360  00000209           	ddw	__ccov10_start_blk9	; block 9 START_ADDR
  4190  0364  0000020A           	ddw	__ccov10_end_blk9	; block 9 END_ADDR
  4191  0368  00000208           	ddw	__ccov9_start_blk8	; block 8 START_ADDR
  4192  036C  00000209           	ddw	__ccov9_end_blk8	; block 8 END_ADDR
  4193  0370  00000207           	ddw	__ccov8_start_blk7	; block 7 START_ADDR
  4194  0374  00000208           	ddw	__ccov8_end_blk7	; block 7 END_ADDR
  4195  0378  00000206           	ddw	__ccov7_start_blk6	; block 6 START_ADDR
  4196  037C  00000207           	ddw	__ccov7_end_blk6	; block 6 END_ADDR
  4197  0380  00000205           	ddw	__ccov6_start_blk5	; block 5 START_ADDR
  4198  0384  00000206           	ddw	__ccov6_end_blk5	; block 5 END_ADDR
  4199  0388  00000204           	ddw	__ccov5_start_blk4	; block 4 START_ADDR
  4200  038C  00000205           	ddw	__ccov5_end_blk4	; block 4 END_ADDR
  4201  0390  00000200           	ddw	__ccov4_start_blk3	; block 3 START_ADDR
  4202  0394  00000204           	ddw	__ccov4_end_blk3	; block 3 END_ADDR
  4203  0398  000001FF           	ddw	__ccov3_start_blk2	; block 2 START_ADDR
  4204  039C  00000200           	ddw	__ccov3_end_blk2	; block 2 END_ADDR
  4205  03A0  000001FC           	ddw	__ccov2_start_blk1	; block 1 START_ADDR
  4206  03A4  000001FF           	ddw	__ccov2_end_blk1	; block 1 END_ADDR
  4207  03A8  000001FA           	ddw	_main	; block 0 START_ADDR
  4208  03AC  000001FC           	ddw	__ccov1_end_blk0	; block 0 END_ADDR
  4209                           
  4210                           ; Function: main, coverage: 66,65,64,69,61,60,59,58,57,56,55,54,53,52,47,46,45,44,43,42,
      +                          41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,1
      +                          2,11,10,9,8,7,6,5,4,3,2,1,0
  4211  03B0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4212  03B4  00000072           	ddw	__ccovbit66_3/(0+8)	; CC_ADDR
  4213  03B8  00000001           	ddw	1	; NUM_POINTS
  4214  03BC  00000002           	ddw	__ccovbit66_3& (0+7)	; OFFSET
  4215  03C0  00000000           	ddw	0	; Reserved
  4216  03C4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4217  03C8  0000003E           	ddw	62	; NUM_RANGES
  4218  03CC  000002CA           	ddw	__ccov65_start_blk66	; block 66 START_ADDR
  4219  03D0  000002CF           	ddw	__ccov65_end_blk66	; block 66 END_ADDR
  4220  03D4  000002C8           	ddw	__ccov64_start_blk65	; block 65 START_ADDR
  4221  03D8  000002CA           	ddw	__ccov64_end_blk65	; block 65 END_ADDR
  4222  03DC  000002C7           	ddw	__ccov63_start_blk64	; block 64 START_ADDR
  4223  03E0  000002C8           	ddw	__ccov63_end_blk64	; block 64 END_ADDR
  4224  03E4  000002CF           	ddw	__ccov66_start_blk69	; block 69 START_ADDR
  4225  03E8  000002E2           	ddw	__ccov66_end_blk69	; block 69 END_ADDR
  4226  03EC  000002B9           	ddw	__ccov61_start_blk61	; block 61 START_ADDR
  4227  03F0  000002BD           	ddw	__ccov61_end_blk61	; block 61 END_ADDR
  4228  03F4  000002B7           	ddw	__ccov60_start_blk60	; block 60 START_ADDR
  4229  03F8  000002B9           	ddw	__ccov60_end_blk60	; block 60 END_ADDR
  4230  03FC  000002B5           	ddw	__ccov59_start_blk59	; block 59 START_ADDR
  4231  0400  000002B7           	ddw	__ccov59_end_blk59	; block 59 END_ADDR
  4232  0404  000002B3           	ddw	__ccov58_start_blk58	; block 58 START_ADDR
  4233  0408  000002B5           	ddw	__ccov58_end_blk58	; block 58 END_ADDR
  4234  040C  000002B1           	ddw	__ccov57_start_blk57	; block 57 START_ADDR
  4235  0410  000002B3           	ddw	__ccov57_end_blk57	; block 57 END_ADDR
  4236  0414  000002AF           	ddw	__ccov56_start_blk56	; block 56 START_ADDR
  4237  0418  000002B1           	ddw	__ccov56_end_blk56	; block 56 END_ADDR
  4238  041C  000002AE           	ddw	__ccov55_start_blk55	; block 55 START_ADDR
  4239  0420  000002AF           	ddw	__ccov55_end_blk55	; block 55 END_ADDR
  4240  0424  000002AD           	ddw	__ccov54_start_blk54	; block 54 START_ADDR
  4241  0428  000002AE           	ddw	__ccov54_end_blk54	; block 54 END_ADDR
  4242  042C  000002A9           	ddw	__ccov53_start_blk53	; block 53 START_ADDR
  4243  0430  000002AD           	ddw	__ccov53_end_blk53	; block 53 END_ADDR
  4244  0434  000002A4           	ddw	__ccov52_start_blk52	; block 52 START_ADDR
  4245  0438  000002A9           	ddw	__ccov52_end_blk52	; block 52 END_ADDR
  4246  043C  00000289           	ddw	__ccov48_start_blk47	; block 47 START_ADDR
  4247  0440  00000296           	ddw	__ccov48_end_blk47	; block 47 END_ADDR
  4248  0444  00000279           	ddw	__ccov47_start_blk46	; block 46 START_ADDR
  4249  0448  00000289           	ddw	__ccov47_end_blk46	; block 46 END_ADDR
  4250  044C  00000260           	ddw	__ccov46_start_blk45	; block 45 START_ADDR
  4251  0450  00000279           	ddw	__ccov46_end_blk45	; block 45 END_ADDR
  4252  0454  00000259           	ddw	__ccov45_start_blk44	; block 44 START_ADDR
  4253  0458  00000260           	ddw	__ccov45_end_blk44	; block 44 END_ADDR
  4254  045C  00000258           	ddw	__ccov44_start_blk43	; block 43 START_ADDR
  4255  0460  00000259           	ddw	__ccov44_end_blk43	; block 43 END_ADDR
  4256  0464  00000253           	ddw	__ccov43_start_blk42	; block 42 START_ADDR
  4257  0468  00000258           	ddw	__ccov43_end_blk42	; block 42 END_ADDR
  4258  046C  00000252           	ddw	__ccov42_start_blk41	; block 41 START_ADDR
  4259  0470  00000253           	ddw	__ccov42_end_blk41	; block 41 END_ADDR
  4260  0474  00000246           	ddw	__ccov41_start_blk40	; block 40 START_ADDR
  4261  0478  00000252           	ddw	__ccov41_end_blk40	; block 40 END_ADDR
  4262  047C  00000243           	ddw	__ccov40_start_blk39	; block 39 START_ADDR
  4263  0480  00000246           	ddw	__ccov40_end_blk39	; block 39 END_ADDR
  4264  0484  00000240           	ddw	__ccov39_start_blk38	; block 38 START_ADDR
  4265  0488  00000243           	ddw	__ccov39_end_blk38	; block 38 END_ADDR
  4266  048C  0000023F           	ddw	__ccov38_start_blk37	; block 37 START_ADDR
  4267  0490  00000240           	ddw	__ccov38_end_blk37	; block 37 END_ADDR
  4268  0494  0000023D           	ddw	__ccov37_start_blk36	; block 36 START_ADDR
  4269  0498  0000023F           	ddw	__ccov37_end_blk36	; block 36 END_ADDR
  4270  049C  0000023C           	ddw	__ccov36_start_blk35	; block 35 START_ADDR
  4271  04A0  0000023D           	ddw	__ccov36_end_blk35	; block 35 END_ADDR
  4272  04A4  0000023A           	ddw	__ccov35_start_blk34	; block 34 START_ADDR
  4273  04A8  0000023C           	ddw	__ccov35_end_blk34	; block 34 END_ADDR
  4274  04AC  00000238           	ddw	__ccov34_start_blk33	; block 33 START_ADDR
  4275  04B0  0000023A           	ddw	__ccov34_end_blk33	; block 33 END_ADDR
  4276  04B4  00000236           	ddw	__ccov33_start_blk32	; block 32 START_ADDR
  4277  04B8  00000238           	ddw	__ccov33_end_blk32	; block 32 END_ADDR
  4278  04BC  00000232           	ddw	__ccov32_start_blk31	; block 31 START_ADDR
  4279  04C0  00000236           	ddw	__ccov32_end_blk31	; block 31 END_ADDR
  4280  04C4  0000022E           	ddw	__ccov31_start_blk30	; block 30 START_ADDR
  4281  04C8  00000232           	ddw	__ccov31_end_blk30	; block 30 END_ADDR
  4282  04CC  00000229           	ddw	__ccov30_start_blk29	; block 29 START_ADDR
  4283  04D0  0000022E           	ddw	__ccov30_end_blk29	; block 29 END_ADDR
  4284  04D4  00000227           	ddw	__ccov29_start_blk28	; block 28 START_ADDR
  4285  04D8  00000229           	ddw	__ccov29_end_blk28	; block 28 END_ADDR
  4286  04DC  00000225           	ddw	__ccov28_start_blk27	; block 27 START_ADDR
  4287  04E0  00000227           	ddw	__ccov28_end_blk27	; block 27 END_ADDR
  4288  04E4  00000224           	ddw	__ccov27_start_blk26	; block 26 START_ADDR
  4289  04E8  00000225           	ddw	__ccov27_end_blk26	; block 26 END_ADDR
  4290  04EC  00000222           	ddw	__ccov26_start_blk25	; block 25 START_ADDR
  4291  04F0  00000224           	ddw	__ccov26_end_blk25	; block 25 END_ADDR
  4292  04F4  00000220           	ddw	__ccov25_start_blk24	; block 24 START_ADDR
  4293  04F8  00000222           	ddw	__ccov25_end_blk24	; block 24 END_ADDR
  4294  04FC  0000021F           	ddw	__ccov24_start_blk23	; block 23 START_ADDR
  4295  0500  00000220           	ddw	__ccov24_end_blk23	; block 23 END_ADDR
  4296  0504  0000021E           	ddw	__ccov23_start_blk22	; block 22 START_ADDR
  4297  0508  0000021F           	ddw	__ccov23_end_blk22	; block 22 END_ADDR
  4298  050C  00000219           	ddw	__ccov22_start_blk21	; block 21 START_ADDR
  4299  0510  0000021E           	ddw	__ccov22_end_blk21	; block 21 END_ADDR
  4300  0514  00000218           	ddw	__ccov21_start_blk20	; block 20 START_ADDR
  4301  0518  00000219           	ddw	__ccov21_end_blk20	; block 20 END_ADDR
  4302  051C  00000217           	ddw	__ccov20_start_blk19	; block 19 START_ADDR
  4303  0520  00000218           	ddw	__ccov20_end_blk19	; block 19 END_ADDR
  4304  0524  00000215           	ddw	__ccov19_start_blk18	; block 18 START_ADDR
  4305  0528  00000217           	ddw	__ccov19_end_blk18	; block 18 END_ADDR
  4306  052C  00000214           	ddw	__ccov18_start_blk17	; block 17 START_ADDR
  4307  0530  00000215           	ddw	__ccov18_end_blk17	; block 17 END_ADDR
  4308  0534  00000213           	ddw	__ccov17_start_blk16	; block 16 START_ADDR
  4309  0538  00000214           	ddw	__ccov17_end_blk16	; block 16 END_ADDR
  4310  053C  00000211           	ddw	__ccov16_start_blk15	; block 15 START_ADDR
  4311  0540  00000213           	ddw	__ccov16_end_blk15	; block 15 END_ADDR
  4312  0544  0000020F           	ddw	__ccov15_start_blk14	; block 14 START_ADDR
  4313  0548  00000211           	ddw	__ccov15_end_blk14	; block 14 END_ADDR
  4314  054C  0000020E           	ddw	__ccov14_start_blk13	; block 13 START_ADDR
  4315  0550  0000020F           	ddw	__ccov14_end_blk13	; block 13 END_ADDR
  4316  0554  0000020D           	ddw	__ccov13_start_blk12	; block 12 START_ADDR
  4317  0558  0000020E           	ddw	__ccov13_end_blk12	; block 12 END_ADDR
  4318  055C  0000020C           	ddw	__ccov12_start_blk11	; block 11 START_ADDR
  4319  0560  0000020D           	ddw	__ccov12_end_blk11	; block 11 END_ADDR
  4320  0564  0000020A           	ddw	__ccov11_start_blk10	; block 10 START_ADDR
  4321  0568  0000020C           	ddw	__ccov11_end_blk10	; block 10 END_ADDR
  4322  056C  00000209           	ddw	__ccov10_start_blk9	; block 9 START_ADDR
  4323  0570  0000020A           	ddw	__ccov10_end_blk9	; block 9 END_ADDR
  4324  0574  00000208           	ddw	__ccov9_start_blk8	; block 8 START_ADDR
  4325  0578  00000209           	ddw	__ccov9_end_blk8	; block 8 END_ADDR
  4326  057C  00000207           	ddw	__ccov8_start_blk7	; block 7 START_ADDR
  4327  0580  00000208           	ddw	__ccov8_end_blk7	; block 7 END_ADDR
  4328  0584  00000206           	ddw	__ccov7_start_blk6	; block 6 START_ADDR
  4329  0588  00000207           	ddw	__ccov7_end_blk6	; block 6 END_ADDR
  4330  058C  00000205           	ddw	__ccov6_start_blk5	; block 5 START_ADDR
  4331  0590  00000206           	ddw	__ccov6_end_blk5	; block 5 END_ADDR
  4332  0594  00000204           	ddw	__ccov5_start_blk4	; block 4 START_ADDR
  4333  0598  00000205           	ddw	__ccov5_end_blk4	; block 4 END_ADDR
  4334  059C  00000200           	ddw	__ccov4_start_blk3	; block 3 START_ADDR
  4335  05A0  00000204           	ddw	__ccov4_end_blk3	; block 3 END_ADDR
  4336  05A4  000001FF           	ddw	__ccov3_start_blk2	; block 2 START_ADDR
  4337  05A8  00000200           	ddw	__ccov3_end_blk2	; block 2 END_ADDR
  4338  05AC  000001FC           	ddw	__ccov2_start_blk1	; block 1 START_ADDR
  4339  05B0  000001FF           	ddw	__ccov2_end_blk1	; block 1 END_ADDR
  4340  05B4  000001FA           	ddw	_main	; block 0 START_ADDR
  4341  05B8  000001FC           	ddw	__ccov1_end_blk0	; block 0 END_ADDR
  4342                           
  4343                           ; Function: main, coverage: 74,73,71,69,61,60,59,58,57,56,55,54,53,52,47,46,45,44,43,42,
      +                          41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,1
      +                          2,11,10,9,8,7,6,5,4,3,2,1,0
  4344  05BC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4345  05C0  00000072           	ddw	__ccovbit74_4/(0+8)	; CC_ADDR
  4346  05C4  00000001           	ddw	1	; NUM_POINTS
  4347  05C8  00000001           	ddw	__ccovbit74_4& (0+7)	; OFFSET
  4348  05CC  00000000           	ddw	0	; Reserved
  4349  05D0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4350  05D4  0000003E           	ddw	62	; NUM_RANGES
  4351  05D8  000002E9           	ddw	__ccov69_start_blk74	; block 74 START_ADDR
  4352  05DC  000002EE           	ddw	__ccov69_end_blk74	; block 74 END_ADDR
  4353  05E0  000002E5           	ddw	__ccov68_start_blk73	; block 73 START_ADDR
  4354  05E4  000002E9           	ddw	__ccov68_end_blk73	; block 73 END_ADDR
  4355  05E8  000002E2           	ddw	__ccov67_start_blk71	; block 71 START_ADDR
  4356  05EC  000002E5           	ddw	__ccov67_end_blk71	; block 71 END_ADDR
  4357  05F0  000002CF           	ddw	__ccov66_start_blk69	; block 69 START_ADDR
  4358  05F4  000002E2           	ddw	__ccov66_end_blk69	; block 69 END_ADDR
  4359  05F8  000002B9           	ddw	__ccov61_start_blk61	; block 61 START_ADDR
  4360  05FC  000002BD           	ddw	__ccov61_end_blk61	; block 61 END_ADDR
  4361  0600  000002B7           	ddw	__ccov60_start_blk60	; block 60 START_ADDR
  4362  0604  000002B9           	ddw	__ccov60_end_blk60	; block 60 END_ADDR
  4363  0608  000002B5           	ddw	__ccov59_start_blk59	; block 59 START_ADDR
  4364  060C  000002B7           	ddw	__ccov59_end_blk59	; block 59 END_ADDR
  4365  0610  000002B3           	ddw	__ccov58_start_blk58	; block 58 START_ADDR
  4366  0614  000002B5           	ddw	__ccov58_end_blk58	; block 58 END_ADDR
  4367  0618  000002B1           	ddw	__ccov57_start_blk57	; block 57 START_ADDR
  4368  061C  000002B3           	ddw	__ccov57_end_blk57	; block 57 END_ADDR
  4369  0620  000002AF           	ddw	__ccov56_start_blk56	; block 56 START_ADDR
  4370  0624  000002B1           	ddw	__ccov56_end_blk56	; block 56 END_ADDR
  4371  0628  000002AE           	ddw	__ccov55_start_blk55	; block 55 START_ADDR
  4372  062C  000002AF           	ddw	__ccov55_end_blk55	; block 55 END_ADDR
  4373  0630  000002AD           	ddw	__ccov54_start_blk54	; block 54 START_ADDR
  4374  0634  000002AE           	ddw	__ccov54_end_blk54	; block 54 END_ADDR
  4375  0638  000002A9           	ddw	__ccov53_start_blk53	; block 53 START_ADDR
  4376  063C  000002AD           	ddw	__ccov53_end_blk53	; block 53 END_ADDR
  4377  0640  000002A4           	ddw	__ccov52_start_blk52	; block 52 START_ADDR
  4378  0644  000002A9           	ddw	__ccov52_end_blk52	; block 52 END_ADDR
  4379  0648  00000289           	ddw	__ccov48_start_blk47	; block 47 START_ADDR
  4380  064C  00000296           	ddw	__ccov48_end_blk47	; block 47 END_ADDR
  4381  0650  00000279           	ddw	__ccov47_start_blk46	; block 46 START_ADDR
  4382  0654  00000289           	ddw	__ccov47_end_blk46	; block 46 END_ADDR
  4383  0658  00000260           	ddw	__ccov46_start_blk45	; block 45 START_ADDR
  4384  065C  00000279           	ddw	__ccov46_end_blk45	; block 45 END_ADDR
  4385  0660  00000259           	ddw	__ccov45_start_blk44	; block 44 START_ADDR
  4386  0664  00000260           	ddw	__ccov45_end_blk44	; block 44 END_ADDR
  4387  0668  00000258           	ddw	__ccov44_start_blk43	; block 43 START_ADDR
  4388  066C  00000259           	ddw	__ccov44_end_blk43	; block 43 END_ADDR
  4389  0670  00000253           	ddw	__ccov43_start_blk42	; block 42 START_ADDR
  4390  0674  00000258           	ddw	__ccov43_end_blk42	; block 42 END_ADDR
  4391  0678  00000252           	ddw	__ccov42_start_blk41	; block 41 START_ADDR
  4392  067C  00000253           	ddw	__ccov42_end_blk41	; block 41 END_ADDR
  4393  0680  00000246           	ddw	__ccov41_start_blk40	; block 40 START_ADDR
  4394  0684  00000252           	ddw	__ccov41_end_blk40	; block 40 END_ADDR
  4395  0688  00000243           	ddw	__ccov40_start_blk39	; block 39 START_ADDR
  4396  068C  00000246           	ddw	__ccov40_end_blk39	; block 39 END_ADDR
  4397  0690  00000240           	ddw	__ccov39_start_blk38	; block 38 START_ADDR
  4398  0694  00000243           	ddw	__ccov39_end_blk38	; block 38 END_ADDR
  4399  0698  0000023F           	ddw	__ccov38_start_blk37	; block 37 START_ADDR
  4400  069C  00000240           	ddw	__ccov38_end_blk37	; block 37 END_ADDR
  4401  06A0  0000023D           	ddw	__ccov37_start_blk36	; block 36 START_ADDR
  4402  06A4  0000023F           	ddw	__ccov37_end_blk36	; block 36 END_ADDR
  4403  06A8  0000023C           	ddw	__ccov36_start_blk35	; block 35 START_ADDR
  4404  06AC  0000023D           	ddw	__ccov36_end_blk35	; block 35 END_ADDR
  4405  06B0  0000023A           	ddw	__ccov35_start_blk34	; block 34 START_ADDR
  4406  06B4  0000023C           	ddw	__ccov35_end_blk34	; block 34 END_ADDR
  4407  06B8  00000238           	ddw	__ccov34_start_blk33	; block 33 START_ADDR
  4408  06BC  0000023A           	ddw	__ccov34_end_blk33	; block 33 END_ADDR
  4409  06C0  00000236           	ddw	__ccov33_start_blk32	; block 32 START_ADDR
  4410  06C4  00000238           	ddw	__ccov33_end_blk32	; block 32 END_ADDR
  4411  06C8  00000232           	ddw	__ccov32_start_blk31	; block 31 START_ADDR
  4412  06CC  00000236           	ddw	__ccov32_end_blk31	; block 31 END_ADDR
  4413  06D0  0000022E           	ddw	__ccov31_start_blk30	; block 30 START_ADDR
  4414  06D4  00000232           	ddw	__ccov31_end_blk30	; block 30 END_ADDR
  4415  06D8  00000229           	ddw	__ccov30_start_blk29	; block 29 START_ADDR
  4416  06DC  0000022E           	ddw	__ccov30_end_blk29	; block 29 END_ADDR
  4417  06E0  00000227           	ddw	__ccov29_start_blk28	; block 28 START_ADDR
  4418  06E4  00000229           	ddw	__ccov29_end_blk28	; block 28 END_ADDR
  4419  06E8  00000225           	ddw	__ccov28_start_blk27	; block 27 START_ADDR
  4420  06EC  00000227           	ddw	__ccov28_end_blk27	; block 27 END_ADDR
  4421  06F0  00000224           	ddw	__ccov27_start_blk26	; block 26 START_ADDR
  4422  06F4  00000225           	ddw	__ccov27_end_blk26	; block 26 END_ADDR
  4423  06F8  00000222           	ddw	__ccov26_start_blk25	; block 25 START_ADDR
  4424  06FC  00000224           	ddw	__ccov26_end_blk25	; block 25 END_ADDR
  4425  0700  00000220           	ddw	__ccov25_start_blk24	; block 24 START_ADDR
  4426  0704  00000222           	ddw	__ccov25_end_blk24	; block 24 END_ADDR
  4427  0708  0000021F           	ddw	__ccov24_start_blk23	; block 23 START_ADDR
  4428  070C  00000220           	ddw	__ccov24_end_blk23	; block 23 END_ADDR
  4429  0710  0000021E           	ddw	__ccov23_start_blk22	; block 22 START_ADDR
  4430  0714  0000021F           	ddw	__ccov23_end_blk22	; block 22 END_ADDR
  4431  0718  00000219           	ddw	__ccov22_start_blk21	; block 21 START_ADDR
  4432  071C  0000021E           	ddw	__ccov22_end_blk21	; block 21 END_ADDR
  4433  0720  00000218           	ddw	__ccov21_start_blk20	; block 20 START_ADDR
  4434  0724  00000219           	ddw	__ccov21_end_blk20	; block 20 END_ADDR
  4435  0728  00000217           	ddw	__ccov20_start_blk19	; block 19 START_ADDR
  4436  072C  00000218           	ddw	__ccov20_end_blk19	; block 19 END_ADDR
  4437  0730  00000215           	ddw	__ccov19_start_blk18	; block 18 START_ADDR
  4438  0734  00000217           	ddw	__ccov19_end_blk18	; block 18 END_ADDR
  4439  0738  00000214           	ddw	__ccov18_start_blk17	; block 17 START_ADDR
  4440  073C  00000215           	ddw	__ccov18_end_blk17	; block 17 END_ADDR
  4441  0740  00000213           	ddw	__ccov17_start_blk16	; block 16 START_ADDR
  4442  0744  00000214           	ddw	__ccov17_end_blk16	; block 16 END_ADDR
  4443  0748  00000211           	ddw	__ccov16_start_blk15	; block 15 START_ADDR
  4444  074C  00000213           	ddw	__ccov16_end_blk15	; block 15 END_ADDR
  4445  0750  0000020F           	ddw	__ccov15_start_blk14	; block 14 START_ADDR
  4446  0754  00000211           	ddw	__ccov15_end_blk14	; block 14 END_ADDR
  4447  0758  0000020E           	ddw	__ccov14_start_blk13	; block 13 START_ADDR
  4448  075C  0000020F           	ddw	__ccov14_end_blk13	; block 13 END_ADDR
  4449  0760  0000020D           	ddw	__ccov13_start_blk12	; block 12 START_ADDR
  4450  0764  0000020E           	ddw	__ccov13_end_blk12	; block 12 END_ADDR
  4451  0768  0000020C           	ddw	__ccov12_start_blk11	; block 11 START_ADDR
  4452  076C  0000020D           	ddw	__ccov12_end_blk11	; block 11 END_ADDR
  4453  0770  0000020A           	ddw	__ccov11_start_blk10	; block 10 START_ADDR
  4454  0774  0000020C           	ddw	__ccov11_end_blk10	; block 10 END_ADDR
  4455  0778  00000209           	ddw	__ccov10_start_blk9	; block 9 START_ADDR
  4456  077C  0000020A           	ddw	__ccov10_end_blk9	; block 9 END_ADDR
  4457  0780  00000208           	ddw	__ccov9_start_blk8	; block 8 START_ADDR
  4458  0784  00000209           	ddw	__ccov9_end_blk8	; block 8 END_ADDR
  4459  0788  00000207           	ddw	__ccov8_start_blk7	; block 7 START_ADDR
  4460  078C  00000208           	ddw	__ccov8_end_blk7	; block 7 END_ADDR
  4461  0790  00000206           	ddw	__ccov7_start_blk6	; block 6 START_ADDR
  4462  0794  00000207           	ddw	__ccov7_end_blk6	; block 6 END_ADDR
  4463  0798  00000205           	ddw	__ccov6_start_blk5	; block 5 START_ADDR
  4464  079C  00000206           	ddw	__ccov6_end_blk5	; block 5 END_ADDR
  4465  07A0  00000204           	ddw	__ccov5_start_blk4	; block 4 START_ADDR
  4466  07A4  00000205           	ddw	__ccov5_end_blk4	; block 4 END_ADDR
  4467  07A8  00000200           	ddw	__ccov4_start_blk3	; block 3 START_ADDR
  4468  07AC  00000204           	ddw	__ccov4_end_blk3	; block 3 END_ADDR
  4469  07B0  000001FF           	ddw	__ccov3_start_blk2	; block 2 START_ADDR
  4470  07B4  00000200           	ddw	__ccov3_end_blk2	; block 2 END_ADDR
  4471  07B8  000001FC           	ddw	__ccov2_start_blk1	; block 1 START_ADDR
  4472  07BC  000001FF           	ddw	__ccov2_end_blk1	; block 1 END_ADDR
  4473  07C0  000001FA           	ddw	_main	; block 0 START_ADDR
  4474  07C4  000001FC           	ddw	__ccov1_end_blk0	; block 0 END_ADDR
  4475                           
  4476                           ; Function: main, coverage: 76,73,71,69,61,60,59,58,57,56,55,54,53,52,47,46,45,44,43,42,
      +                          41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,1
      +                          2,11,10,9,8,7,6,5,4,3,2,1,0
  4477  07C8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4478  07CC  00000072           	ddw	__ccovbit76_5/(0+8)	; CC_ADDR
  4479  07D0  00000001           	ddw	1	; NUM_POINTS
  4480  07D4  00000000           	ddw	__ccovbit76_5& (0+7)	; OFFSET
  4481  07D8  00000000           	ddw	0	; Reserved
  4482  07DC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4483  07E0  0000003E           	ddw	62	; NUM_RANGES
  4484  07E4  000002EE           	ddw	__ccov70_start_blk76	; block 76 START_ADDR
  4485  07E8  000002F3           	ddw	__ccov70_end_blk76	; block 76 END_ADDR
  4486  07EC  000002E5           	ddw	__ccov68_start_blk73	; block 73 START_ADDR
  4487  07F0  000002E9           	ddw	__ccov68_end_blk73	; block 73 END_ADDR
  4488  07F4  000002E2           	ddw	__ccov67_start_blk71	; block 71 START_ADDR
  4489  07F8  000002E5           	ddw	__ccov67_end_blk71	; block 71 END_ADDR
  4490  07FC  000002CF           	ddw	__ccov66_start_blk69	; block 69 START_ADDR
  4491  0800  000002E2           	ddw	__ccov66_end_blk69	; block 69 END_ADDR
  4492  0804  000002B9           	ddw	__ccov61_start_blk61	; block 61 START_ADDR
  4493  0808  000002BD           	ddw	__ccov61_end_blk61	; block 61 END_ADDR
  4494  080C  000002B7           	ddw	__ccov60_start_blk60	; block 60 START_ADDR
  4495  0810  000002B9           	ddw	__ccov60_end_blk60	; block 60 END_ADDR
  4496  0814  000002B5           	ddw	__ccov59_start_blk59	; block 59 START_ADDR
  4497  0818  000002B7           	ddw	__ccov59_end_blk59	; block 59 END_ADDR
  4498  081C  000002B3           	ddw	__ccov58_start_blk58	; block 58 START_ADDR
  4499  0820  000002B5           	ddw	__ccov58_end_blk58	; block 58 END_ADDR
  4500  0824  000002B1           	ddw	__ccov57_start_blk57	; block 57 START_ADDR
  4501  0828  000002B3           	ddw	__ccov57_end_blk57	; block 57 END_ADDR
  4502  082C  000002AF           	ddw	__ccov56_start_blk56	; block 56 START_ADDR
  4503  0830  000002B1           	ddw	__ccov56_end_blk56	; block 56 END_ADDR
  4504  0834  000002AE           	ddw	__ccov55_start_blk55	; block 55 START_ADDR
  4505  0838  000002AF           	ddw	__ccov55_end_blk55	; block 55 END_ADDR
  4506  083C  000002AD           	ddw	__ccov54_start_blk54	; block 54 START_ADDR
  4507  0840  000002AE           	ddw	__ccov54_end_blk54	; block 54 END_ADDR
  4508  0844  000002A9           	ddw	__ccov53_start_blk53	; block 53 START_ADDR
  4509  0848  000002AD           	ddw	__ccov53_end_blk53	; block 53 END_ADDR
  4510  084C  000002A4           	ddw	__ccov52_start_blk52	; block 52 START_ADDR
  4511  0850  000002A9           	ddw	__ccov52_end_blk52	; block 52 END_ADDR
  4512  0854  00000289           	ddw	__ccov48_start_blk47	; block 47 START_ADDR
  4513  0858  00000296           	ddw	__ccov48_end_blk47	; block 47 END_ADDR
  4514  085C  00000279           	ddw	__ccov47_start_blk46	; block 46 START_ADDR
  4515  0860  00000289           	ddw	__ccov47_end_blk46	; block 46 END_ADDR
  4516  0864  00000260           	ddw	__ccov46_start_blk45	; block 45 START_ADDR
  4517  0868  00000279           	ddw	__ccov46_end_blk45	; block 45 END_ADDR
  4518  086C  00000259           	ddw	__ccov45_start_blk44	; block 44 START_ADDR
  4519  0870  00000260           	ddw	__ccov45_end_blk44	; block 44 END_ADDR
  4520  0874  00000258           	ddw	__ccov44_start_blk43	; block 43 START_ADDR
  4521  0878  00000259           	ddw	__ccov44_end_blk43	; block 43 END_ADDR
  4522  087C  00000253           	ddw	__ccov43_start_blk42	; block 42 START_ADDR
  4523  0880  00000258           	ddw	__ccov43_end_blk42	; block 42 END_ADDR
  4524  0884  00000252           	ddw	__ccov42_start_blk41	; block 41 START_ADDR
  4525  0888  00000253           	ddw	__ccov42_end_blk41	; block 41 END_ADDR
  4526  088C  00000246           	ddw	__ccov41_start_blk40	; block 40 START_ADDR
  4527  0890  00000252           	ddw	__ccov41_end_blk40	; block 40 END_ADDR
  4528  0894  00000243           	ddw	__ccov40_start_blk39	; block 39 START_ADDR
  4529  0898  00000246           	ddw	__ccov40_end_blk39	; block 39 END_ADDR
  4530  089C  00000240           	ddw	__ccov39_start_blk38	; block 38 START_ADDR
  4531  08A0  00000243           	ddw	__ccov39_end_blk38	; block 38 END_ADDR
  4532  08A4  0000023F           	ddw	__ccov38_start_blk37	; block 37 START_ADDR
  4533  08A8  00000240           	ddw	__ccov38_end_blk37	; block 37 END_ADDR
  4534  08AC  0000023D           	ddw	__ccov37_start_blk36	; block 36 START_ADDR
  4535  08B0  0000023F           	ddw	__ccov37_end_blk36	; block 36 END_ADDR
  4536  08B4  0000023C           	ddw	__ccov36_start_blk35	; block 35 START_ADDR
  4537  08B8  0000023D           	ddw	__ccov36_end_blk35	; block 35 END_ADDR
  4538  08BC  0000023A           	ddw	__ccov35_start_blk34	; block 34 START_ADDR
  4539  08C0  0000023C           	ddw	__ccov35_end_blk34	; block 34 END_ADDR
  4540  08C4  00000238           	ddw	__ccov34_start_blk33	; block 33 START_ADDR
  4541  08C8  0000023A           	ddw	__ccov34_end_blk33	; block 33 END_ADDR
  4542  08CC  00000236           	ddw	__ccov33_start_blk32	; block 32 START_ADDR
  4543  08D0  00000238           	ddw	__ccov33_end_blk32	; block 32 END_ADDR
  4544  08D4  00000232           	ddw	__ccov32_start_blk31	; block 31 START_ADDR
  4545  08D8  00000236           	ddw	__ccov32_end_blk31	; block 31 END_ADDR
  4546  08DC  0000022E           	ddw	__ccov31_start_blk30	; block 30 START_ADDR
  4547  08E0  00000232           	ddw	__ccov31_end_blk30	; block 30 END_ADDR
  4548  08E4  00000229           	ddw	__ccov30_start_blk29	; block 29 START_ADDR
  4549  08E8  0000022E           	ddw	__ccov30_end_blk29	; block 29 END_ADDR
  4550  08EC  00000227           	ddw	__ccov29_start_blk28	; block 28 START_ADDR
  4551  08F0  00000229           	ddw	__ccov29_end_blk28	; block 28 END_ADDR
  4552  08F4  00000225           	ddw	__ccov28_start_blk27	; block 27 START_ADDR
  4553  08F8  00000227           	ddw	__ccov28_end_blk27	; block 27 END_ADDR
  4554  08FC  00000224           	ddw	__ccov27_start_blk26	; block 26 START_ADDR
  4555  0900  00000225           	ddw	__ccov27_end_blk26	; block 26 END_ADDR
  4556  0904  00000222           	ddw	__ccov26_start_blk25	; block 25 START_ADDR
  4557  0908  00000224           	ddw	__ccov26_end_blk25	; block 25 END_ADDR
  4558  090C  00000220           	ddw	__ccov25_start_blk24	; block 24 START_ADDR
  4559  0910  00000222           	ddw	__ccov25_end_blk24	; block 24 END_ADDR
  4560  0914  0000021F           	ddw	__ccov24_start_blk23	; block 23 START_ADDR
  4561  0918  00000220           	ddw	__ccov24_end_blk23	; block 23 END_ADDR
  4562  091C  0000021E           	ddw	__ccov23_start_blk22	; block 22 START_ADDR
  4563  0920  0000021F           	ddw	__ccov23_end_blk22	; block 22 END_ADDR
  4564  0924  00000219           	ddw	__ccov22_start_blk21	; block 21 START_ADDR
  4565  0928  0000021E           	ddw	__ccov22_end_blk21	; block 21 END_ADDR
  4566  092C  00000218           	ddw	__ccov21_start_blk20	; block 20 START_ADDR
  4567  0930  00000219           	ddw	__ccov21_end_blk20	; block 20 END_ADDR
  4568  0934  00000217           	ddw	__ccov20_start_blk19	; block 19 START_ADDR
  4569  0938  00000218           	ddw	__ccov20_end_blk19	; block 19 END_ADDR
  4570  093C  00000215           	ddw	__ccov19_start_blk18	; block 18 START_ADDR
  4571  0940  00000217           	ddw	__ccov19_end_blk18	; block 18 END_ADDR
  4572  0944  00000214           	ddw	__ccov18_start_blk17	; block 17 START_ADDR
  4573  0948  00000215           	ddw	__ccov18_end_blk17	; block 17 END_ADDR
  4574  094C  00000213           	ddw	__ccov17_start_blk16	; block 16 START_ADDR
  4575  0950  00000214           	ddw	__ccov17_end_blk16	; block 16 END_ADDR
  4576  0954  00000211           	ddw	__ccov16_start_blk15	; block 15 START_ADDR
  4577  0958  00000213           	ddw	__ccov16_end_blk15	; block 15 END_ADDR
  4578  095C  0000020F           	ddw	__ccov15_start_blk14	; block 14 START_ADDR
  4579  0960  00000211           	ddw	__ccov15_end_blk14	; block 14 END_ADDR
  4580  0964  0000020E           	ddw	__ccov14_start_blk13	; block 13 START_ADDR
  4581  0968  0000020F           	ddw	__ccov14_end_blk13	; block 13 END_ADDR
  4582  096C  0000020D           	ddw	__ccov13_start_blk12	; block 12 START_ADDR
  4583  0970  0000020E           	ddw	__ccov13_end_blk12	; block 12 END_ADDR
  4584  0974  0000020C           	ddw	__ccov12_start_blk11	; block 11 START_ADDR
  4585  0978  0000020D           	ddw	__ccov12_end_blk11	; block 11 END_ADDR
  4586  097C  0000020A           	ddw	__ccov11_start_blk10	; block 10 START_ADDR
  4587  0980  0000020C           	ddw	__ccov11_end_blk10	; block 10 END_ADDR
  4588  0984  00000209           	ddw	__ccov10_start_blk9	; block 9 START_ADDR
  4589  0988  0000020A           	ddw	__ccov10_end_blk9	; block 9 END_ADDR
  4590  098C  00000208           	ddw	__ccov9_start_blk8	; block 8 START_ADDR
  4591  0990  00000209           	ddw	__ccov9_end_blk8	; block 8 END_ADDR
  4592  0994  00000207           	ddw	__ccov8_start_blk7	; block 7 START_ADDR
  4593  0998  00000208           	ddw	__ccov8_end_blk7	; block 7 END_ADDR
  4594  099C  00000206           	ddw	__ccov7_start_blk6	; block 6 START_ADDR
  4595  09A0  00000207           	ddw	__ccov7_end_blk6	; block 6 END_ADDR
  4596  09A4  00000205           	ddw	__ccov6_start_blk5	; block 5 START_ADDR
  4597  09A8  00000206           	ddw	__ccov6_end_blk5	; block 5 END_ADDR
  4598  09AC  00000204           	ddw	__ccov5_start_blk4	; block 4 START_ADDR
  4599  09B0  00000205           	ddw	__ccov5_end_blk4	; block 4 END_ADDR
  4600  09B4  00000200           	ddw	__ccov4_start_blk3	; block 3 START_ADDR
  4601  09B8  00000204           	ddw	__ccov4_end_blk3	; block 3 END_ADDR
  4602  09BC  000001FF           	ddw	__ccov3_start_blk2	; block 2 START_ADDR
  4603  09C0  00000200           	ddw	__ccov3_end_blk2	; block 2 END_ADDR
  4604  09C4  000001FC           	ddw	__ccov2_start_blk1	; block 1 START_ADDR
  4605  09C8  000001FF           	ddw	__ccov2_end_blk1	; block 1 END_ADDR
  4606  09CC  000001FA           	ddw	_main	; block 0 START_ADDR
  4607  09D0  000001FC           	ddw	__ccov1_end_blk0	; block 0 END_ADDR
  4608                           
  4609                           ; Function: timer2_init, coverage: 3,2,1,0
  4610  09D4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4611  09D8  00000071           	ddw	__ccovbit3_6/(0+8)	; CC_ADDR
  4612  09DC  00000001           	ddw	1	; NUM_POINTS
  4613  09E0  00000007           	ddw	__ccovbit3_6& (0+7)	; OFFSET
  4614  09E4  00000000           	ddw	0	; Reserved
  4615  09E8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4616  09EC  00000004           	ddw	4	; NUM_RANGES
  4617  09F0  00000412           	ddw	__ccov74_start_blk3	; block 3 START_ADDR
  4618  09F4  00000414           	ddw	__end_of_timer2_init	; block 3 END_ADDR
  4619  09F8  00000411           	ddw	__ccov73_start_blk2	; block 2 START_ADDR
  4620  09FC  00000412           	ddw	__ccov73_end_blk2	; block 2 END_ADDR
  4621  0A00  00000408           	ddw	__ccov72_start_blk1	; block 1 START_ADDR
  4622  0A04  00000411           	ddw	__ccov72_end_blk1	; block 1 END_ADDR
  4623  0A08  00000405           	ddw	_timer2_init	; block 0 START_ADDR
  4624  0A0C  00000408           	ddw	__ccov71_end_blk0	; block 0 END_ADDR
  4625                           
  4626                           ; Function: getBatteryVoltage, coverage: 18,16,15,14,12,10,9,8,7,6,5,4,3,1,0
  4627  0A10  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4628  0A14  00000071           	ddw	__ccovbit18_7/(0+8)	; CC_ADDR
  4629  0A18  00000001           	ddw	1	; NUM_POINTS
  4630  0A1C  00000006           	ddw	__ccovbit18_7& (0+7)	; OFFSET
  4631  0A20  00000000           	ddw	0	; Reserved
  4632  0A24  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4633  0A28  0000000E           	ddw	14	; NUM_RANGES
  4634  0A2C  00000403           	ddw	__ccov89_start_blk18	; block 18 START_ADDR
  4635  0A30  00000405           	ddw	__end_of_getBatteryVoltage	; block 18 END_ADDR
  4636  0A34  000003FD           	ddw	__ccov88_start_blk16	; block 16 START_ADDR
  4637  0A38  00000403           	ddw	__ccov88_end_blk16	; block 16 END_ADDR
  4638  0A3C  000003FB           	ddw	__ccov87_start_blk15	; block 15 START_ADDR
  4639  0A40  000003FD           	ddw	__ccov87_end_blk15	; block 15 END_ADDR
  4640  0A44  000003EA           	ddw	__ccov86_start_blk14	; block 14 START_ADDR
  4641  0A48  000003FB           	ddw	__ccov86_end_blk14	; block 14 END_ADDR
  4642  0A4C  000003E6           	ddw	__ccov85_start_blk12	; block 12 START_ADDR
  4643  0A50  000003EA           	ddw	__ccov85_end_blk12	; block 12 END_ADDR
  4644  0A54  000003E5           	ddw	__ccov84_start_blk10	; block 10 START_ADDR
  4645  0A58  000003E6           	ddw	__ccov84_end_blk10	; block 10 END_ADDR
  4646  0A5C  000003E4           	ddw	__ccov82_start_blk8	; block 8 START_ADDR
  4647  0A60  000003E5           	ddw	__ccov82_end_blk8	; block 8 END_ADDR
  4648  0A64  000003E1           	ddw	__ccov81_start_blk7	; block 7 START_ADDR
  4649  0A68  000003E4           	ddw	__ccov81_end_blk7	; block 7 END_ADDR
  4650  0A6C  000003DD           	ddw	__ccov80_start_blk6	; block 6 START_ADDR
  4651  0A70  000003E1           	ddw	__ccov80_end_blk6	; block 6 END_ADDR
  4652  0A74  000003DB           	ddw	__ccov79_start_blk5	; block 5 START_ADDR
  4653  0A78  000003DD           	ddw	__ccov79_end_blk5	; block 5 END_ADDR
  4654  0A7C  000003D9           	ddw	__ccov78_start_blk4	; block 4 START_ADDR
  4655  0A80  000003DB           	ddw	__ccov78_end_blk4	; block 4 END_ADDR
  4656  0A84  000003D5           	ddw	__ccov77_start_blk3	; block 3 START_ADDR
  4657  0A88  000003D9           	ddw	__ccov77_end_blk3	; block 3 END_ADDR
  4658  0A8C  000003D4           	ddw	__ccov76_start_blk1	; block 1 START_ADDR
  4659  0A90  000003D5           	ddw	__ccov76_end_blk1	; block 1 END_ADDR
  4660  0A94  000003CF           	ddw	_getBatteryVoltage	; block 0 START_ADDR
  4661  0A98  000003D4           	ddw	__ccov75_end_blk0	; block 0 END_ADDR
  4662                           
  4663                           ; Function: watch_dog_incrementing_timer, coverage: 2,1,0
  4664  0A9C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4665  0AA0  00000071           	ddw	__ccovbit2_8/(0+8)	; CC_ADDR
  4666  0AA4  00000001           	ddw	1	; NUM_POINTS
  4667  0AA8  00000005           	ddw	__ccovbit2_8& (0+7)	; OFFSET
  4668  0AAC  00000000           	ddw	0	; Reserved
  4669  0AB0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4670  0AB4  00000003           	ddw	3	; NUM_RANGES
  4671  0AB8  00000307           	ddw	__ccov92_start_blk2	; block 2 START_ADDR
  4672  0ABC  0000030C           	ddw	__ccov92_end_blk2	; block 2 END_ADDR
  4673  0AC0  00000302           	ddw	__ccov91_start_blk1	; block 1 START_ADDR
  4674  0AC4  00000307           	ddw	__ccov91_end_blk1	; block 1 END_ADDR
  4675  0AC8  000002F4           	ddw	_watch_dog_incrementing_timer	; block 0 START_ADDR
  4676  0ACC  00000302           	ddw	__ccov90_end_blk0	; block 0 END_ADDR
  4677                           
  4678                           ; Function: watch_dog_incrementing_timer, coverage: 6,5,4,0
  4679  0AD0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4680  0AD4  00000071           	ddw	__ccovbit6_9/(0+8)	; CC_ADDR
  4681  0AD8  00000001           	ddw	1	; NUM_POINTS
  4682  0ADC  00000004           	ddw	__ccovbit6_9& (0+7)	; OFFSET
  4683  0AE0  00000000           	ddw	0	; Reserved
  4684  0AE4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4685  0AE8  00000004           	ddw	4	; NUM_RANGES
  4686  0AEC  0000031F           	ddw	__ccov95_start_blk6	; block 6 START_ADDR
  4687  0AF0  00000324           	ddw	__ccov95_end_blk6	; block 6 END_ADDR
  4688  0AF4  0000031A           	ddw	__ccov94_start_blk5	; block 5 START_ADDR
  4689  0AF8  0000031F           	ddw	__ccov94_end_blk5	; block 5 END_ADDR
  4690  0AFC  0000030C           	ddw	__ccov93_start_blk4	; block 4 START_ADDR
  4691  0B00  0000031A           	ddw	__ccov93_end_blk4	; block 4 END_ADDR
  4692  0B04  000002F4           	ddw	_watch_dog_incrementing_timer	; block 0 START_ADDR
  4693  0B08  00000302           	ddw	__ccov90_end_blk0	; block 0 END_ADDR
  4694                           
  4695                           ; Function: watch_dog_incrementing_timer, coverage: 10,9,8,4,0
  4696  0B0C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4697  0B10  00000071           	ddw	__ccovbit10_10/(0+8)	; CC_ADDR
  4698  0B14  00000001           	ddw	1	; NUM_POINTS
  4699  0B18  00000003           	ddw	__ccovbit10_10& (0+7)	; OFFSET
  4700  0B1C  00000000           	ddw	0	; Reserved
  4701  0B20  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4702  0B24  00000005           	ddw	5	; NUM_RANGES
  4703  0B28  00000337           	ddw	__ccov98_start_blk10	; block 10 START_ADDR
  4704  0B2C  0000033C           	ddw	__ccov98_end_blk10	; block 10 END_ADDR
  4705  0B30  00000332           	ddw	__ccov97_start_blk9	; block 9 START_ADDR
  4706  0B34  00000337           	ddw	__ccov97_end_blk9	; block 9 END_ADDR
  4707  0B38  00000324           	ddw	__ccov96_start_blk8	; block 8 START_ADDR
  4708  0B3C  00000332           	ddw	__ccov96_end_blk8	; block 8 END_ADDR
  4709  0B40  0000030C           	ddw	__ccov93_start_blk4	; block 4 START_ADDR
  4710  0B44  0000031A           	ddw	__ccov93_end_blk4	; block 4 END_ADDR
  4711  0B48  000002F4           	ddw	_watch_dog_incrementing_timer	; block 0 START_ADDR
  4712  0B4C  00000302           	ddw	__ccov90_end_blk0	; block 0 END_ADDR
  4713                           
  4714                           ; Function: watch_dog_incrementing_timer, coverage: 14,13,12,8,4,0
  4715  0B50  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4716  0B54  00000071           	ddw	__ccovbit14_11/(0+8)	; CC_ADDR
  4717  0B58  00000001           	ddw	1	; NUM_POINTS
  4718  0B5C  00000002           	ddw	__ccovbit14_11& (0+7)	; OFFSET
  4719  0B60  00000000           	ddw	0	; Reserved
  4720  0B64  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4721  0B68  00000006           	ddw	6	; NUM_RANGES
  4722  0B6C  0000034F           	ddw	__ccov101_start_blk14	; block 14 START_ADDR
  4723  0B70  00000354           	ddw	__ccov101_end_blk14	; block 14 END_ADDR
  4724  0B74  0000034A           	ddw	__ccov100_start_blk13	; block 13 START_ADDR
  4725  0B78  0000034F           	ddw	__ccov100_end_blk13	; block 13 END_ADDR
  4726  0B7C  0000033C           	ddw	__ccov99_start_blk12	; block 12 START_ADDR
  4727  0B80  0000034A           	ddw	__ccov99_end_blk12	; block 12 END_ADDR
  4728  0B84  00000324           	ddw	__ccov96_start_blk8	; block 8 START_ADDR
  4729  0B88  00000332           	ddw	__ccov96_end_blk8	; block 8 END_ADDR
  4730  0B8C  0000030C           	ddw	__ccov93_start_blk4	; block 4 START_ADDR
  4731  0B90  0000031A           	ddw	__ccov93_end_blk4	; block 4 END_ADDR
  4732  0B94  000002F4           	ddw	_watch_dog_incrementing_timer	; block 0 START_ADDR
  4733  0B98  00000302           	ddw	__ccov90_end_blk0	; block 0 END_ADDR
  4734                           
  4735                           ; Function: watch_dog_incrementing_timer, coverage: 18,17,16,12,8,4,0
  4736  0B9C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4737  0BA0  00000071           	ddw	__ccovbit18_12/(0+8)	; CC_ADDR
  4738  0BA4  00000001           	ddw	1	; NUM_POINTS
  4739  0BA8  00000001           	ddw	__ccovbit18_12& (0+7)	; OFFSET
  4740  0BAC  00000000           	ddw	0	; Reserved
  4741  0BB0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4742  0BB4  00000007           	ddw	7	; NUM_RANGES
  4743  0BB8  00000367           	ddw	__ccov104_start_blk18	; block 18 START_ADDR
  4744  0BBC  0000036C           	ddw	__ccov104_end_blk18	; block 18 END_ADDR
  4745  0BC0  00000362           	ddw	__ccov103_start_blk17	; block 17 START_ADDR
  4746  0BC4  00000367           	ddw	__ccov103_end_blk17	; block 17 END_ADDR
  4747  0BC8  00000354           	ddw	__ccov102_start_blk16	; block 16 START_ADDR
  4748  0BCC  00000362           	ddw	__ccov102_end_blk16	; block 16 END_ADDR
  4749  0BD0  0000033C           	ddw	__ccov99_start_blk12	; block 12 START_ADDR
  4750  0BD4  0000034A           	ddw	__ccov99_end_blk12	; block 12 END_ADDR
  4751  0BD8  00000324           	ddw	__ccov96_start_blk8	; block 8 START_ADDR
  4752  0BDC  00000332           	ddw	__ccov96_end_blk8	; block 8 END_ADDR
  4753  0BE0  0000030C           	ddw	__ccov93_start_blk4	; block 4 START_ADDR
  4754  0BE4  0000031A           	ddw	__ccov93_end_blk4	; block 4 END_ADDR
  4755  0BE8  000002F4           	ddw	_watch_dog_incrementing_timer	; block 0 START_ADDR
  4756  0BEC  00000302           	ddw	__ccov90_end_blk0	; block 0 END_ADDR
  4757                           
  4758                           ; Function: watch_dog_incrementing_timer, coverage: 22,16,12,8,4,0
  4759  0BF0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4760  0BF4  00000071           	ddw	__ccovbit22_13/(0+8)	; CC_ADDR
  4761  0BF8  00000001           	ddw	1	; NUM_POINTS
  4762  0BFC  00000000           	ddw	__ccovbit22_13& (0+7)	; OFFSET
  4763  0C00  00000000           	ddw	0	; Reserved
  4764  0C04  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4765  0C08  00000006           	ddw	6	; NUM_RANGES
  4766  0C0C  0000036C           	ddw	__ccov105_start_blk22	; block 22 START_ADDR
  4767  0C10  0000036D           	ddw	__ccov105_end_blk22	; block 22 END_ADDR
  4768  0C14  00000354           	ddw	__ccov102_start_blk16	; block 16 START_ADDR
  4769  0C18  00000362           	ddw	__ccov102_end_blk16	; block 16 END_ADDR
  4770  0C1C  0000033C           	ddw	__ccov99_start_blk12	; block 12 START_ADDR
  4771  0C20  0000034A           	ddw	__ccov99_end_blk12	; block 12 END_ADDR
  4772  0C24  00000324           	ddw	__ccov96_start_blk8	; block 8 START_ADDR
  4773  0C28  00000332           	ddw	__ccov96_end_blk8	; block 8 END_ADDR
  4774  0C2C  0000030C           	ddw	__ccov93_start_blk4	; block 4 START_ADDR
  4775  0C30  0000031A           	ddw	__ccov93_end_blk4	; block 4 END_ADDR
  4776  0C34  000002F4           	ddw	_watch_dog_incrementing_timer	; block 0 START_ADDR
  4777  0C38  00000302           	ddw	__ccov90_end_blk0	; block 0 END_ADDR
  4778                           
  4779                           ; Function: watch_dog_incrementing_timer, coverage: 24,0
  4780  0C3C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4781  0C40  00000070           	ddw	__ccovbit24_14/(0+8)	; CC_ADDR
  4782  0C44  00000001           	ddw	1	; NUM_POINTS
  4783  0C48  00000007           	ddw	__ccovbit24_14& (0+7)	; OFFSET
  4784  0C4C  00000000           	ddw	0	; Reserved
  4785  0C50  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4786  0C54  00000002           	ddw	2	; NUM_RANGES
  4787  0C58  0000036D           	ddw	__ccov106_start_blk24	; block 24 START_ADDR
  4788  0C5C  0000036F           	ddw	__end_of_watch_dog_incrementing_timer	; block 24 END_ADDR
  4789  0C60  000002F4           	ddw	_watch_dog_incrementing_timer	; block 0 START_ADDR
  4790  0C64  00000302           	ddw	__ccov90_end_blk0	; block 0 END_ADDR
  4791                           
  4792                           ; Function: enable_external_interrupt, coverage: 1,0
  4793  0C68  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4794  0C6C  00000070           	ddw	__ccovbit1_15/(0+8)	; CC_ADDR
  4795  0C70  00000001           	ddw	1	; NUM_POINTS
  4796  0C74  00000006           	ddw	__ccovbit1_15& (0+7)	; OFFSET
  4797  0C78  00000000           	ddw	0	; Reserved
  4798  0C7C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4799  0C80  00000002           	ddw	2	; NUM_RANGES
  4800  0C84  0000044D           	ddw	__ccov108_start_blk1	; block 1 START_ADDR
  4801  0C88  0000044F           	ddw	__end_of_enable_external_interrupt	; block 1 END_ADDR
  4802  0C8C  0000044C           	ddw	_enable_external_interrupt	; block 0 START_ADDR
  4803  0C90  0000044D           	ddw	__ccov107_end_blk0	; block 0 END_ADDR
  4804                           
  4805                           ; Function: disable_external_interrupt, coverage: 1,0
  4806  0C94  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4807  0C98  00000070           	ddw	__ccovbit1_16/(0+8)	; CC_ADDR
  4808  0C9C  00000001           	ddw	1	; NUM_POINTS
  4809  0CA0  00000005           	ddw	__ccovbit1_16& (0+7)	; OFFSET
  4810  0CA4  00000000           	ddw	0	; Reserved
  4811  0CA8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4812  0CAC  00000002           	ddw	2	; NUM_RANGES
  4813  0CB0  00000450           	ddw	__ccov110_start_blk1	; block 1 START_ADDR
  4814  0CB4  00000452           	ddw	__end_of_disable_external_interrupt	; block 1 END_ADDR
  4815  0CB8  0000044F           	ddw	_disable_external_interrupt	; block 0 START_ADDR
  4816  0CBC  00000450           	ddw	__ccov109_end_blk0	; block 0 END_ADDR
  4817                           
  4818                           ; Function: my_isr, coverage: 1,0
  4819  0CC0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4820  0CC4  00000070           	ddw	__ccovbit1_17/(0+8)	; CC_ADDR
  4821  0CC8  00000001           	ddw	1	; NUM_POINTS
  4822  0CCC  00000004           	ddw	__ccovbit1_17& (0+7)	; OFFSET
  4823  0CD0  00000000           	ddw	0	; Reserved
  4824  0CD4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4825  0CD8  00000002           	ddw	2	; NUM_RANGES
  4826  0CDC  0000000A           	ddw	__ccov114_start_blk1	; block 1 START_ADDR
  4827  0CE0  00000010           	ddw	__ccov114_end_blk1	; block 1 END_ADDR
  4828  0CE4  00000004           	ddw	_my_isr	; block 0 START_ADDR
  4829  0CE8  0000000A           	ddw	__ccov113_end_blk0	; block 0 END_ADDR
  4830                           
  4831                           ; Function: my_isr, coverage: 3,10,1,0
  4832  0CEC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4833  0CF0  00000070           	ddw	__ccovbit3_18/(0+8)	; CC_ADDR
  4834  0CF4  00000001           	ddw	1	; NUM_POINTS
  4835  0CF8  00000003           	ddw	__ccovbit3_18& (0+7)	; OFFSET
  4836  0CFC  00000000           	ddw	0	; Reserved
  4837  0D00  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4838  0D04  00000004           	ddw	4	; NUM_RANGES
  4839  0D08  00000010           	ddw	__ccov115_start_blk3	; block 3 START_ADDR
  4840  0D0C  0000001A           	ddw	__ccov115_end_blk3	; block 3 END_ADDR
  4841  0D10  00000022           	ddw	__ccov119_start_blk10	; block 10 START_ADDR
  4842  0D14  00000035           	ddw	__ccov119_end_blk10	; block 10 END_ADDR
  4843  0D18  0000000A           	ddw	__ccov114_start_blk1	; block 1 START_ADDR
  4844  0D1C  00000010           	ddw	__ccov114_end_blk1	; block 1 END_ADDR
  4845  0D20  00000004           	ddw	_my_isr	; block 0 START_ADDR
  4846  0D24  0000000A           	ddw	__ccov113_end_blk0	; block 0 END_ADDR
  4847                           
  4848                           ; Function: my_isr, coverage: 7,6,5,10,1,0
  4849  0D28  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4850  0D2C  00000070           	ddw	__ccovbit7_19/(0+8)	; CC_ADDR
  4851  0D30  00000001           	ddw	1	; NUM_POINTS
  4852  0D34  00000002           	ddw	__ccovbit7_19& (0+7)	; OFFSET
  4853  0D38  00000000           	ddw	0	; Reserved
  4854  0D3C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4855  0D40  00000006           	ddw	6	; NUM_RANGES
  4856  0D44  0000001D           	ddw	__ccov118_start_blk7	; block 7 START_ADDR
  4857  0D48  00000022           	ddw	__ccov118_end_blk7	; block 7 END_ADDR
  4858  0D4C  0000001B           	ddw	__ccov117_start_blk6	; block 6 START_ADDR
  4859  0D50  0000001D           	ddw	__ccov117_end_blk6	; block 6 END_ADDR
  4860  0D54  0000001A           	ddw	__ccov116_start_blk5	; block 5 START_ADDR
  4861  0D58  0000001B           	ddw	__ccov116_end_blk5	; block 5 END_ADDR
  4862  0D5C  00000022           	ddw	__ccov119_start_blk10	; block 10 START_ADDR
  4863  0D60  00000035           	ddw	__ccov119_end_blk10	; block 10 END_ADDR
  4864  0D64  0000000A           	ddw	__ccov114_start_blk1	; block 1 START_ADDR
  4865  0D68  00000010           	ddw	__ccov114_end_blk1	; block 1 END_ADDR
  4866  0D6C  00000004           	ddw	_my_isr	; block 0 START_ADDR
  4867  0D70  0000000A           	ddw	__ccov113_end_blk0	; block 0 END_ADDR
  4868                           
  4869                           ; Function: my_isr, coverage: 11,10,1,0
  4870  0D74  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4871  0D78  00000070           	ddw	__ccovbit11_20/(0+8)	; CC_ADDR
  4872  0D7C  00000001           	ddw	1	; NUM_POINTS
  4873  0D80  00000001           	ddw	__ccovbit11_20& (0+7)	; OFFSET
  4874  0D84  00000000           	ddw	0	; Reserved
  4875  0D88  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4876  0D8C  00000004           	ddw	4	; NUM_RANGES
  4877  0D90  00000035           	ddw	__ccov120_start_blk11	; block 11 START_ADDR
  4878  0D94  00000038           	ddw	__ccov120_end_blk11	; block 11 END_ADDR
  4879  0D98  00000022           	ddw	__ccov119_start_blk10	; block 10 START_ADDR
  4880  0D9C  00000035           	ddw	__ccov119_end_blk10	; block 10 END_ADDR
  4881  0DA0  0000000A           	ddw	__ccov114_start_blk1	; block 1 START_ADDR
  4882  0DA4  00000010           	ddw	__ccov114_end_blk1	; block 1 END_ADDR
  4883  0DA8  00000004           	ddw	_my_isr	; block 0 START_ADDR
  4884  0DAC  0000000A           	ddw	__ccov113_end_blk0	; block 0 END_ADDR
  4885                           
  4886                           ; Function: my_isr, coverage: 13,12,0
  4887  0DB0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4888  0DB4  00000070           	ddw	__ccovbit13_21/(0+8)	; CC_ADDR
  4889  0DB8  00000001           	ddw	1	; NUM_POINTS
  4890  0DBC  00000000           	ddw	__ccovbit13_21& (0+7)	; OFFSET
  4891  0DC0  00000000           	ddw	0	; Reserved
  4892  0DC4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4893  0DC8  00000003           	ddw	3	; NUM_RANGES
  4894  0DCC  0000003D           	ddw	__ccov122_start_blk13	; block 13 START_ADDR
  4895  0DD0  00000043           	ddw	__ccov122_end_blk13	; block 13 END_ADDR
  4896  0DD4  00000038           	ddw	__ccov121_start_blk12	; block 12 START_ADDR
  4897  0DD8  0000003D           	ddw	__ccov121_end_blk12	; block 12 END_ADDR
  4898  0DDC  00000004           	ddw	_my_isr	; block 0 START_ADDR
  4899  0DE0  0000000A           	ddw	__ccov113_end_blk0	; block 0 END_ADDR
  4900                           
  4901                           ; Function: my_isr, coverage: 15,14,13,12,0
  4902  0DE4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4903  0DE8  00000025           	ddw	__ccovbit15_22/(0+8)	; CC_ADDR
  4904  0DEC  00000001           	ddw	1	; NUM_POINTS
  4905  0DF0  00000000           	ddw	__ccovbit15_22& (0+7)	; OFFSET
  4906  0DF4  00000000           	ddw	0	; Reserved
  4907  0DF8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4908  0DFC  00000005           	ddw	5	; NUM_RANGES
  4909  0E00  00000050           	ddw	__ccov124_start_blk15	; block 15 START_ADDR
  4910  0E04  00000056           	ddw	__ccov124_end_blk15	; block 15 END_ADDR
  4911  0E08  00000043           	ddw	__ccov123_start_blk14	; block 14 START_ADDR
  4912  0E0C  00000050           	ddw	__ccov123_end_blk14	; block 14 END_ADDR
  4913  0E10  0000003D           	ddw	__ccov122_start_blk13	; block 13 START_ADDR
  4914  0E14  00000043           	ddw	__ccov122_end_blk13	; block 13 END_ADDR
  4915  0E18  00000038           	ddw	__ccov121_start_blk12	; block 12 START_ADDR
  4916  0E1C  0000003D           	ddw	__ccov121_end_blk12	; block 12 END_ADDR
  4917  0E20  00000004           	ddw	_my_isr	; block 0 START_ADDR
  4918  0E24  0000000A           	ddw	__ccov113_end_blk0	; block 0 END_ADDR
  4919                           
  4920                           ; Function: my_isr, coverage: 17,16,14,13,12,0
  4921  0E28  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4922  0E2C  00000024           	ddw	__ccovbit17_23/(0+8)	; CC_ADDR
  4923  0E30  00000001           	ddw	1	; NUM_POINTS
  4924  0E34  00000007           	ddw	__ccovbit17_23& (0+7)	; OFFSET
  4925  0E38  00000000           	ddw	0	; Reserved
  4926  0E3C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4927  0E40  00000006           	ddw	6	; NUM_RANGES
  4928  0E44  00000064           	ddw	__ccov126_start_blk17	; block 17 START_ADDR
  4929  0E48  0000006A           	ddw	__ccov126_end_blk17	; block 17 END_ADDR
  4930  0E4C  00000056           	ddw	__ccov125_start_blk16	; block 16 START_ADDR
  4931  0E50  00000064           	ddw	__ccov125_end_blk16	; block 16 END_ADDR
  4932  0E54  00000043           	ddw	__ccov123_start_blk14	; block 14 START_ADDR
  4933  0E58  00000050           	ddw	__ccov123_end_blk14	; block 14 END_ADDR
  4934  0E5C  0000003D           	ddw	__ccov122_start_blk13	; block 13 START_ADDR
  4935  0E60  00000043           	ddw	__ccov122_end_blk13	; block 13 END_ADDR
  4936  0E64  00000038           	ddw	__ccov121_start_blk12	; block 12 START_ADDR
  4937  0E68  0000003D           	ddw	__ccov121_end_blk12	; block 12 END_ADDR
  4938  0E6C  00000004           	ddw	_my_isr	; block 0 START_ADDR
  4939  0E70  0000000A           	ddw	__ccov113_end_blk0	; block 0 END_ADDR
  4940                           
  4941                           ; Function: my_isr, coverage: 19,16,14,13,12,0
  4942  0E74  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4943  0E78  00000024           	ddw	__ccovbit19_24/(0+8)	; CC_ADDR
  4944  0E7C  00000001           	ddw	1	; NUM_POINTS
  4945  0E80  00000006           	ddw	__ccovbit19_24& (0+7)	; OFFSET
  4946  0E84  00000000           	ddw	0	; Reserved
  4947  0E88  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4948  0E8C  00000006           	ddw	6	; NUM_RANGES
  4949  0E90  0000006A           	ddw	__ccov127_start_blk19	; block 19 START_ADDR
  4950  0E94  0000006D           	ddw	__ccov127_end_blk19	; block 19 END_ADDR
  4951  0E98  00000056           	ddw	__ccov125_start_blk16	; block 16 START_ADDR
  4952  0E9C  00000064           	ddw	__ccov125_end_blk16	; block 16 END_ADDR
  4953  0EA0  00000043           	ddw	__ccov123_start_blk14	; block 14 START_ADDR
  4954  0EA4  00000050           	ddw	__ccov123_end_blk14	; block 14 END_ADDR
  4955  0EA8  0000003D           	ddw	__ccov122_start_blk13	; block 13 START_ADDR
  4956  0EAC  00000043           	ddw	__ccov122_end_blk13	; block 13 END_ADDR
  4957  0EB0  00000038           	ddw	__ccov121_start_blk12	; block 12 START_ADDR
  4958  0EB4  0000003D           	ddw	__ccov121_end_blk12	; block 12 END_ADDR
  4959  0EB8  00000004           	ddw	_my_isr	; block 0 START_ADDR
  4960  0EBC  0000000A           	ddw	__ccov113_end_blk0	; block 0 END_ADDR
  4961                           
  4962                           ; Function: my_isr, coverage: 22,12,0
  4963  0EC0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4964  0EC4  00000024           	ddw	__ccovbit22_25/(0+8)	; CC_ADDR
  4965  0EC8  00000001           	ddw	1	; NUM_POINTS
  4966  0ECC  00000005           	ddw	__ccovbit22_25& (0+7)	; OFFSET
  4967  0ED0  00000000           	ddw	0	; Reserved
  4968  0ED4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4969  0ED8  00000003           	ddw	3	; NUM_RANGES
  4970  0EDC  0000006D           	ddw	__ccov128_start_blk22	; block 22 START_ADDR
  4971  0EE0  00000071           	ddw	__end_of_my_isr	; block 22 END_ADDR
  4972  0EE4  00000038           	ddw	__ccov121_start_blk12	; block 12 START_ADDR
  4973  0EE8  0000003D           	ddw	__ccov121_end_blk12	; block 12 END_ADDR
  4974  0EEC  00000004           	ddw	_my_isr	; block 0 START_ADDR
  4975  0EF0  0000000A           	ddw	__ccov113_end_blk0	; block 0 END_ADDR
  4976                           
  4977                           ; Function: checkState1, coverage: 3,2,80,0
  4978  0EF4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4979  0EF8  00000024           	ddw	__ccovbit3_26/(0+8)	; CC_ADDR
  4980  0EFC  00000001           	ddw	1	; NUM_POINTS
  4981  0F00  00000004           	ddw	__ccovbit3_26& (0+7)	; OFFSET
  4982  0F04  00000000           	ddw	0	; Reserved
  4983  0F08  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4984  0F0C  00000004           	ddw	4	; NUM_RANGES
  4985  0F10  00000092           	ddw	__ccov131_start_blk3	; block 3 START_ADDR
  4986  0F14  00000098           	ddw	__ccov131_end_blk3	; block 3 END_ADDR
  4987  0F18  0000008C           	ddw	__ccov130_start_blk2	; block 2 START_ADDR
  4988  0F1C  00000092           	ddw	__ccov130_end_blk2	; block 2 END_ADDR
  4989  0F20  000001CC           	ddw	__ccov170_start_blk80	; block 80 START_ADDR
  4990  0F24  000001F8           	ddw	__ccov170_end_blk80	; block 80 END_ADDR
  4991  0F28  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  4992  0F2C  0000008C           	ddw	__ccov129_end_blk0	; block 0 END_ADDR
  4993                           
  4994                           ; Function: checkState1, coverage: 4,80,0
  4995  0F30  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4996  0F34  00000024           	ddw	__ccovbit4_27/(0+8)	; CC_ADDR
  4997  0F38  00000001           	ddw	1	; NUM_POINTS
  4998  0F3C  00000003           	ddw	__ccovbit4_27& (0+7)	; OFFSET
  4999  0F40  00000000           	ddw	0	; Reserved
  5000  0F44  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  5001  0F48  00000003           	ddw	3	; NUM_RANGES
  5002  0F4C  00000098           	ddw	__ccov132_start_blk4	; block 4 START_ADDR
  5003  0F50  0000009F           	ddw	__ccov132_end_blk4	; block 4 END_ADDR
  5004  0F54  000001CC           	ddw	__ccov170_start_blk80	; block 80 START_ADDR
  5005  0F58  000001F8           	ddw	__ccov170_end_blk80	; block 80 END_ADDR
  5006  0F5C  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  5007  0F60  0000008C           	ddw	__ccov129_end_blk0	; block 0 END_ADDR
  5008                           
  5009                           ; Function: checkState1, coverage: 7,6,80,0
  5010  0F64  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  5011  0F68  00000024           	ddw	__ccovbit7_28/(0+8)	; CC_ADDR
  5012  0F6C  00000001           	ddw	1	; NUM_POINTS
  5013  0F70  00000002           	ddw	__ccovbit7_28& (0+7)	; OFFSET
  5014  0F74  00000000           	ddw	0	; Reserved
  5015  0F78  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  5016  0F7C  00000004           	ddw	4	; NUM_RANGES
  5017  0F80  000000A7           	ddw	__ccov134_start_blk7	; block 7 START_ADDR
  5018  0F84  000000AB           	ddw	__ccov134_end_blk7	; block 7 END_ADDR
  5019  0F88  0000009F           	ddw	__ccov133_start_blk6	; block 6 START_ADDR
  5020  0F8C  000000A7           	ddw	__ccov133_end_blk6	; block 6 END_ADDR
  5021  0F90  000001CC           	ddw	__ccov170_start_blk80	; block 80 START_ADDR
  5022  0F94  000001F8           	ddw	__ccov170_end_blk80	; block 80 END_ADDR
  5023  0F98  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  5024  0F9C  0000008C           	ddw	__ccov129_end_blk0	; block 0 END_ADDR
  5025                           
  5026                           ; Function: checkState1, coverage: 8,80,0
  5027  0FA0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  5028  0FA4  00000024           	ddw	__ccovbit8_29/(0+8)	; CC_ADDR
  5029  0FA8  00000001           	ddw	1	; NUM_POINTS
  5030  0FAC  00000001           	ddw	__ccovbit8_29& (0+7)	; OFFSET
  5031  0FB0  00000000           	ddw	0	; Reserved
  5032  0FB4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  5033  0FB8  00000003           	ddw	3	; NUM_RANGES
  5034  0FBC  000000AB           	ddw	__ccov135_start_blk8	; block 8 START_ADDR
  5035  0FC0  000000B1           	ddw	__ccov135_end_blk8	; block 8 END_ADDR
  5036  0FC4  000001CC           	ddw	__ccov170_start_blk80	; block 80 START_ADDR
  5037  0FC8  000001F8           	ddw	__ccov170_end_blk80	; block 80 END_ADDR
  5038  0FCC  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  5039  0FD0  0000008C           	ddw	__ccov129_end_blk0	; block 0 END_ADDR
  5040                           
  5041                           ; Function: checkState1, coverage: 9,80,0
  5042  0FD4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  5043  0FD8  00000024           	ddw	__ccovbit9_30/(0+8)	; CC_ADDR
  5044  0FDC  00000001           	ddw	1	; NUM_POINTS
  5045  0FE0  00000000           	ddw	__ccovbit9_30& (0+7)	; OFFSET
  5046  0FE4  00000000           	ddw	0	; Reserved
  5047  0FE8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  5048  0FEC  00000003           	ddw	3	; NUM_RANGES
  5049  0FF0  000000B1           	ddw	__ccov136_start_blk9	; block 9 START_ADDR
  5050  0FF4  000000B8           	ddw	__ccov136_end_blk9	; block 9 END_ADDR
  5051  0FF8  000001CC           	ddw	__ccov170_start_blk80	; block 80 START_ADDR
  5052  0FFC  000001F8           	ddw	__ccov170_end_blk80	; block 80 END_ADDR
  5053  1000  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  5054  1004  0000008C           	ddw	__ccov129_end_blk0	; block 0 END_ADDR
  5055                           
  5056                           ; Function: checkState1, coverage: 11,80,0
  5057  1008  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  5058  100C  00000023           	ddw	__ccovbit11_31/(0+8)	; CC_ADDR
  5059  1010  00000001           	ddw	1	; NUM_POINTS
  5060  1014  00000007           	ddw	__ccovbit11_31& (0+7)	; OFFSET
  5061  1018  00000000           	ddw	0	; Reserved
  5062  101C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  5063  1020  00000003           	ddw	3	; NUM_RANGES
  5064  1024  000000B8           	ddw	__ccov137_start_blk11	; block 11 START_ADDR
  5065  1028  000000C1           	ddw	__ccov137_end_blk11	; block 11 END_ADDR
  5066  102C  000001CC           	ddw	__ccov170_start_blk80	; block 80 START_ADDR
  5067  1030  000001F8           	ddw	__ccov170_end_blk80	; block 80 END_ADDR
  5068  1034  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  5069  1038  0000008C           	ddw	__ccov129_end_blk0	; block 0 END_ADDR
  5070                           
  5071                           ; Function: checkState1, coverage: 12,80,0
  5072  103C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  5073  1040  00000023           	ddw	__ccovbit12_32/(0+8)	; CC_ADDR
  5074  1044  00000001           	ddw	1	; NUM_POINTS
  5075  1048  00000006           	ddw	__ccovbit12_32& (0+7)	; OFFSET
  5076  104C  00000000           	ddw	0	; Reserved
  5077  1050  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  5078  1054  00000003           	ddw	3	; NUM_RANGES
  5079  1058  000000C1           	ddw	__ccov138_start_blk12	; block 12 START_ADDR
  5080  105C  000000C8           	ddw	__ccov138_end_blk12	; block 12 END_ADDR
  5081  1060  000001CC           	ddw	__ccov170_start_blk80	; block 80 START_ADDR
  5082  1064  000001F8           	ddw	__ccov170_end_blk80	; block 80 END_ADDR
  5083  1068  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  5084  106C  0000008C           	ddw	__ccov129_end_blk0	; block 0 END_ADDR
  5085                           
  5086                           ; Function: checkState1, coverage: 15,14,11,80,0
  5087  1070  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  5088  1074  00000023           	ddw	__ccovbit15_33/(0+8)	; CC_ADDR
  5089  1078  00000001           	ddw	1	; NUM_POINTS
  5090  107C  00000005           	ddw	__ccovbit15_33& (0+7)	; OFFSET
  5091  1080  00000000           	ddw	0	; Reserved
  5092  1084  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  5093  1088  00000005           	ddw	5	; NUM_RANGES
  5094  108C  000000CC           	ddw	__ccov140_start_blk15	; block 15 START_ADDR
  5095  1090  000000D2           	ddw	__ccov140_end_blk15	; block 15 END_ADDR
  5096  1094  000000C8           	ddw	__ccov139_start_blk14	; block 14 START_ADDR
  5097  1098  000000CC           	ddw	__ccov139_end_blk14	; block 14 END_ADDR
  5098  109C  000000B8           	ddw	__ccov137_start_blk11	; block 11 START_ADDR
  5099  10A0  000000C1           	ddw	__ccov137_end_blk11	; block 11 END_ADDR
  5100  10A4  000001CC           	ddw	__ccov170_start_blk80	; block 80 START_ADDR
  5101  10A8  000001F8           	ddw	__ccov170_end_blk80	; block 80 END_ADDR
  5102  10AC  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  5103  10B0  0000008C           	ddw	__ccov129_end_blk0	; block 0 END_ADDR
  5104                           
  5105                           ; Function: checkState1, coverage: 20,80,0
  5106  10B4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  5107  10B8  00000023           	ddw	__ccovbit20_34/(0+8)	; CC_ADDR
  5108  10BC  00000001           	ddw	1	; NUM_POINTS
  5109  10C0  00000004           	ddw	__ccovbit20_34& (0+7)	; OFFSET
  5110  10C4  00000000           	ddw	0	; Reserved
  5111  10C8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  5112  10CC  00000003           	ddw	3	; NUM_RANGES
  5113  10D0  000000D2           	ddw	__ccov141_start_blk20	; block 20 START_ADDR
  5114  10D4  000000E1           	ddw	__ccov141_end_blk20	; block 20 END_ADDR
  5115  10D8  000001CC           	ddw	__ccov170_start_blk80	; block 80 START_ADDR
  5116  10DC  000001F8           	ddw	__ccov170_end_blk80	; block 80 END_ADDR
  5117  10E0  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  5118  10E4  0000008C           	ddw	__ccov129_end_blk0	; block 0 END_ADDR
  5119                           
  5120                           ; Function: checkState1, coverage: 23,20,80,0
  5121  10E8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  5122  10EC  00000023           	ddw	__ccovbit23_35/(0+8)	; CC_ADDR
  5123  10F0  00000001           	ddw	1	; NUM_POINTS
  5124  10F4  00000003           	ddw	__ccovbit23_35& (0+7)	; OFFSET
  5125  10F8  00000000           	ddw	0	; Reserved
  5126  10FC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  5127  1100  00000004           	ddw	4	; NUM_RANGES
  5128  1104  000000E1           	ddw	__ccov142_start_blk23	; block 23 START_ADDR
  5129  1108  000000E8           	ddw	__ccov142_end_blk23	; block 23 END_ADDR
  5130  110C  000000D2           	ddw	__ccov141_start_blk20	; block 20 START_ADDR
  5131  1110  000000E1           	ddw	__ccov141_end_blk20	; block 20 END_ADDR
  5132  1114  000001CC           	ddw	__ccov170_start_blk80	; block 80 START_ADDR
  5133  1118  000001F8           	ddw	__ccov170_end_blk80	; block 80 END_ADDR
  5134  111C  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  5135  1120  0000008C           	ddw	__ccov129_end_blk0	; block 0 END_ADDR
  5136                           
  5137                           ; Function: checkState1, coverage: 29,35,28,27,26,80,0
  5138  1124  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  5139  1128  00000023           	ddw	__ccovbit29_36/(0+8)	; CC_ADDR
  5140  112C  00000001           	ddw	1	; NUM_POINTS
  5141  1130  00000002           	ddw	__ccovbit29_36& (0+7)	; OFFSET
  5142  1134  00000000           	ddw	0	; Reserved
  5143  1138  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  5144  113C  00000007           	ddw	7	; NUM_RANGES
  5145  1140  000000F7           	ddw	__ccov146_start_blk29	; block 29 START_ADDR
  5146  1144  000000FB           	ddw	__ccov146_end_blk29	; block 29 END_ADDR
  5147  1148  000000FF           	ddw	__ccov148_start_blk35	; block 35 START_ADDR
  5148  114C  00000112           	ddw	__ccov148_end_blk35	; block 35 END_ADDR
  5149  1150  000000F2           	ddw	__ccov145_start_blk28	; block 28 START_ADDR
  5150  1154  000000F7           	ddw	__ccov145_end_blk28	; block 28 END_ADDR
  5151  1158  000000EC           	ddw	__ccov144_start_blk27	; block 27 START_ADDR
  5152  115C  000000F2           	ddw	__ccov144_end_blk27	; block 27 END_ADDR
  5153  1160  000000E8           	ddw	__ccov143_start_blk26	; block 26 START_ADDR
  5154  1164  000000EC           	ddw	__ccov143_end_blk26	; block 26 END_ADDR
  5155  1168  000001CC           	ddw	__ccov170_start_blk80	; block 80 START_ADDR
  5156  116C  000001F8           	ddw	__ccov170_end_blk80	; block 80 END_ADDR
  5157  1170  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  5158  1174  0000008C           	ddw	__ccov129_end_blk0	; block 0 END_ADDR
  5159                           
  5160                           ; Function: checkState1, coverage: 30,35,28,27,26,80,0
  5161  1178  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  5162  117C  00000023           	ddw	__ccovbit30_37/(0+8)	; CC_ADDR
  5163  1180  00000001           	ddw	1	; NUM_POINTS
  5164  1184  00000001           	ddw	__ccovbit30_37& (0+7)	; OFFSET
  5165  1188  00000000           	ddw	0	; Reserved
  5166  118C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  5167  1190  00000007           	ddw	7	; NUM_RANGES
  5168  1194  000000FB           	ddw	__ccov147_start_blk30	; block 30 START_ADDR
  5169  1198  000000FF           	ddw	__ccov147_end_blk30	; block 30 END_ADDR
  5170  119C  000000FF           	ddw	__ccov148_start_blk35	; block 35 START_ADDR
  5171  11A0  00000112           	ddw	__ccov148_end_blk35	; block 35 END_ADDR
  5172  11A4  000000F2           	ddw	__ccov145_start_blk28	; block 28 START_ADDR
  5173  11A8  000000F7           	ddw	__ccov145_end_blk28	; block 28 END_ADDR
  5174  11AC  000000EC           	ddw	__ccov144_start_blk27	; block 27 START_ADDR
  5175  11B0  000000F2           	ddw	__ccov144_end_blk27	; block 27 END_ADDR
  5176  11B4  000000E8           	ddw	__ccov143_start_blk26	; block 26 START_ADDR
  5177  11B8  000000EC           	ddw	__ccov143_end_blk26	; block 26 END_ADDR
  5178  11BC  000001CC           	ddw	__ccov170_start_blk80	; block 80 START_ADDR
  5179  11C0  000001F8           	ddw	__ccov170_end_blk80	; block 80 END_ADDR
  5180  11C4  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  5181  11C8  0000008C           	ddw	__ccov129_end_blk0	; block 0 END_ADDR
  5182                           
  5183                           ; Function: checkState1, coverage: 37,35,28,27,26,80,0
  5184  11CC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  5185  11D0  00000023           	ddw	__ccovbit37_38/(0+8)	; CC_ADDR
  5186  11D4  00000001           	ddw	1	; NUM_POINTS
  5187  11D8  00000000           	ddw	__ccovbit37_38& (0+7)	; OFFSET
  5188  11DC  00000000           	ddw	0	; Reserved
  5189  11E0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  5190  11E4  00000007           	ddw	7	; NUM_RANGES
  5191  11E8  00000112           	ddw	__ccov149_start_blk37	; block 37 START_ADDR
  5192  11EC  0000011D           	ddw	__ccov149_end_blk37	; block 37 END_ADDR
  5193  11F0  000000FF           	ddw	__ccov148_start_blk35	; block 35 START_ADDR
  5194  11F4  00000112           	ddw	__ccov148_end_blk35	; block 35 END_ADDR
  5195  11F8  000000F2           	ddw	__ccov145_start_blk28	; block 28 START_ADDR
  5196  11FC  000000F7           	ddw	__ccov145_end_blk28	; block 28 END_ADDR
  5197  1200  000000EC           	ddw	__ccov144_start_blk27	; block 27 START_ADDR
  5198  1204  000000F2           	ddw	__ccov144_end_blk27	; block 27 END_ADDR
  5199  1208  000000E8           	ddw	__ccov143_start_blk26	; block 26 START_ADDR
  5200  120C  000000EC           	ddw	__ccov143_end_blk26	; block 26 END_ADDR
  5201  1210  000001CC           	ddw	__ccov170_start_blk80	; block 80 START_ADDR
  5202  1214  000001F8           	ddw	__ccov170_end_blk80	; block 80 END_ADDR
  5203  1218  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  5204  121C  0000008C           	ddw	__ccov129_end_blk0	; block 0 END_ADDR
  5205                           
  5206                           ; Function: checkState1, coverage: 40,39,27,26,80,0
  5207  1220  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  5208  1224  00000022           	ddw	__ccovbit40_39/(0+8)	; CC_ADDR
  5209  1228  00000001           	ddw	1	; NUM_POINTS
  5210  122C  00000007           	ddw	__ccovbit40_39& (0+7)	; OFFSET
  5211  1230  00000000           	ddw	0	; Reserved
  5212  1234  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  5213  1238  00000006           	ddw	6	; NUM_RANGES
  5214  123C  00000125           	ddw	__ccov151_start_blk40	; block 40 START_ADDR
  5215  1240  0000012A           	ddw	__ccov151_end_blk40	; block 40 END_ADDR
  5216  1244  0000011D           	ddw	__ccov150_start_blk39	; block 39 START_ADDR
  5217  1248  00000125           	ddw	__ccov150_end_blk39	; block 39 END_ADDR
  5218  124C  000000EC           	ddw	__ccov144_start_blk27	; block 27 START_ADDR
  5219  1250  000000F2           	ddw	__ccov144_end_blk27	; block 27 END_ADDR
  5220  1254  000000E8           	ddw	__ccov143_start_blk26	; block 26 START_ADDR
  5221  1258  000000EC           	ddw	__ccov143_end_blk26	; block 26 END_ADDR
  5222  125C  000001CC           	ddw	__ccov170_start_blk80	; block 80 START_ADDR
  5223  1260  000001F8           	ddw	__ccov170_end_blk80	; block 80 END_ADDR
  5224  1264  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  5225  1268  0000008C           	ddw	__ccov129_end_blk0	; block 0 END_ADDR
  5226                           
  5227                           ; Function: checkState1, coverage: 45,44,80,0
  5228  126C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  5229  1270  00000022           	ddw	__ccovbit45_40/(0+8)	; CC_ADDR
  5230  1274  00000001           	ddw	1	; NUM_POINTS
  5231  1278  00000006           	ddw	__ccovbit45_40& (0+7)	; OFFSET
  5232  127C  00000000           	ddw	0	; Reserved
  5233  1280  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  5234  1284  00000004           	ddw	4	; NUM_RANGES
  5235  1288  00000137           	ddw	__ccov153_start_blk45	; block 45 START_ADDR
  5236  128C  0000013E           	ddw	__ccov153_end_blk45	; block 45 END_ADDR
  5237  1290  0000012A           	ddw	__ccov152_start_blk44	; block 44 START_ADDR
  5238  1294  00000137           	ddw	__ccov152_end_blk44	; block 44 END_ADDR
  5239  1298  000001CC           	ddw	__ccov170_start_blk80	; block 80 START_ADDR
  5240  129C  000001F8           	ddw	__ccov170_end_blk80	; block 80 END_ADDR
  5241  12A0  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  5242  12A4  0000008C           	ddw	__ccov129_end_blk0	; block 0 END_ADDR
  5243                           
  5244                           ; Function: checkState1, coverage: 47,44,80,0
  5245  12A8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  5246  12AC  00000022           	ddw	__ccovbit47_41/(0+8)	; CC_ADDR
  5247  12B0  00000001           	ddw	1	; NUM_POINTS
  5248  12B4  00000005           	ddw	__ccovbit47_41& (0+7)	; OFFSET
  5249  12B8  00000000           	ddw	0	; Reserved
  5250  12BC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  5251  12C0  00000004           	ddw	4	; NUM_RANGES
  5252  12C4  0000013E           	ddw	__ccov154_start_blk47	; block 47 START_ADDR
  5253  12C8  00000145           	ddw	__ccov154_end_blk47	; block 47 END_ADDR
  5254  12CC  0000012A           	ddw	__ccov152_start_blk44	; block 44 START_ADDR
  5255  12D0  00000137           	ddw	__ccov152_end_blk44	; block 44 END_ADDR
  5256  12D4  000001CC           	ddw	__ccov170_start_blk80	; block 80 START_ADDR
  5257  12D8  000001F8           	ddw	__ccov170_end_blk80	; block 80 END_ADDR
  5258  12DC  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  5259  12E0  0000008C           	ddw	__ccov129_end_blk0	; block 0 END_ADDR
  5260                           
  5261                           ; Function: checkState1, coverage: 51,50,49,80,0
  5262  12E4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  5263  12E8  00000022           	ddw	__ccovbit51_42/(0+8)	; CC_ADDR
  5264  12EC  00000001           	ddw	1	; NUM_POINTS
  5265  12F0  00000004           	ddw	__ccovbit51_42& (0+7)	; OFFSET
  5266  12F4  00000000           	ddw	0	; Reserved
  5267  12F8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  5268  12FC  00000005           	ddw	5	; NUM_RANGES
  5269  1300  00000152           	ddw	__ccov157_start_blk51	; block 51 START_ADDR
  5270  1304  00000157           	ddw	__ccov157_end_blk51	; block 51 END_ADDR
  5271  1308  00000149           	ddw	__ccov156_start_blk50	; block 50 START_ADDR
  5272  130C  00000152           	ddw	__ccov156_end_blk50	; block 50 END_ADDR
  5273  1310  00000145           	ddw	__ccov155_start_blk49	; block 49 START_ADDR
  5274  1314  00000149           	ddw	__ccov155_end_blk49	; block 49 END_ADDR
  5275  1318  000001CC           	ddw	__ccov170_start_blk80	; block 80 START_ADDR
  5276  131C  000001F8           	ddw	__ccov170_end_blk80	; block 80 END_ADDR
  5277  1320  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  5278  1324  0000008C           	ddw	__ccov129_end_blk0	; block 0 END_ADDR
  5279                           
  5280                           ; Function: checkState1, coverage: 63,62,61,55,54,80,0
  5281  1328  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  5282  132C  00000022           	ddw	__ccovbit63_43/(0+8)	; CC_ADDR
  5283  1330  00000001           	ddw	1	; NUM_POINTS
  5284  1334  00000003           	ddw	__ccovbit63_43& (0+7)	; OFFSET
  5285  1338  00000000           	ddw	0	; Reserved
  5286  133C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  5287  1340  00000007           	ddw	7	; NUM_RANGES
  5288  1344  00000167           	ddw	__ccov162_start_blk63	; block 63 START_ADDR
  5289  1348  00000176           	ddw	__ccov162_end_blk63	; block 63 END_ADDR
  5290  134C  00000165           	ddw	__ccov161_start_blk62	; block 62 START_ADDR
  5291  1350  00000167           	ddw	__ccov161_end_blk62	; block 62 END_ADDR
  5292  1354  00000162           	ddw	__ccov160_start_blk61	; block 61 START_ADDR
  5293  1358  00000165           	ddw	__ccov160_end_blk61	; block 61 END_ADDR
  5294  135C  0000015E           	ddw	__ccov159_start_blk55	; block 55 START_ADDR
  5295  1360  00000162           	ddw	__ccov159_end_blk55	; block 55 END_ADDR
  5296  1364  00000157           	ddw	__ccov158_start_blk54	; block 54 START_ADDR
  5297  1368  0000015E           	ddw	__ccov158_end_blk54	; block 54 END_ADDR
  5298  136C  000001CC           	ddw	__ccov170_start_blk80	; block 80 START_ADDR
  5299  1370  000001F8           	ddw	__ccov170_end_blk80	; block 80 END_ADDR
  5300  1374  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  5301  1378  0000008C           	ddw	__ccov129_end_blk0	; block 0 END_ADDR
  5302                           
  5303                           ; Function: checkState1, coverage: 68,67,66,65,64,63,62,61,55,54,80,0
  5304  137C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  5305  1380  00000022           	ddw	__ccovbit68_44/(0+8)	; CC_ADDR
  5306  1384  00000001           	ddw	1	; NUM_POINTS
  5307  1388  00000002           	ddw	__ccovbit68_44& (0+7)	; OFFSET
  5308  138C  00000000           	ddw	0	; Reserved
  5309  1390  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  5310  1394  0000000C           	ddw	12	; NUM_RANGES
  5311  1398  000001BE           	ddw	__ccov167_start_blk68	; block 68 START_ADDR
  5312  139C  000001C3           	ddw	__ccov167_end_blk68	; block 68 END_ADDR
  5313  13A0  000001B5           	ddw	__ccov166_start_blk67	; block 67 START_ADDR
  5314  13A4  000001BE           	ddw	__ccov166_end_blk67	; block 67 END_ADDR
  5315  13A8  000001B3           	ddw	__ccov165_start_blk66	; block 66 START_ADDR
  5316  13AC  000001B5           	ddw	__ccov165_end_blk66	; block 66 END_ADDR
  5317  13B0  000001A6           	ddw	__ccov164_start_blk65	; block 65 START_ADDR
  5318  13B4  000001B3           	ddw	__ccov164_end_blk65	; block 65 END_ADDR
  5319  13B8  00000176           	ddw	__ccov163_start_blk64	; block 64 START_ADDR
  5320  13BC  000001A6           	ddw	__ccov163_end_blk64	; block 64 END_ADDR
  5321  13C0  00000167           	ddw	__ccov162_start_blk63	; block 63 START_ADDR
  5322  13C4  00000176           	ddw	__ccov162_end_blk63	; block 63 END_ADDR
  5323  13C8  00000165           	ddw	__ccov161_start_blk62	; block 62 START_ADDR
  5324  13CC  00000167           	ddw	__ccov161_end_blk62	; block 62 END_ADDR
  5325  13D0  00000162           	ddw	__ccov160_start_blk61	; block 61 START_ADDR
  5326  13D4  00000165           	ddw	__ccov160_end_blk61	; block 61 END_ADDR
  5327  13D8  0000015E           	ddw	__ccov159_start_blk55	; block 55 START_ADDR
  5328  13DC  00000162           	ddw	__ccov159_end_blk55	; block 55 END_ADDR
  5329  13E0  00000157           	ddw	__ccov158_start_blk54	; block 54 START_ADDR
  5330  13E4  0000015E           	ddw	__ccov158_end_blk54	; block 54 END_ADDR
  5331  13E8  000001CC           	ddw	__ccov170_start_blk80	; block 80 START_ADDR
  5332  13EC  000001F8           	ddw	__ccov170_end_blk80	; block 80 END_ADDR
  5333  13F0  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  5334  13F4  0000008C           	ddw	__ccov129_end_blk0	; block 0 END_ADDR
  5335                           
  5336                           ; Function: checkState1, coverage: 69,65,64,63,62,61,55,54,80,0
  5337  13F8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  5338  13FC  00000022           	ddw	__ccovbit69_45/(0+8)	; CC_ADDR
  5339  1400  00000001           	ddw	1	; NUM_POINTS
  5340  1404  00000001           	ddw	__ccovbit69_45& (0+7)	; OFFSET
  5341  1408  00000000           	ddw	0	; Reserved
  5342  140C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  5343  1410  0000000A           	ddw	10	; NUM_RANGES
  5344  1414  000001C3           	ddw	__ccov168_start_blk69	; block 69 START_ADDR
  5345  1418  000001C7           	ddw	__ccov168_end_blk69	; block 69 END_ADDR
  5346  141C  000001A6           	ddw	__ccov164_start_blk65	; block 65 START_ADDR
  5347  1420  000001B3           	ddw	__ccov164_end_blk65	; block 65 END_ADDR
  5348  1424  00000176           	ddw	__ccov163_start_blk64	; block 64 START_ADDR
  5349  1428  000001A6           	ddw	__ccov163_end_blk64	; block 64 END_ADDR
  5350  142C  00000167           	ddw	__ccov162_start_blk63	; block 63 START_ADDR
  5351  1430  00000176           	ddw	__ccov162_end_blk63	; block 63 END_ADDR
  5352  1434  00000165           	ddw	__ccov161_start_blk62	; block 62 START_ADDR
  5353  1438  00000167           	ddw	__ccov161_end_blk62	; block 62 END_ADDR
  5354  143C  00000162           	ddw	__ccov160_start_blk61	; block 61 START_ADDR
  5355  1440  00000165           	ddw	__ccov160_end_blk61	; block 61 END_ADDR
  5356  1444  0000015E           	ddw	__ccov159_start_blk55	; block 55 START_ADDR
  5357  1448  00000162           	ddw	__ccov159_end_blk55	; block 55 END_ADDR
  5358  144C  00000157           	ddw	__ccov158_start_blk54	; block 54 START_ADDR
  5359  1450  0000015E           	ddw	__ccov158_end_blk54	; block 54 END_ADDR
  5360  1454  000001CC           	ddw	__ccov170_start_blk80	; block 80 START_ADDR
  5361  1458  000001F8           	ddw	__ccov170_end_blk80	; block 80 END_ADDR
  5362  145C  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  5363  1460  0000008C           	ddw	__ccov129_end_blk0	; block 0 END_ADDR
  5364                           
  5365                           ; Function: checkState1, coverage: 71,65,64,63,62,61,55,54,80,0
  5366  1464  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  5367  1468  00000022           	ddw	__ccovbit71_46/(0+8)	; CC_ADDR
  5368  146C  00000001           	ddw	1	; NUM_POINTS
  5369  1470  00000000           	ddw	__ccovbit71_46& (0+7)	; OFFSET
  5370  1474  00000000           	ddw	0	; Reserved
  5371  1478  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  5372  147C  0000000A           	ddw	10	; NUM_RANGES
  5373  1480  000001C7           	ddw	__ccov169_start_blk71	; block 71 START_ADDR
  5374  1484  000001CC           	ddw	__ccov169_end_blk71	; block 71 END_ADDR
  5375  1488  000001A6           	ddw	__ccov164_start_blk65	; block 65 START_ADDR
  5376  148C  000001B3           	ddw	__ccov164_end_blk65	; block 65 END_ADDR
  5377  1490  00000176           	ddw	__ccov163_start_blk64	; block 64 START_ADDR
  5378  1494  000001A6           	ddw	__ccov163_end_blk64	; block 64 END_ADDR
  5379  1498  00000167           	ddw	__ccov162_start_blk63	; block 63 START_ADDR
  5380  149C  00000176           	ddw	__ccov162_end_blk63	; block 63 END_ADDR
  5381  14A0  00000165           	ddw	__ccov161_start_blk62	; block 62 START_ADDR
  5382  14A4  00000167           	ddw	__ccov161_end_blk62	; block 62 END_ADDR
  5383  14A8  00000162           	ddw	__ccov160_start_blk61	; block 61 START_ADDR
  5384  14AC  00000165           	ddw	__ccov160_end_blk61	; block 61 END_ADDR
  5385  14B0  0000015E           	ddw	__ccov159_start_blk55	; block 55 START_ADDR
  5386  14B4  00000162           	ddw	__ccov159_end_blk55	; block 55 END_ADDR
  5387  14B8  00000157           	ddw	__ccov158_start_blk54	; block 54 START_ADDR
  5388  14BC  0000015E           	ddw	__ccov158_end_blk54	; block 54 END_ADDR
  5389  14C0  000001CC           	ddw	__ccov170_start_blk80	; block 80 START_ADDR
  5390  14C4  000001F8           	ddw	__ccov170_end_blk80	; block 80 END_ADDR
  5391  14C8  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  5392  14CC  0000008C           	ddw	__ccov129_end_blk0	; block 0 END_ADDR
  5393                           
  5394                           ; Function: checkState1, coverage: 82,80,0
  5395  14D0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  5396  14D4  00000021           	ddw	__ccovbit82_47/(0+8)	; CC_ADDR
  5397  14D8  00000001           	ddw	1	; NUM_POINTS
  5398  14DC  00000007           	ddw	__ccovbit82_47& (0+7)	; OFFSET
  5399  14E0  00000000           	ddw	0	; Reserved
  5400  14E4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  5401  14E8  00000003           	ddw	3	; NUM_RANGES
  5402  14EC  000001F8           	ddw	__ccov171_start_blk82	; block 82 START_ADDR
  5403  14F0  000001FA           	ddw	__end_of_checkState1	; block 82 END_ADDR
  5404  14F4  000001CC           	ddw	__ccov170_start_blk80	; block 80 START_ADDR
  5405  14F8  000001F8           	ddw	__ccov170_end_blk80	; block 80 END_ADDR
  5406  14FC  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  5407  1500  0000008C           	ddw	__ccov129_end_blk0	; block 0 END_ADDR
  5408                           
  5409                           ; Function: set_watchdog_timer_128ms, coverage: 1,0
  5410  1504  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  5411  1508  00000021           	ddw	__ccovbit1_48/(0+8)	; CC_ADDR
  5412  150C  00000001           	ddw	1	; NUM_POINTS
  5413  1510  00000006           	ddw	__ccovbit1_48& (0+7)	; OFFSET
  5414  1514  00000000           	ddw	0	; Reserved
  5415  1518  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  5416  151C  00000002           	ddw	2	; NUM_RANGES
  5417  1520  00000439           	ddw	__ccov197_start_blk1	; block 1 START_ADDR
  5418  1524  0000043C           	ddw	__end_of_set_watchdog_timer_128ms	; block 1 END_ADDR
  5419  1528  00000434           	ddw	_set_watchdog_timer_128ms	; block 0 START_ADDR
  5420  152C  00000439           	ddw	__ccov196_end_blk0	; block 0 END_ADDR
  5421                           
  5422                           ; Function: set_watchdog_timer_256ms, coverage: 1,0
  5423  1530  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  5424  1534  00000021           	ddw	__ccovbit1_49/(0+8)	; CC_ADDR
  5425  1538  00000001           	ddw	1	; NUM_POINTS
  5426  153C  00000005           	ddw	__ccovbit1_49& (0+7)	; OFFSET
  5427  1540  00000000           	ddw	0	; Reserved
  5428  1544  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  5429  1548  00000002           	ddw	2	; NUM_RANGES
  5430  154C  00000429           	ddw	__ccov199_start_blk1	; block 1 START_ADDR
  5431  1550  0000042C           	ddw	__end_of_set_watchdog_timer_256ms	; block 1 END_ADDR
  5432  1554  00000424           	ddw	_set_watchdog_timer_256ms	; block 0 START_ADDR
  5433  1558  00000429           	ddw	__ccov198_end_blk0	; block 0 END_ADDR
  5434                           
  5435                           ; Function: set_watchdog_timer_1s, coverage: 1,0
  5436  155C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  5437  1560  00000021           	ddw	__ccovbit1_50/(0+8)	; CC_ADDR
  5438  1564  00000001           	ddw	1	; NUM_POINTS
  5439  1568  00000004           	ddw	__ccovbit1_50& (0+7)	; OFFSET
  5440  156C  00000000           	ddw	0	; Reserved
  5441  1570  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  5442  1574  00000002           	ddw	2	; NUM_RANGES
  5443  1578  00000431           	ddw	__ccov201_start_blk1	; block 1 START_ADDR
  5444  157C  00000434           	ddw	__end_of_set_watchdog_timer_1s	; block 1 END_ADDR
  5445  1580  0000042C           	ddw	_set_watchdog_timer_1s	; block 0 START_ADDR
  5446  1584  00000431           	ddw	__ccov200_end_blk0	; block 0 END_ADDR
  5447                           
  5448                           ; Function: set_watchdog_timer_4s, coverage: 1,0
  5449  1588  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  5450  158C  00000021           	ddw	__ccovbit1_51/(0+8)	; CC_ADDR
  5451  1590  00000001           	ddw	1	; NUM_POINTS
  5452  1594  00000003           	ddw	__ccovbit1_51& (0+7)	; OFFSET
  5453  1598  00000000           	ddw	0	; Reserved
  5454  159C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  5455  15A0  00000002           	ddw	2	; NUM_RANGES
  5456  15A4  00000419           	ddw	__ccov203_start_blk1	; block 1 START_ADDR
  5457  15A8  0000041C           	ddw	__end_of_set_watchdog_timer_4s	; block 1 END_ADDR
  5458  15AC  00000414           	ddw	_set_watchdog_timer_4s	; block 0 START_ADDR
  5459  15B0  00000419           	ddw	__ccov202_end_blk0	; block 0 END_ADDR
  5460                           
  5461                           ; Function: set_watchdog_timer_256s, coverage: 1,0
  5462  15B4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  5463  15B8  00000021           	ddw	__ccovbit1_52/(0+8)	; CC_ADDR
  5464  15BC  00000001           	ddw	1	; NUM_POINTS
  5465  15C0  00000002           	ddw	__ccovbit1_52& (0+7)	; OFFSET
  5466  15C4  00000000           	ddw	0	; Reserved
  5467  15C8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  5468  15CC  00000002           	ddw	2	; NUM_RANGES
  5469  15D0  00000421           	ddw	__ccov205_start_blk1	; block 1 START_ADDR
  5470  15D4  00000424           	ddw	__end_of_set_watchdog_timer_256s	; block 1 END_ADDR
  5471  15D8  0000041C           	ddw	_set_watchdog_timer_256s	; block 0 START_ADDR
  5472  15DC  00000421           	ddw	__ccov204_end_blk0	; block 0 END_ADDR
  5473                           
  5474                           ; Function: enable_watchdog_timer, coverage: 1,0
  5475  15E0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  5476  15E4  00000021           	ddw	__ccovbit1_53/(0+8)	; CC_ADDR
  5477  15E8  00000001           	ddw	1	; NUM_POINTS
  5478  15EC  00000001           	ddw	__ccovbit1_53& (0+7)	; OFFSET
  5479  15F0  00000000           	ddw	0	; Reserved
  5480  15F4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  5481  15F8  00000002           	ddw	2	; NUM_RANGES
  5482  15FC  00000444           	ddw	__ccov207_start_blk1	; block 1 START_ADDR
  5483  1600  00000447           	ddw	__end_of_enable_watchdog_timer	; block 1 END_ADDR
  5484  1604  00000442           	ddw	_enable_watchdog_timer	; block 0 START_ADDR
  5485  1608  00000444           	ddw	__ccov206_end_blk0	; block 0 END_ADDR
  5486                           
  5487                           ; Function: disable_watchdog_timer, coverage: 1,0
  5488  160C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  5489  1610  00000021           	ddw	__ccovbit1_54/(0+8)	; CC_ADDR
  5490  1614  00000001           	ddw	1	; NUM_POINTS
  5491  1618  00000000           	ddw	__ccovbit1_54& (0+7)	; OFFSET
  5492  161C  00000000           	ddw	0	; Reserved
  5493  1620  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  5494  1624  00000002           	ddw	2	; NUM_RANGES
  5495  1628  00000449           	ddw	__ccov209_start_blk1	; block 1 START_ADDR
  5496  162C  0000044C           	ddw	__end_of_disable_watchdog_timer	; block 1 END_ADDR
  5497  1630  00000447           	ddw	_disable_watchdog_timer	; block 0 START_ADDR
  5498  1634  00000449           	ddw	__ccov208_end_blk0	; block 0 END_ADDR
  5499  007E                     btemp	set	126	;btemp
  5500  007E                     int$flags	set	126
  5501  007E                     wtemp0	set	126
  5502                           
  5503                           	psect	config
  5504                           
  5505                           ;Config register CONFIG1 @ 0x8007
  5506                           ;	Oscillator Selection
  5507                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5508                           ;	Watchdog Timer Enable
  5509                           ;	WDTE = SWDTEN, WDT controlled by the SWDTEN bit in the WDTCON register
  5510                           ;	Power-up Timer Enable
  5511                           ;	PWRTE = OFF, PWRT disabled
  5512                           ;	MCLR Pin Function Select
  5513                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  5514                           ;	Flash Program Memory Code Protection
  5515                           ;	CP = OFF, Program memory code protection is disabled
  5516                           ;	Data Memory Code Protection
  5517                           ;	CPD = OFF, Data memory code protection is disabled
  5518                           ;	Brown-out Reset Enable
  5519                           ;	BOREN = OFF, Brown-out Reset disabled
  5520                           ;	Clock Out Enable
  5521                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5522                           ;	Internal/External Switchover
  5523                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5524                           ;	Fail-Safe Clock Monitor Enable
  5525                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5526  8007                     	org	32775
  5527  8007  09EC               	dw	2540
  5528                           
  5529                           ;Config register CONFIG2 @ 0x8008
  5530                           ;	Flash Memory Self-Write Protection
  5531                           ;	WRT = OFF, Write protection off
  5532                           ;	PLL Enable
  5533                           ;	PLLEN = OFF, 4x PLL disabled
  5534                           ;	Stack Overflow/Underflow Reset Enable
  5535                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
  5536                           ;	Brown-out Reset Voltage Selection
  5537                           ;	BORV = HI, Brown-out Reset Voltage (Vbor), high trip point selected.
  5538                           ;	Low-Voltage Programming Enable
  5539                           ;	LVP = ON, Low-voltage programming enabled
  5540  8008                     	org	32776
  5541  8008  38FF               	dw	14591

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         26
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            79      8      37
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_getBatteryVoltage
    _checkState1->_getBatteryVoltage

Critical Paths under _my_isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_checkState1
    _checkState1->___awdiv

Critical Paths under _my_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     310
                                              6 BANK0      2     2      0
                            ___awdiv
                        _checkState1
             _disable_watchdog_timer
          _enable_external_interrupt
                  _getBatteryVoltage
           _set_watchdog_timer_128ms
                        _timer2_init
 ---------------------------------------------------------------------------------
 (1) _timer2_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkState1                                          2     2      0     155
                                              4 BANK0      2     2      0
                            ___awdiv
         _disable_external_interrupt
             _disable_watchdog_timer
          _enable_external_interrupt
              _enable_watchdog_timer
                  _getBatteryVoltage
           _set_watchdog_timer_128ms
              _set_watchdog_timer_1s
       _watch_dog_incrementing_timer
 ---------------------------------------------------------------------------------
 (2) _watch_dog_incrementing_timer                         1     1      0       0
                                              2 COMMON     1     1      0
           _set_watchdog_timer_128ms
              _set_watchdog_timer_1s
           _set_watchdog_timer_256ms
            _set_watchdog_timer_256s
              _set_watchdog_timer_4s
 ---------------------------------------------------------------------------------
 (3) _set_watchdog_timer_4s                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _set_watchdog_timer_256s                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _set_watchdog_timer_256ms                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _set_watchdog_timer_1s                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_watchdog_timer_128ms                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getBatteryVoltage                                    7     5      2      25
                                              2 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (2) _enable_watchdog_timer                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _enable_external_interrupt                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _disable_watchdog_timer                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _disable_external_interrupt                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     130
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _my_isr                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   _checkState1
     ___awdiv
     _disable_external_interrupt
     _disable_watchdog_timer
     _enable_external_interrupt
     _enable_watchdog_timer
     _getBatteryVoltage
     _set_watchdog_timer_128ms
     _set_watchdog_timer_1s
     _watch_dog_incrementing_timer
       _set_watchdog_timer_128ms
       _set_watchdog_timer_1s
       _set_watchdog_timer_256ms
       _set_watchdog_timer_256s
       _set_watchdog_timer_4s
   _disable_watchdog_timer
   _enable_external_interrupt
   _getBatteryVoltage
   _set_watchdog_timer_128ms
   _timer2_init

 _my_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              6F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            4F      0       5       4        6.3%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               4F      8      25       5       46.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            20      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
ABS                  0      0      33       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      33       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Jun 20 13:09:39 2021

                    __ccov204_end_blk0 0421                      __ccov108_end_blk1 044F  
                    __ccov132_end_blk4 009F                      __ccov116_end_blk5 001B  
                   __ccov124_end_blk15 0056                     __ccov140_end_blk15 00D2  
                   __pcodecov_info_hdr 0000                    __ccov84_start_blk10 03E5  
                  __ccov68_start_blk73 02E5                   __ccov103_start_blk17 0362  
                    __ccov109_end_blk0 0450                      __ccov205_end_blk1 0424  
                    __ccov117_end_blk6 001D                      __ccov133_end_blk6 00A7  
                         ___awdiv@sign 003F                      __ccov206_end_blk0 0444  
                    __ccov118_end_blk7 0022                      __ccov134_end_blk7 00AB  
                   __ccov141_end_blk20 00E1                     __ccov125_end_blk16 0064  
                                  l140 03D9                                    l141 03E6  
                                  l125 02BD                                    l150 036C  
                                  l135 0412                                    l144 0403  
                                  l162 0450                                    l138 03D5  
                                  l331 0439                                    l340 0419  
                                  l156 036D                                    l260 00F7  
                                  l334 0429                                    l262 00FB  
                                  l159 044D                                    l343 0421  
                                  l280 01F8                                    l337 0431  
                                  l346 0444                                    l274 01C3  
                                  l349 0449                                    l269 0145  
                                  l652 03CE                                    u200 031A  
                                  u201 0319                                    u210 0332  
                                  u211 0331                                    u220 034A  
                                  u221 0349                                    u205 0316  
                                  u230 0362                                    u231 0361  
                                  u215 032E                                    u225 0346  
                                  u170 03D9                                    u171 03D8  
                                  u235 035E                                    u180 03EA  
                                  u181 03E9                                    u190 0302  
                                  u191 0301                                    u600 0375  
                                  u601 0374                                    u610 0380  
                                  u611 037F                                    u195 02FE  
                                  u620 0391                                    u700 00C1  
                                  u621 0390                                    u701 00C0  
                                  u710 00E0                                    u711 00DF  
                                  u640 03A1                                    u720 00F2  
                                  u641 03A0                                    u721 00F1  
                                  u730 0137                                    u635 0395  
                                  u731 0136                                    u715 00DC  
                                  u660 03B0                                    u740 0176  
                                  u661 03AF                                    u741 0175  
                                  u655 03A2                                    u735 0133  
                                  u807 024C                                    u680 03C0  
                                  u760 01B3                                    u681 03BF  
                                  u665 03AC                                    u761 01B2  
                                  u745 0172                                    u817 029C  
                                  u690 03C5                                    u691 03C4  
                                  u675 03B6                                    u827 01B9  
                                  u755 018E                                    u780 0296  
                                  u837 03DE                                    u765 01AF  
                                  u781 0295                                    u790 02E9  
                                  u791 02E8                                    u775 0271  
                                  u785 0292                   __ccov158_start_blk54 0157  
                 __ccov166_start_blk67 01B5                      __ccov207_end_blk1 0447  
                    __ccov135_end_blk8 00B1                                    wreg 0009  
                    __ccov208_end_blk0 0449                      __ccov136_end_blk9 00B8  
                _set_watchdog_timer_1s 042C                  _set_watchdog_timer_4s 0414  
                   __ccov142_end_blk23 00E8                     __ccov126_end_blk17 006A  
                   __ccov150_end_blk39 0125                    __ccov200_start_blk0 042C  
                                 l2201 037A                                   l1401 031F  
                                 l2211 038B                                   l2203 037C  
                                 l1411 034A                                   l1403 0324  
                                 l2221 03A1                                   l2213 0391  
                                 l2205 0380                                   l1421 044F  
                                 l1413 034F                                   l1405 0332  
                                 l2223 03B0                                   l2215 0394  
                                 l2231 03C0                                   l2207 0385  
                                 l1423 0442                                   l1415 0354  
                                 l1407 0337                                   l2303 0157  
                                 l2233 03C5                                   l2225 03B4  
                                 l2217 0399                                   l2209 0389  
                                 l1353 0434                                   l1361 041C  
                                 l1417 0362                                   l1409 033C  
                                 l2321 01A6                                   l2313 0162  
                                 l2305 015E                                   l2241 008C  
                                 l1425 0405                                   l2401 0227  
                                 l2235 03CA                                   l2227 03B5  
                                 l2219 039D                                   l1363 0447  
                                 l1371 03DD                                   l1355 0424  
                                 l1419 0367                                   l2323 01B3  
                                 l2315 0165                                   l2251 00AB  
                                 l2243 0092                                   l1427 0408  
                                 l2411 0238                                   l2403 0229  
                                 l2229 03BA                                   l1381 03EA  
                                 l1373 03E1                                   l1365 03CF  
                                 l1357 042C                                   l2325 01B5  
                                 l2317 0167                                   l2261 00CC  
                                 l2253 00B1                                   l2245 0098  
                                 l1429 0411                                   l2421 0240  
                                 l2413 023A                                   l2405 022E  
                                 l1383 03FB                                   l1375 03E4  
                                 l1367 03D4                                   l1359 0414  
                                 l1391 02F4                                   l2327 01BE  
                                 l2319 0176                                   l2271 00E1  
                                 l2255 00B8                                   l2247 009F  
                                 l2335 01CC                                   l2239 008B  
                                 l2431 0258                                   l2423 0243  
                                 l2415 023C                                   l2407 0232  
                                 l2351 0200                                   l1385 03FD  
                                 l1377 03E5                                   l1369 03DB  
                                 l1393 0302                                   l2329 01C7  
                                 l2281 00FF                                   l2273 00E8  
                                 l2257 00C1                                   l2249 00A7  
                                 l2441 0296                                   l2433 0259  
                                 l2425 0246                                   l2417 023D  
                                 l2409 0236                                   l2361 0208  
                                 l2353 0204                                   l2345 01FA  
                                 l2195 036F                                   l1379 03E5  
                                 l1395 0307                                   l2291 012A  
                                 l2283 0112                                   l2275 00EC  
                                 l2267 00D2                                   l2259 00C8  
                                 l2451 02AD                                   l2443 0298  
                                 l2435 0260                                   l2427 0252  
                                 l2419 023F                                   l2371 020E  
                                 l2363 0209                                   l2355 0205  
                                 l2347 01FC                                   l2197 0371  
                                 l1389 044C                                   l1397 030C  
                                 l2293 0137                                   l2277 00F2  
                                 l2285 011D                                   l2461 02B5  
                                 l2453 02AE                                   l2445 02A1  
                                 l2437 0279                                   l2429 0253  
                                 l2381 0215                                   l2373 020F  
                                 l2365 020A                                   l2357 0206  
                                 l2349 01FF                                   l2199 0375  
                                 l1399 031A                                   l2295 013E  
                                 l2287 0125                                   l2471 02CA  
                                 l2463 02B7                                   l2455 02AF  
                                 l2447 02A4                                   l2439 0289  
                                 l2391 021F                                   l2383 0217  
                                 l2375 0211                                   l2367 020C  
                                 l2359 0207                                   l2297 0149  
                                 l2481 02E9                                   l2465 02B9  
                                 l2457 02B1                                   l2449 02A9  
                                 l2393 0220                                   l2385 0218  
                                 l2377 0213                                   l2369 020D  
                                 l2299 0152                                   l2483 02EE  
                                 l2467 02C7                                   l2475 02CF  
                                 l2459 02B3                                   l2395 0222  
                                 l2387 0219                                   l2379 0214  
                                 l2469 02C8                                   l2477 02E2  
                                 l2397 0224                                   l2389 021E  
                                 l2479 02E5                                   l2671 02DA  
                                 l2399 0225                                   l2673 0107  
                                 l2675 01D5               getBatteryVoltage@adc_val 007A  
                    __ccov129_end_blk0 008C                      __ccov209_end_blk1 044C  
                                 _BRGH 0CF2                                   _INTE 005C  
                                 _INTF 0059                                   _PIR1 0011  
                                 _PIR2 0012                                   _SCKP 0CFC  
                                 _SPEN 0CEF                                   _TXEN 0CF5  
                                 _TXIF 008C                                   _SYNC 0CF4  
                        _state_machine 003C                                   _main 01FA  
                   __ccov119_end_blk10 0035                     __ccov151_end_blk40 012A  
                   __ccov143_end_blk26 00EC                     __ccov127_end_blk19 006D  
                                 fsr0h 0005                                   indf0 0000  
                                 fsr0l 0004                                   btemp 007E  
       ??_watch_dog_incrementing_timer 0075                    __ccov22_start_blk21 0219  
                  __ccov14_start_blk13 020E                    __ccov30_start_blk29 0229  
                                 start 0071                ??_enable_watchdog_timer 0075  
                   __ccov128_end_blk22 0071                     __ccov144_end_blk27 00F2  
                   __ccov152_end_blk44 0137                     __ccov160_end_blk61 0165  
                  __ccov113_start_blk0 0004                    __ccov201_start_blk1 0431  
                  __ccov85_start_blk12 03E6                    __ccov69_start_blk74 02E9  
                 __ccov120_start_blk11 0035                   __ccov104_start_blk18 0367  
                                ?_main 0073                        __end_of___awdiv 03CF  
                                _BRG16 0CFB                           __ccovbit50_1 0394  
                         __ccovbit18_7 038E                     __ccov137_end_blk11 00C1  
                         __ccovbit62_2 0393                     __ccov145_end_blk28 00F7  
                   __ccov153_end_blk45 013E                     __ccov161_end_blk62 0167  
                         __ccovbit66_3 0392                           __ccovbit74_4 0391  
                         __ccovbit76_5 0390                           __ccovbit1_15 0386  
                         __ccovbit1_16 0385                           __ccovbit1_17 0384  
                         __ccovbit1_50 010C                           __ccovbit1_51 010B  
                         __ccovbit1_52 010A                           __ccovbit1_53 0109  
                         __ccovbit1_54 0108                           __ccovbit1_48 010E  
                      ___awdiv@divisor 0075                           __ccovbit1_49 010D  
                         __ccovbit3_18 0383                           __ccovbit3_26 0124  
                         __ccovbit4_27 0123                                  _IOCAF 0393  
                         __ccovbit7_19 0382                           __ccovbit7_28 0122  
                         __ccovbit8_29 0121                           __ccovbit9_30 0120  
                                i1l170 0038                                  i1l172 0010  
                                i1l173 0035                                  i1l176 0056  
                                i1l178 006D                        ___awdiv@counter 003E  
                 __ccov159_start_blk55 015E                   __ccov167_start_blk68 01BE  
                                u34_20 000A                                  u34_21 0009  
                                _SPBRG 019B                                  u35_20 000F  
                                u35_21 000E                                  u36_20 003D  
                                u36_21 003C                                  u37_20 0043  
                                u37_21 0042                                  u38_20 0050  
                                u38_21 004F                                  u38_25 004C  
                                u39_20 0064                                  u39_21 0063  
                                u39_25 0060                                  _TXREG 019A  
                 __size_of_checkState1 016F                     __ccov138_end_blk12 00C8  
                   __ccov146_end_blk29 00FB                     __ccov162_end_blk63 0176  
                   __ccov154_end_blk47 0145                     __ccov170_end_blk80 01F8  
                  __ccov202_start_blk0 0414                    __ccov114_start_blk1 000A  
                  __ccov130_start_blk2 008C                         __pbitbssCOMMON 0380  
                                status 0003                                  wtemp0 007E  
                   __ccov147_end_blk30 00FF                     __ccov139_end_blk14 00CC  
                   __ccov163_end_blk64 01A6                     __ccov155_end_blk49 0149  
                   __ccov171_end_blk82 01FA                         __pcodecov_info 0000  
                       _state_selftest 0038                    __ccov31_start_blk30 022E  
                  __ccov23_start_blk22 021E                    __ccov15_start_blk14 020F  
                      __initialization 0075                      __ccov196_end_blk0 0439  
                         __end_of_main 02F4                     __ccov156_end_blk50 0152  
                   __ccov148_end_blk35 0112                     __ccov164_end_blk65 01B3  
                  __ccov107_start_blk0 044C                    __ccov203_start_blk1 0419  
                  __ccov115_start_blk3 0010                    __ccov131_start_blk3 0092  
              _set_watchdog_timer_256s 041C                    __ccov86_start_blk14 03EA  
                 __ccov121_start_blk12 0038                   __ccov105_start_blk22 036C  
                    __ccov197_end_blk1 043C                                 ??_main 0044  
                    __ccov198_end_blk0 0429                     __ccov157_end_blk51 0157  
                   __ccov149_end_blk37 011D                     __ccov165_end_blk66 01B5  
                 __ccov168_start_blk69 01C3                      __ccov199_end_blk1 042C  
               ?_set_watchdog_timer_1s 0073                 ?_set_watchdog_timer_4s 0073  
           ?_enable_external_interrupt 0073                     __ccov158_end_blk54 015E  
                   __ccov166_end_blk67 01BE                          __ccovbit10_10 038B  
                        __ccovbit11_20 0381                          __ccovbit11_31 011F  
                        __ccovbit12_32 011E                          __ccovbit20_34 011C  
                        __ccovbit13_21 0380                          __ccovbit14_11 038A  
                        __ccovbit22_13 0388                                 _ADRESH 009C  
                        __ccovbit22_25 0125                    __ccov204_start_blk0 041C  
                               _ADRESL 009B                    __ccov108_start_blk1 044D  
                        __ccovbit30_37 0119                          __ccovbit15_22 0128  
                  __ccov132_start_blk4 0098                    __ccov116_start_blk5 001A  
                        __ccovbit15_33 011D                          __ccovbit23_35 011B  
                        __ccovbit24_14 0387                          __ccovbit17_23 0127  
                        __ccovbit40_39 0117                          __ccovbit18_12 0389  
                        __ccovbit19_24 0126                          __ccovbit51_42 0114  
                        __ccovbit45_40 0116                          __ccovbit29_36 011A  
                        __ccovbit37_38 0118                       ___awdiv@dividend 0077  
                        __ccovbit47_41 0115                          __ccovbit63_43 0113  
                        __ccovbit71_46 0110                          __ccovbit82_47 010F  
                        __ccovbit68_44 0112                          __ccovbit69_45 0111  
                               _ANSELA 018C                                 i1l1701 0022  
                               i1l1711 006A                                 i1l1703 003D  
                               i1l1705 0043                                 i1l1707 0050  
                               i1l1709 0064                                 i1l1693 001A  
                               i1l1695 001B                                 i1l1687 0006  
                               i1l1697 001D                                 i1l1689 000A  
                               i1l2677 002D                                 _FVRCON 0117  
                     __ccov10_end_blk9 020A                     __ccov159_end_blk55 0162  
                   __ccov167_end_blk68 01C3                     _DoorStateAfterPrel 003A  
                  __ccov32_start_blk31 0232                    __ccov24_start_blk23 021F  
                  __ccov16_start_blk15 0211                    __ccov40_start_blk39 0243  
                   __ccov168_end_blk69 01C7                              ??___awdiv 0079  
                  __ccov109_start_blk0 044F                    __ccov205_start_blk1 0421  
                  __ccov117_start_blk6 001B                    __ccov133_start_blk6 009F  
                         ?_timer2_init 0073                    __ccov87_start_blk15 03FB  
                 __ccov122_start_blk13 003D                   __ccov106_start_blk24 036D  
                     ___awdiv@quotient 0040                                 _my_isr 0004  
                   __ccov169_end_blk71 01CC                   __ccov169_start_blk71 01C7  
               _NewStateChangeDetected 0397                    __ccov206_start_blk0 0442  
                  __ccov118_start_blk7 001D                    __ccov134_start_blk7 00A7  
              __end_of__initialization 0088                    __ccov41_start_blk40 0246  
                  __ccov33_start_blk32 0236                    __ccov25_start_blk24 0220  
                  __ccov17_start_blk16 0213              ??_set_watchdog_timer_256s 0075  
                   _state_output_pulse 0039                         __pcstackCOMMON 0073  
                  __ccov207_start_blk1 0444                    __ccov135_start_blk8 00AB  
                  __ccov88_start_blk16 03FD                   __ccov123_start_blk14 0043  
             _set_watchdog_timer_128ms 0434               _set_watchdog_timer_256ms 0424  
                     __ccov71_end_blk0 0408                         _OPTION_REGbits 0095  
                     __ccov72_end_blk1 0411                       __ccov80_end_blk6 03E1  
                      __ccov1_end_blk0 01FC                       __ccov73_end_blk2 0412  
                     __ccov81_end_blk7 03E4                    __ccov208_start_blk0 0447  
                  __ccov136_start_blk9 00B1                             __pbssBANK0 0026  
             ??_disable_watchdog_timer 0075                        __ccov2_end_blk1 01FF  
                     __ccov90_end_blk0 0302                       __ccov74_end_blk3 0414  
                     __ccov82_end_blk8 03E5                        _NewDoorPolarity 0396  
                      __ccov3_end_blk2 0200                       __ccov75_end_blk0 03D4  
                     __ccov91_end_blk1 0307                    __ccov42_start_blk41 0252  
                  __ccov34_start_blk33 0238                    __ccov26_start_blk25 0222  
                  __ccov18_start_blk17 0214                    __ccov50_start_blk49 0298  
                      __ccov4_end_blk3 0204                             __pmaintext 01FA  
                     __ccov76_end_blk1 03D5                       __ccov92_end_blk2 030C  
                   __ccov71_start_blk0 0405         __size_of_enable_watchdog_timer 0005  
        __end_of_enable_watchdog_timer 0447                        __ccov5_end_blk4 0205  
                           __pintentry 0004                       __ccov77_end_blk3 03D9  
                     __ccov93_end_blk4 031A                    __ccov129_start_blk0 008B  
                  __ccov209_start_blk1 0449                    __ccov89_start_blk18 0403  
                 __ccov124_start_blk15 0050                   __ccov140_start_blk15 00CC  
                      __ccov6_end_blk5 0206                                ?_my_isr 0073  
                     __ccov78_end_blk4 03DB                       __ccov94_end_blk5 031F  
                      __ccov7_end_blk6 0207                       __ccov79_end_blk5 03DD  
                     __ccov95_end_blk6 0324        __end_of_set_watchdog_timer_256s 0424  
                      __ccov8_end_blk7 0208                     __ccov72_start_blk1 0408  
                     __ccov96_end_blk8 0332                     __ccov80_start_blk6 03DD  
                  _DoorStateBeforePrel 003B                        __ccov9_end_blk8 0209  
                     __ccov97_end_blk9 0337                      __ccov11_end_blk10 020C  
                    __ccov1_start_blk0 01FA                      __ccov12_end_blk11 020D  
                    __ccov20_end_blk19 0218                    __ccov51_start_blk50 02A1  
                  __ccov43_start_blk42 0253                    __ccov35_start_blk34 023A  
                  __ccov27_start_blk26 0224                    __ccov19_start_blk18 0215  
                   __ccov73_start_blk2 0411                     __ccov81_start_blk7 03E1  
         ??_disable_external_interrupt 0075                                ___awdiv 036F  
                  __ccov98_start_blk10 0337                      __ccov21_end_blk20 0219  
                    __ccov13_end_blk12 020E                   __ccov141_start_blk20 00D2  
                 __ccov125_start_blk16 0056                                __ptext1 0405  
                              __ptext2 008B                                __ptext3 02F4  
                              __ptext4 0414                                __ptext5 041C  
                              __ptext6 0424                                __ptext7 042C  
                              __ptext8 0434                                __ptext9 03CF  
                 __size_of_timer2_init 000F                        __size_of_my_isr 006D  
              ??_set_watchdog_timer_1s 0075                ??_set_watchdog_timer_4s 0075  
                        ??_checkState1 0042                      __ccov2_start_blk1 01FC  
                            _T2CONbits 001C                      __ccov22_end_blk21 021E  
                    __ccov14_end_blk13 020F                      __ccov30_end_blk29 022E  
                           _millivolts 0036                              _MDCONbits 039C  
                   __ccov90_start_blk0 02F4                     __ccov74_start_blk3 0412  
                   __ccov82_start_blk8 03E4            ??_enable_external_interrupt 0075  
                              clrloop0 043D                   end_of_initialization 0088  
                    __ccov31_end_blk30 0232                      __ccov23_end_blk22 021F  
                    __ccov15_end_blk14 0211        __size_of_disable_watchdog_timer 0005  
                            _MDSRCbits 039D    __size_of_disable_external_interrupt 0003  
                    __ccov3_start_blk2 01FF                      __ccov32_end_blk31 0236  
                    __ccov24_end_blk23 0220                      __ccov16_end_blk15 0213  
                    __ccov40_end_blk39 0246                    __ccov44_start_blk43 0258  
                  __ccov36_start_blk35 023C                    __ccov28_start_blk27 0225  
                  __ccov60_start_blk60 02B7                    __ccov52_start_blk52 02A4  
                            _RCSTAbits 019D                     __ccov75_start_blk0 03CF  
                   __ccov91_start_blk1 0302                     _sleep_256s_counter 0028  
                  __ccov99_start_blk12 033C                      __ccov41_end_blk40 0252  
                    __ccov33_end_blk32 0238                      __ccov25_end_blk24 0222  
                    __ccov17_end_blk16 0214                   __ccov142_start_blk23 00E1  
                 __ccov126_start_blk17 0064                   __ccov150_start_blk39 011D  
                            _PORTAbits 000C                      __ccov4_start_blk3 0200  
                        _WakeUpCounter 0026                              _TRISAbits 008C  
                    __ccov42_end_blk41 0253                      __ccov34_end_blk33 023A  
                    __ccov26_end_blk25 0224                      __ccov18_end_blk17 0215  
                    __ccov50_end_blk49 02A1                     __ccov76_start_blk1 03D4  
                   __ccov92_start_blk2 0307                    __end_of_checkState1 01FA  
                           _state_door 003D                      __ccov51_end_blk50 02A4  
                    __ccov43_end_blk42 0258                      __ccov35_end_blk34 023C  
                    __ccov27_end_blk26 0225                      __ccov19_end_blk18 0217  
                          _CM1CON0bits 0111                              _TXSTAbits 019E  
                    __ccov5_start_blk4 0204             ??_set_watchdog_timer_128ms 0075  
           ??_set_watchdog_timer_256ms 0075                      __ccov44_end_blk43 0259  
                    __ccov36_end_blk35 023D                      __ccov28_end_blk27 0227  
                    __ccov60_end_blk60 02B9                      __ccov52_end_blk52 02A9  
                  __ccov45_start_blk44 0259                    __ccov37_start_blk36 023D  
                  __ccov29_start_blk28 0227                    __ccov61_start_blk61 02B9  
                  __ccov53_start_blk53 02A9              _enable_external_interrupt 044C  
                   __ccov77_start_blk3 03D5                     __ccov93_start_blk4 030C  
                          __ccovbit2_8 038D                            __ccovbit3_6 038F  
                          __ccovbit6_9 038C                 _disable_watchdog_timer 0447  
                    __ccov45_end_blk44 0260                      __ccov37_end_blk36 023F  
                    __ccov29_end_blk28 0229                      __ccov61_end_blk61 02BD  
                    __ccov53_end_blk53 02AD                   __ccov119_start_blk10 0022  
                 __ccov151_start_blk40 0125                   __ccov143_start_blk26 00E8  
                 __ccov127_start_blk19 006A                          __pbitbssBANK0 0108  
                       __end_of_my_isr 0071                      __ccov6_start_blk5 0205  
                  start_initialization 0075                      __ccov46_end_blk45 0279  
                    __ccov38_end_blk37 0240                      __ccov62_end_blk62 02C7  
                    __ccov54_end_blk54 02AE                      __ccov70_end_blk76 02F3  
                   __ccov78_start_blk4 03D9                     __ccov94_start_blk5 031A  
                          ___powerdown 0103                      __ccov47_end_blk46 0289  
                    __ccov39_end_blk38 0243                      __ccov55_end_blk55 02AF  
                    __ccov63_end_blk64 02C8                      __ccov7_start_blk6 0206  
                          _APFCON0bits 011D     __end_of_disable_external_interrupt 0452  
           _disable_external_interrupt 044F                      __ccov48_end_blk47 0296  
                    __ccov56_end_blk56 02B1                      __ccov64_end_blk65 02CA  
                  __ccov46_start_blk45 0260                    __ccov38_start_blk37 023F  
                  __ccov62_start_blk62 02BD                    __ccov54_start_blk54 02AD  
                  __ccov70_start_blk76 02EE                     __ccov79_start_blk5 03DB  
                   __ccov95_start_blk6 031F                               ??_my_isr 0073  
                    __ccov49_end_blk48 0298                      __ccov57_end_blk57 02B3  
                    __ccov65_end_blk66 02CF                   __ccov128_start_blk22 006D  
                 __ccov144_start_blk27 00EC                   __ccov152_start_blk44 012A  
                 __ccov160_start_blk61 0162                            _checkState1 008B  
                    __ccov8_start_blk7 0207                            __pbssCOMMON 007C  
                            ___latbits 0000                          __pcstackBANK0 003E  
                    __ccov58_end_blk58 02B5                      __ccov66_end_blk69 02E2  
                   __ccov96_start_blk8 0324                              ___timeout 0104  
             ?_set_watchdog_timer_256s 0073                      __ccov67_end_blk71 02E5  
                    __ccov59_end_blk59 02B7                      __ccov9_start_blk8 0208  
                    __ccov84_end_blk10 03E6                      __ccov68_end_blk73 02E9  
                  __ccov47_start_blk46 0279                    __ccov39_start_blk38 0240  
                  __ccov55_start_blk55 02AE                    __ccov63_start_blk64 02C7  
                   __ccov97_start_blk9 0332                               ?___awdiv 0075  
                _enable_watchdog_timer 0442                      __ccov85_end_blk12 03EA  
                    __ccov69_end_blk74 02EE                   __ccov137_start_blk11 00B8  
                 __ccov145_start_blk28 00F2                   __ccov153_start_blk45 0137  
                 __ccov161_start_blk62 0165         __size_of_set_watchdog_timer_1s 0008  
       __size_of_set_watchdog_timer_4s 0008          __end_of_set_watchdog_timer_1s 0434  
        __end_of_set_watchdog_timer_4s 041C                      __ccov86_end_blk14 03FB  
                     _sleep_1s_counter 002C                    __ccov196_start_blk0 0434  
                    __ccov87_end_blk15 03FD                               _LATAbits 010C  
     __end_of_set_watchdog_timer_128ms 043C       __end_of_set_watchdog_timer_256ms 042C  
                            clear_ram0 043C                               _PIE1bits 0091  
                     _sleep_4s_counter 002A                               _PIR1bits 0011  
                    __ccov88_end_blk16 0403                    __ccov48_start_blk47 0289  
                  __ccov56_start_blk56 02AF                    __ccov64_start_blk65 02C8  
                        ??_timer2_init 0075                    __ccov197_start_blk1 0439  
                    _getBatteryVoltage 03CF                             _ADCON0bits 009D  
                           _ADCON1bits 009E                      __ccov89_end_blk18 0405  
                 __ccov138_start_blk12 00C1                   __ccov146_start_blk29 00F7  
                 __ccov162_start_blk63 0167                   __ccov154_start_blk47 013E  
                 __ccov170_start_blk80 01CC     __size_of_enable_external_interrupt 0003  
                   ?_getBatteryVoltage 0075                               _WPUAbits 020C  
                  main@output_polarity 0395                      __ccov98_end_blk10 033C  
                  ??_getBatteryVoltage 0077                    __ccov198_start_blk0 0424  
                    __ccov99_end_blk12 034A                          _ihcPulseTimer 0032  
              ?_disable_watchdog_timer 0073                    __ccov49_start_blk48 0296  
                  __ccov57_start_blk57 02B1                    __ccov65_start_blk66 02CA  
                 __ccov100_start_blk13 034A                 ?_enable_watchdog_timer 0073  
            __end_of_getBatteryVoltage 0405                       __size_of___awdiv 0060  
                  __ccov199_start_blk1 0429                   __ccov147_start_blk30 00FB  
                 __ccov139_start_blk14 00C8                   __ccov163_start_blk64 0176  
                 __ccov155_start_blk49 0145                   __ccov171_start_blk82 01F8  
                           _ANSELAbits 018C                    __end_of_timer2_init 0414  
    __end_of_enable_external_interrupt 044F                    _sleep_128ms_counter 0030  
                             __ptext10 0442                               __ptext11 044C  
                             __ptext12 0447                               __ptext13 044F  
                             __ptext14 036F   __end_of_watch_dog_incrementing_timer 036F  
__size_of_watch_dog_incrementing_timer 007B           _watch_dog_incrementing_timer 02F4  
                         _SSP1CON1bits 0215                             _MDCARHbits 039F  
                           _MDCARLbits 039E                          __size_of_main 00FA  
                  __ccov11_start_blk10 020A         __end_of_disable_watchdog_timer 044C  
          ?_disable_external_interrupt 0073                     __ccov100_end_blk13 034F  
                         _PSTR1CONbits 0296                    __ccov58_start_blk58 02B3  
                  __ccov66_start_blk69 02CF                   __ccov101_start_blk14 034F  
                             int$flags 007E                     __ccov101_end_blk14 0354  
                 __ccov156_start_blk50 0149                   __ccov148_start_blk35 00FF  
                 __ccov164_start_blk65 01A6                           ?_checkState1 0073  
    __size_of_set_watchdog_timer_128ms 0008      __size_of_set_watchdog_timer_256ms 0008  
            ?_set_watchdog_timer_128ms 0073              ?_set_watchdog_timer_256ms 0073  
                           _INTCONbits 000B                     __ccov10_start_blk9 0209  
                           _FVRCONbits 0117                     __ccov102_end_blk16 0362  
        ?_watch_dog_incrementing_timer 0073                               intlevel1 0000  
                   __ccov103_end_blk17 0367                            _prelCounter 0034  
                  __ccov12_start_blk11 020C                    __ccov20_start_blk19 0217  
                       _BatteryVoltage 007C                             _OSCCONbits 0099  
                   __ccov120_end_blk11 0038                     __ccov104_end_blk18 036C  
                  __ccov67_start_blk71 02E2                    __ccov59_start_blk59 02B5  
                 __ccov102_start_blk16 0354             __size_of_getBatteryVoltage 0036  
                          _timer2_init 0405       __size_of_set_watchdog_timer_256s 0008  
                    __ccov110_end_blk1 0452                     __ccov121_end_blk12 003D  
                   __ccov105_end_blk22 036D                   __ccov157_start_blk51 0152  
                 __ccov149_start_blk37 0112                   __ccov165_start_blk66 01B3  
                           _SRCON0bits 011A                      __ccov200_end_blk0 0431  
                  _sleep_256ms_counter 002E                     __ccov122_end_blk13 0043  
                   __ccov106_end_blk24 036F                             _WDTCONbits 0097  
                  __ccov110_start_blk1 0450                      __ccov113_end_blk0 000A  
                    __ccov201_end_blk1 0434                      __ccov202_end_blk0 0419  
                    __ccov114_end_blk1 0010                      __ccov130_end_blk2 0092  
                   __ccov123_end_blk14 0050                    __ccov21_start_blk20 0218  
                  __ccov13_start_blk12 020D                      __ccov107_end_blk0 044D  
                    __ccov203_end_blk1 041C                      __ccov115_end_blk3 001A  
                    __ccov131_end_blk3 0098  
