

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue May 04 23:46:53 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	12LF1822
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2,codecov
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,codecov
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,codecov
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,codecov
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,codecov
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,codecov
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,codecov
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,codecov
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,codecov
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,codecov
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,codecov
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,codecov
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,codecov
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,codecov
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	codecov_info_hdr,global,note,abs,reloc=1,space=6,split=0,delta=1,noexec
    29                           	psect	codecov_info,global,note,abs,reloc=1,space=6,split=0,delta=1,noexec
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC12LF1822 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  008C                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0095                     	;# 
    97  0096                     	;# 
    98  0097                     	;# 
    99  0098                     	;# 
   100  0099                     	;# 
   101  009A                     	;# 
   102  009B                     	;# 
   103  009B                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  010C                     	;# 
   108  0111                     	;# 
   109  0112                     	;# 
   110  0115                     	;# 
   111  0116                     	;# 
   112  0117                     	;# 
   113  0118                     	;# 
   114  0119                     	;# 
   115  011A                     	;# 
   116  011B                     	;# 
   117  011D                     	;# 
   118  011D                     	;# 
   119  018C                     	;# 
   120  0191                     	;# 
   121  0191                     	;# 
   122  0192                     	;# 
   123  0193                     	;# 
   124  0193                     	;# 
   125  0193                     	;# 
   126  0194                     	;# 
   127  0195                     	;# 
   128  0196                     	;# 
   129  0199                     	;# 
   130  019A                     	;# 
   131  019B                     	;# 
   132  019B                     	;# 
   133  019B                     	;# 
   134  019B                     	;# 
   135  019C                     	;# 
   136  019C                     	;# 
   137  019D                     	;# 
   138  019E                     	;# 
   139  019F                     	;# 
   140  020C                     	;# 
   141  0211                     	;# 
   142  0211                     	;# 
   143  0212                     	;# 
   144  0212                     	;# 
   145  0213                     	;# 
   146  0213                     	;# 
   147  0214                     	;# 
   148  0214                     	;# 
   149  0215                     	;# 
   150  0215                     	;# 
   151  0215                     	;# 
   152  0216                     	;# 
   153  0216                     	;# 
   154  0217                     	;# 
   155  0217                     	;# 
   156  0291                     	;# 
   157  0291                     	;# 
   158  0292                     	;# 
   159  0293                     	;# 
   160  0294                     	;# 
   161  0295                     	;# 
   162  0295                     	;# 
   163  0296                     	;# 
   164  0391                     	;# 
   165  0392                     	;# 
   166  0393                     	;# 
   167  039A                     	;# 
   168  039C                     	;# 
   169  039D                     	;# 
   170  039E                     	;# 
   171  039F                     	;# 
   172  0FE4                     	;# 
   173  0FE5                     	;# 
   174  0FE6                     	;# 
   175  0FE7                     	;# 
   176  0FE8                     	;# 
   177  0FE9                     	;# 
   178  0FEA                     	;# 
   179  0FEB                     	;# 
   180  0FED                     	;# 
   181  0FEE                     	;# 
   182  0FEF                     	;# 
   183  0000                     	;# 
   184  0001                     	;# 
   185  0002                     	;# 
   186  0003                     	;# 
   187  0004                     	;# 
   188  0005                     	;# 
   189  0006                     	;# 
   190  0007                     	;# 
   191  0008                     	;# 
   192  0009                     	;# 
   193  000A                     	;# 
   194  000B                     	;# 
   195  000C                     	;# 
   196  0011                     	;# 
   197  0012                     	;# 
   198  0015                     	;# 
   199  0016                     	;# 
   200  0016                     	;# 
   201  0017                     	;# 
   202  0018                     	;# 
   203  0019                     	;# 
   204  001A                     	;# 
   205  001B                     	;# 
   206  001C                     	;# 
   207  001E                     	;# 
   208  001F                     	;# 
   209  008C                     	;# 
   210  0091                     	;# 
   211  0092                     	;# 
   212  0095                     	;# 
   213  0096                     	;# 
   214  0097                     	;# 
   215  0098                     	;# 
   216  0099                     	;# 
   217  009A                     	;# 
   218  009B                     	;# 
   219  009B                     	;# 
   220  009C                     	;# 
   221  009D                     	;# 
   222  009E                     	;# 
   223  010C                     	;# 
   224  0111                     	;# 
   225  0112                     	;# 
   226  0115                     	;# 
   227  0116                     	;# 
   228  0117                     	;# 
   229  0118                     	;# 
   230  0119                     	;# 
   231  011A                     	;# 
   232  011B                     	;# 
   233  011D                     	;# 
   234  011D                     	;# 
   235  018C                     	;# 
   236  0191                     	;# 
   237  0191                     	;# 
   238  0192                     	;# 
   239  0193                     	;# 
   240  0193                     	;# 
   241  0193                     	;# 
   242  0194                     	;# 
   243  0195                     	;# 
   244  0196                     	;# 
   245  0199                     	;# 
   246  019A                     	;# 
   247  019B                     	;# 
   248  019B                     	;# 
   249  019B                     	;# 
   250  019B                     	;# 
   251  019C                     	;# 
   252  019C                     	;# 
   253  019D                     	;# 
   254  019E                     	;# 
   255  019F                     	;# 
   256  020C                     	;# 
   257  0211                     	;# 
   258  0211                     	;# 
   259  0212                     	;# 
   260  0212                     	;# 
   261  0213                     	;# 
   262  0213                     	;# 
   263  0214                     	;# 
   264  0214                     	;# 
   265  0215                     	;# 
   266  0215                     	;# 
   267  0215                     	;# 
   268  0216                     	;# 
   269  0216                     	;# 
   270  0217                     	;# 
   271  0217                     	;# 
   272  0291                     	;# 
   273  0291                     	;# 
   274  0292                     	;# 
   275  0293                     	;# 
   276  0294                     	;# 
   277  0295                     	;# 
   278  0295                     	;# 
   279  0296                     	;# 
   280  0391                     	;# 
   281  0392                     	;# 
   282  0393                     	;# 
   283  039A                     	;# 
   284  039C                     	;# 
   285  039D                     	;# 
   286  039E                     	;# 
   287  039F                     	;# 
   288  0FE4                     	;# 
   289  0FE5                     	;# 
   290  0FE6                     	;# 
   291  0FE7                     	;# 
   292  0FE8                     	;# 
   293  0FE9                     	;# 
   294  0FEA                     	;# 
   295  0FEB                     	;# 
   296  0FED                     	;# 
   297  0FEE                     	;# 
   298  0FEF                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  0011                     	;# 
   313  0012                     	;# 
   314  0015                     	;# 
   315  0016                     	;# 
   316  0016                     	;# 
   317  0017                     	;# 
   318  0018                     	;# 
   319  0019                     	;# 
   320  001A                     	;# 
   321  001B                     	;# 
   322  001C                     	;# 
   323  001E                     	;# 
   324  001F                     	;# 
   325  008C                     	;# 
   326  0091                     	;# 
   327  0092                     	;# 
   328  0095                     	;# 
   329  0096                     	;# 
   330  0097                     	;# 
   331  0098                     	;# 
   332  0099                     	;# 
   333  009A                     	;# 
   334  009B                     	;# 
   335  009B                     	;# 
   336  009C                     	;# 
   337  009D                     	;# 
   338  009E                     	;# 
   339  010C                     	;# 
   340  0111                     	;# 
   341  0112                     	;# 
   342  0115                     	;# 
   343  0116                     	;# 
   344  0117                     	;# 
   345  0118                     	;# 
   346  0119                     	;# 
   347  011A                     	;# 
   348  011B                     	;# 
   349  011D                     	;# 
   350  011D                     	;# 
   351  018C                     	;# 
   352  0191                     	;# 
   353  0191                     	;# 
   354  0192                     	;# 
   355  0193                     	;# 
   356  0193                     	;# 
   357  0193                     	;# 
   358  0194                     	;# 
   359  0195                     	;# 
   360  0196                     	;# 
   361  0199                     	;# 
   362  019A                     	;# 
   363  019B                     	;# 
   364  019B                     	;# 
   365  019B                     	;# 
   366  019B                     	;# 
   367  019C                     	;# 
   368  019C                     	;# 
   369  019D                     	;# 
   370  019E                     	;# 
   371  019F                     	;# 
   372  020C                     	;# 
   373  0211                     	;# 
   374  0211                     	;# 
   375  0212                     	;# 
   376  0212                     	;# 
   377  0213                     	;# 
   378  0213                     	;# 
   379  0214                     	;# 
   380  0214                     	;# 
   381  0215                     	;# 
   382  0215                     	;# 
   383  0215                     	;# 
   384  0216                     	;# 
   385  0216                     	;# 
   386  0217                     	;# 
   387  0217                     	;# 
   388  0291                     	;# 
   389  0291                     	;# 
   390  0292                     	;# 
   391  0293                     	;# 
   392  0294                     	;# 
   393  0295                     	;# 
   394  0295                     	;# 
   395  0296                     	;# 
   396  0391                     	;# 
   397  0392                     	;# 
   398  0393                     	;# 
   399  039A                     	;# 
   400  039C                     	;# 
   401  039D                     	;# 
   402  039E                     	;# 
   403  039F                     	;# 
   404  0FE4                     	;# 
   405  0FE5                     	;# 
   406  0FE6                     	;# 
   407  0FE7                     	;# 
   408  0FE8                     	;# 
   409  0FE9                     	;# 
   410  0FEA                     	;# 
   411  0FEB                     	;# 
   412  0FED                     	;# 
   413  0FEE                     	;# 
   414  0FEF                     	;# 
   415  0000                     	;# 
   416  0001                     	;# 
   417  0002                     	;# 
   418  0003                     	;# 
   419  0004                     	;# 
   420  0005                     	;# 
   421  0006                     	;# 
   422  0007                     	;# 
   423  0008                     	;# 
   424  0009                     	;# 
   425  000A                     	;# 
   426  000B                     	;# 
   427  000C                     	;# 
   428  0011                     	;# 
   429  0012                     	;# 
   430  0015                     	;# 
   431  0016                     	;# 
   432  0016                     	;# 
   433  0017                     	;# 
   434  0018                     	;# 
   435  0019                     	;# 
   436  001A                     	;# 
   437  001B                     	;# 
   438  001C                     	;# 
   439  001E                     	;# 
   440  001F                     	;# 
   441  008C                     	;# 
   442  0091                     	;# 
   443  0092                     	;# 
   444  0095                     	;# 
   445  0096                     	;# 
   446  0097                     	;# 
   447  0098                     	;# 
   448  0099                     	;# 
   449  009A                     	;# 
   450  009B                     	;# 
   451  009B                     	;# 
   452  009C                     	;# 
   453  009D                     	;# 
   454  009E                     	;# 
   455  010C                     	;# 
   456  0111                     	;# 
   457  0112                     	;# 
   458  0115                     	;# 
   459  0116                     	;# 
   460  0117                     	;# 
   461  0118                     	;# 
   462  0119                     	;# 
   463  011A                     	;# 
   464  011B                     	;# 
   465  011D                     	;# 
   466  011D                     	;# 
   467  018C                     	;# 
   468  0191                     	;# 
   469  0191                     	;# 
   470  0192                     	;# 
   471  0193                     	;# 
   472  0193                     	;# 
   473  0193                     	;# 
   474  0194                     	;# 
   475  0195                     	;# 
   476  0196                     	;# 
   477  0199                     	;# 
   478  019A                     	;# 
   479  019B                     	;# 
   480  019B                     	;# 
   481  019B                     	;# 
   482  019B                     	;# 
   483  019C                     	;# 
   484  019C                     	;# 
   485  019D                     	;# 
   486  019E                     	;# 
   487  019F                     	;# 
   488  020C                     	;# 
   489  0211                     	;# 
   490  0211                     	;# 
   491  0212                     	;# 
   492  0212                     	;# 
   493  0213                     	;# 
   494  0213                     	;# 
   495  0214                     	;# 
   496  0214                     	;# 
   497  0215                     	;# 
   498  0215                     	;# 
   499  0215                     	;# 
   500  0216                     	;# 
   501  0216                     	;# 
   502  0217                     	;# 
   503  0217                     	;# 
   504  0291                     	;# 
   505  0291                     	;# 
   506  0292                     	;# 
   507  0293                     	;# 
   508  0294                     	;# 
   509  0295                     	;# 
   510  0295                     	;# 
   511  0296                     	;# 
   512  0391                     	;# 
   513  0392                     	;# 
   514  0393                     	;# 
   515  039A                     	;# 
   516  039C                     	;# 
   517  039D                     	;# 
   518  039E                     	;# 
   519  039F                     	;# 
   520  0FE4                     	;# 
   521  0FE5                     	;# 
   522  0FE6                     	;# 
   523  0FE7                     	;# 
   524  0FE8                     	;# 
   525  0FE9                     	;# 
   526  0FEA                     	;# 
   527  0FEB                     	;# 
   528  0FED                     	;# 
   529  0FEE                     	;# 
   530  0FEF                     	;# 
   531  0011                     _PIR1bits	set	17
   532  001C                     _T2CONbits	set	28
   533  000C                     _PORTAbits	set	12
   534  0012                     _PIR2	set	18
   535  0011                     _PIR1	set	17
   536  000B                     _INTCONbits	set	11
   537  0059                     _INTF	set	89
   538  005C                     _INTE	set	92
   539  0097                     _WDTCONbits	set	151
   540  009B                     _ADRESL	set	155
   541  009C                     _ADRESH	set	156
   542  009D                     _ADCON0bits	set	157
   543  009E                     _ADCON1bits	set	158
   544  0091                     _PIE1bits	set	145
   545  0095                     _OPTION_REGbits	set	149
   546  008C                     _TRISAbits	set	140
   547  0099                     _OSCCONbits	set	153
   548  0117                     _FVRCONbits	set	279
   549  010C                     _LATAbits	set	268
   550  011A                     _SRCON0bits	set	282
   551  0111                     _CM1CON0bits	set	273
   552  0117                     _FVRCON	set	279
   553  019E                     _TXSTAbits	set	414
   554  019D                     _RCSTAbits	set	413
   555  018C                     _ANSELAbits	set	396
   556  018C                     _ANSELA	set	396
   557  0215                     _SSP1CON1bits	set	533
   558  020C                     _WPUAbits	set	524
   559  039E                     _MDCARLbits	set	926
   560  0393                     _IOCAF	set	915
   561  039D                     _MDSRCbits	set	925
   562  039C                     _MDCONbits	set	924
   563  039F                     _MDCARHbits	set	927
   564                           
   565                           	psect	cinit
   566  0075                     start_initialization:	
   567                           ; #config settings
   568                           
   569  0075                     __initialization:
   570                           
   571                           ; Clear objects allocated to BITCOMMON
   572  0075  01F0               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   573  0076  01F1               	clrf	((__pbitbssCOMMON/(0+8)+1))& (0+127)
   574  0077  01F2               	clrf	((__pbitbssCOMMON/(0+8)+2))& (0+127)
   575                           
   576                           ; Clear objects allocated to COMMON
   577  0078  01FC               	clrf	__pbssCOMMON& (0+127)
   578  0079  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   579                           
   580                           ; Clear objects allocated to BITBANK0
   581  007A  0020               	movlb	0	; select bank0
   582  007B  01A1               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   583  007C  01A2               	clrf	((__pbitbssBANK0/(0+8)+1))& (0+127)
   584  007D  01A3               	clrf	((__pbitbssBANK0/(0+8)+2))& (0+127)
   585  007E  01A4               	clrf	((__pbitbssBANK0/(0+8)+3))& (0+127)
   586  007F  01A5               	clrf	((__pbitbssBANK0/(0+8)+4))& (0+127)
   587                           
   588                           ; Clear objects allocated to BANK0
   589  0080  3026               	movlw	low __pbssBANK0
   590  0081  0084               	movwf	4
   591  0082  3000               	movlw	high __pbssBANK0
   592  0083  0085               	movwf	5
   593  0084  301A               	movlw	26
   594  0085  3183  23FF  3180   	fcall	clear_ram0
   595  0088                     end_of_initialization:	
   596                           ;End of C runtime variable initialization code
   597                           
   598  0088                     __end_of__initialization:
   599  0088  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   600  0089  0020               	movlb	0
   601  008A  29F4               	ljmp	_main	;jump to C main() function
   602                           
   603                           	psect	bitbssCOMMON
   604  0380                     __pbitbssCOMMON:
   605  0380                     __ccovbit1_21:
   606  0380                     	ds	1
   607  0381                     __ccovbit1_20:
   608  0381                     	ds	1
   609  0382                     __ccovbit1_19:
   610  0382                     	ds	1
   611  0383                     __ccovbit1_18:
   612  0383                     	ds	1
   613  0384                     __ccovbit1_17:
   614  0384                     	ds	1
   615  0385                     __ccovbit1_16:
   616  0385                     	ds	1
   617  0386                     __ccovbit1_15:
   618  0386                     	ds	1
   619  0387                     __ccovbit1_14:
   620  0387                     	ds	1
   621  0388                     __ccovbit1_13:
   622  0388                     	ds	1
   623  0389                     __ccovbit1_12:
   624  0389                     	ds	1
   625  038A                     __ccovbit22_11:
   626  038A                     	ds	1
   627  038B                     __ccovbit17_10:
   628  038B                     	ds	1
   629  038C                     __ccovbit14_9:
   630  038C                     	ds	1
   631  038D                     __ccovbit10_8:
   632  038D                     	ds	1
   633  038E                     __ccovbit6_7:
   634  038E                     	ds	1
   635  038F                     __ccovbit2_6:
   636  038F                     	ds	1
   637  0390                     __ccovbit18_5:
   638  0390                     	ds	1
   639  0391                     __ccovbit3_4:
   640  0391                     	ds	1
   641  0392                     __ccovbit68_3:
   642  0392                     	ds	1
   643  0393                     __ccovbit65_2:
   644  0393                     	ds	1
   645  0394                     __ccovbit50_1:
   646  0394                     	ds	1
   647  0395                     main@output_polarity:
   648  0395                     	ds	1
   649  0396                     _NewDoorPolarity:
   650  0396                     	ds	1
   651  0397                     _NewStateChangeDetected:
   652  0397                     	ds	1
   653                           
   654                           	psect	bssCOMMON
   655  007C                     __pbssCOMMON:
   656  007C                     _BatteryVoltage:
   657  007C                     	ds	2
   658                           
   659                           	psect	bitbssBANK0
   660  0108                     __pbitbssBANK0:
   661  0108                     __ccovbit82_54:
   662  0108                     	ds	1
   663  0109                     __ccovbit71_53:
   664  0109                     	ds	1
   665  010A                     __ccovbit70_52:
   666  010A                     	ds	1
   667  010B                     __ccovbit68_51:
   668  010B                     	ds	1
   669  010C                     __ccovbit67_50:
   670  010C                     	ds	1
   671  010D                     __ccovbit51_49:
   672  010D                     	ds	1
   673  010E                     __ccovbit48_48:
   674  010E                     	ds	1
   675  010F                     __ccovbit46_47:
   676  010F                     	ds	1
   677  0110                     __ccovbit41_46:
   678  0110                     	ds	1
   679  0111                     __ccovbit40_45:
   680  0111                     	ds	1
   681  0112                     __ccovbit38_44:
   682  0112                     	ds	1
   683  0113                     __ccovbit33_43:
   684  0113                     	ds	1
   685  0114                     __ccovbit29_42:
   686  0114                     	ds	1
   687  0115                     __ccovbit28_41:
   688  0115                     	ds	1
   689  0116                     __ccovbit22_40:
   690  0116                     	ds	1
   691  0117                     __ccovbit19_39:
   692  0117                     	ds	1
   693  0118                     __ccovbit17_38:
   694  0118                     	ds	1
   695  0119                     __ccovbit14_37:
   696  0119                     	ds	1
   697  011A                     __ccovbit11_36:
   698  011A                     	ds	1
   699  011B                     __ccovbit10_35:
   700  011B                     	ds	1
   701  011C                     __ccovbit8_34:
   702  011C                     	ds	1
   703  011D                     __ccovbit7_33:
   704  011D                     	ds	1
   705  011E                     __ccovbit6_32:
   706  011E                     	ds	1
   707  011F                     __ccovbit4_31:
   708  011F                     	ds	1
   709  0120                     __ccovbit3_30:
   710  0120                     	ds	1
   711  0121                     __ccovbit22_29:
   712  0121                     	ds	1
   713  0122                     __ccovbit19_28:
   714  0122                     	ds	1
   715  0123                     __ccovbit17_27:
   716  0123                     	ds	1
   717  0124                     __ccovbit15_26:
   718  0124                     	ds	1
   719  0125                     __ccovbit13_25:
   720  0125                     	ds	1
   721  0126                     __ccovbit11_24:
   722  0126                     	ds	1
   723  0127                     __ccovbit7_23:
   724  0127                     	ds	1
   725  0128                     __ccovbit3_22:
   726  0128                     	ds	1
   727                           
   728                           	psect	bssBANK0
   729  0026                     __pbssBANK0:
   730  0026                     _WakeUpCounter:
   731  0026                     	ds	2
   732  0028                     _sleep_256s_counter:
   733  0028                     	ds	2
   734  002A                     _sleep_4s_counter:
   735  002A                     	ds	2
   736  002C                     _sleep_1s_counter:
   737  002C                     	ds	2
   738  002E                     _sleep_256ms_counter:
   739  002E                     	ds	2
   740  0030                     _sleep_128ms_counter:
   741  0030                     	ds	2
   742  0032                     _sleep_64ms_counter:
   743  0032                     	ds	2
   744  0034                     _ihcPulseTimer:
   745  0034                     	ds	2
   746  0036                     _prelCounter:
   747  0036                     	ds	2
   748  0038                     _millivolts:
   749  0038                     	ds	2
   750  003A                     _state_selftest:
   751  003A                     	ds	1
   752  003B                     _state_output_pulse:
   753  003B                     	ds	1
   754  003C                     _DoorStateAfterPrel:
   755  003C                     	ds	1
   756  003D                     _DoorStateBeforePrel:
   757  003D                     	ds	1
   758  003E                     _state_machine:
   759  003E                     	ds	1
   760  003F                     _state_door:
   761  003F                     	ds	1
   762                           
   763                           	psect	clrtext
   764  03FF                     clear_ram0:	
   765                           ;	Called with FSR0 containing the base address, and
   766                           ;	WREG with the size to clear
   767                           
   768  03FF  0064               	clrwdt	;clear the watchdog before getting into this loop
   769  0400                     clrloop0:
   770  0400  0180               	clrf	0	;clear RAM location pointed to by FSR
   771  0401  3101               	addfsr 0,1
   772  0402  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   773  0403  2C00               	goto	clrloop0	;have we reached the end yet?
   774  0404  3400               	retlw	0	;all done for this memory range, return
   775                           
   776                           	psect	cstackCOMMON
   777  0073                     __pcstackCOMMON:
   778  0073                     ?_timer2_init:
   779  0073                     ?_disable_watchdog_timer:	
   780                           ; 1 bytes @ 0x0
   781                           
   782  0073                     ?_enable_external_interrupt:	
   783                           ; 1 bytes @ 0x0
   784                           
   785  0073                     ?_set_watchdog_timer_128ms:	
   786                           ; 1 bytes @ 0x0
   787                           
   788  0073                     ?_checkState1:	
   789                           ; 1 bytes @ 0x0
   790                           
   791  0073                     ?_watch_dog_incrementing_timer:	
   792                           ; 1 bytes @ 0x0
   793                           
   794  0073                     ?_set_watchdog_timer_256ms:	
   795                           ; 1 bytes @ 0x0
   796                           
   797  0073                     ?_set_watchdog_timer_1s:	
   798                           ; 1 bytes @ 0x0
   799                           
   800  0073                     ?_set_watchdog_timer_4s:	
   801                           ; 1 bytes @ 0x0
   802                           
   803  0073                     ?_set_watchdog_timer_256s:	
   804                           ; 1 bytes @ 0x0
   805                           
   806  0073                     ?_main:	
   807                           ; 1 bytes @ 0x0
   808                           
   809  0073                     ?_enable_watchdog_timer:	
   810                           ; 1 bytes @ 0x0
   811                           
   812  0073                     ?_disable_external_interrupt:	
   813                           ; 1 bytes @ 0x0
   814                           
   815  0073                     ?_my_isr:	
   816                           ; 1 bytes @ 0x0
   817                           
   818  0073                     ??_my_isr:	
   819                           ; 1 bytes @ 0x0
   820                           
   821                           
   822                           ; 1 bytes @ 0x0
   823  0073                     	ds	2
   824  0075                     ??_timer2_init:
   825  0075                     ??_disable_watchdog_timer:	
   826                           ; 1 bytes @ 0x2
   827                           
   828  0075                     ??_enable_external_interrupt:	
   829                           ; 1 bytes @ 0x2
   830                           
   831  0075                     ??_set_watchdog_timer_128ms:	
   832                           ; 1 bytes @ 0x2
   833                           
   834  0075                     ??_watch_dog_incrementing_timer:	
   835                           ; 1 bytes @ 0x2
   836                           
   837  0075                     ??_set_watchdog_timer_256ms:	
   838                           ; 1 bytes @ 0x2
   839                           
   840  0075                     ??_set_watchdog_timer_1s:	
   841                           ; 1 bytes @ 0x2
   842                           
   843  0075                     ??_set_watchdog_timer_4s:	
   844                           ; 1 bytes @ 0x2
   845                           
   846  0075                     ??_set_watchdog_timer_256s:	
   847                           ; 1 bytes @ 0x2
   848                           
   849  0075                     ??_enable_watchdog_timer:	
   850                           ; 1 bytes @ 0x2
   851                           
   852  0075                     ??_disable_external_interrupt:	
   853                           ; 1 bytes @ 0x2
   854                           
   855  0075                     ?_getBatteryVoltage:	
   856                           ; 1 bytes @ 0x2
   857                           
   858  0075                     ?___awdiv:	
   859                           ; 2 bytes @ 0x2
   860                           
   861  0075                     ___awdiv@divisor:	
   862                           ; 2 bytes @ 0x2
   863                           
   864                           
   865                           ; 2 bytes @ 0x2
   866  0075                     	ds	2
   867  0077                     ??_getBatteryVoltage:
   868  0077                     ___awdiv@dividend:	
   869                           ; 1 bytes @ 0x4
   870                           
   871                           
   872                           ; 2 bytes @ 0x4
   873  0077                     	ds	2
   874  0079                     ??___awdiv:
   875                           
   876                           ; 1 bytes @ 0x6
   877  0079                     	ds	1
   878  007A                     getBatteryVoltage@adc_val:
   879                           
   880                           ; 2 bytes @ 0x7
   881  007A                     	ds	2
   882                           
   883                           	psect	cstackBANK0
   884  0040                     __pcstackBANK0:
   885  0040                     ___awdiv@counter:
   886                           
   887                           ; 1 bytes @ 0x0
   888  0040                     	ds	1
   889  0041                     ___awdiv@sign:
   890                           
   891                           ; 1 bytes @ 0x1
   892  0041                     	ds	1
   893  0042                     ___awdiv@quotient:
   894                           
   895                           ; 2 bytes @ 0x2
   896  0042                     	ds	2
   897  0044                     ??_checkState1:
   898                           
   899                           ; 1 bytes @ 0x4
   900  0044                     	ds	2
   901  0046                     ??_main:
   902                           
   903                           ; 1 bytes @ 0x6
   904  0046                     	ds	2
   905                           
   906                           	psect	maintext
   907  01F4                     __pmaintext:	
   908 ;;
   909 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   910 ;;
   911 ;; *************** function _main *****************
   912 ;; Defined at:
   913 ;;		line 110 in file "main.c"
   914 ;; Parameters:    Size  Location     Type
   915 ;;		None
   916 ;; Auto vars:     Size  Location     Type
   917 ;;		None
   918 ;; Return value:  Size  Location     Type
   919 ;;                  1    wreg      void 
   920 ;; Registers used:
   921 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   922 ;; Tracked objects:
   923 ;;		On entry : B1F/0
   924 ;;		On exit  : 0/0
   925 ;;		Unchanged: 0/0
   926 ;; Data sizes:     COMMON   BANK0   BANK1
   927 ;;      Params:         0       0       0
   928 ;;      Locals:         0       0       0
   929 ;;      Temps:          0       2       0
   930 ;;      Totals:         0       2       0
   931 ;;Total ram usage:        2 bytes
   932 ;; Hardware stack levels required when called: 3
   933 ;; This function calls:
   934 ;;		___awdiv
   935 ;;		_checkState1
   936 ;;		_disable_watchdog_timer
   937 ;;		_enable_external_interrupt
   938 ;;		_getBatteryVoltage
   939 ;;		_set_watchdog_timer_128ms
   940 ;;		_timer2_init
   941 ;;		_watch_dog_incrementing_timer
   942 ;; This function is called by:
   943 ;;		Startup code after reset
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947                           
   948                           ;psect for function _main
   949  01F4                     _main:
   950                           
   951                           ;incstack = 0
   952                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   953  01F4                     l2162:
   954                           
   955                           ;main.c: 112:     static __bit output_polarity;;main.c: 122:     ANSELA = 0;
   956  01F4  0023               	movlb	3	; select bank3
   957  01F5  018C               	clrf	12	;volatile
   958  01F6                     __ccov1_end_blk0:
   959  01F6                     __ccov2_start_blk1:
   960  01F6                     l2164:
   961                           
   962                           ;main.c: 128:     OSCCONbits.IRCF = 0b1111;
   963  01F6  3078               	movlw	120
   964  01F7  0021               	movlb	1	; select bank1
   965  01F8  0499               	iorwf	25,f	;volatile
   966  01F9                     __ccov2_end_blk1:
   967  01F9                     __ccov3_start_blk2:
   968  01F9                     l2166:
   969                           
   970                           ;main.c: 129:     OSCCONbits.SPLLEN = 0;
   971  01F9  1399               	bcf	25,7	;volatile
   972  01FA                     __ccov3_end_blk2:
   973  01FA                     __ccov4_start_blk3:
   974  01FA                     l2168:
   975                           
   976                           ;main.c: 130:     OSCCONbits.SCS = 0b10;
   977  01FA  0819               	movf	25,w	;volatile
   978  01FB  39FC               	andlw	-4
   979  01FC  3802               	iorlw	2
   980  01FD  0099               	movwf	25	;volatile
   981  01FE                     __ccov4_end_blk3:
   982  01FE                     __ccov5_start_blk4:
   983  01FE                     l2170:
   984                           
   985                           ;main.c: 156:     TRISAbits.TRISA5 = 0;
   986  01FE  128C               	bcf	12,5	;volatile
   987  01FF                     __ccov5_end_blk4:
   988  01FF                     __ccov6_start_blk5:
   989  01FF                     l2172:
   990                           
   991                           ;main.c: 157:     TRISAbits.TRISA4 = 0;
   992  01FF  120C               	bcf	12,4	;volatile
   993  0200                     __ccov6_end_blk5:
   994  0200                     __ccov7_start_blk6:
   995  0200                     l2174:
   996                           
   997                           ;main.c: 158:     TRISAbits.TRISA3 = 1;
   998  0200  158C               	bsf	12,3	;volatile
   999  0201                     __ccov7_end_blk6:
  1000  0201                     __ccov8_start_blk7:
  1001  0201                     l2176:
  1002                           
  1003                           ;main.c: 159:     TRISAbits.TRISA2 = 1;
  1004  0201  150C               	bsf	12,2	;volatile
  1005  0202                     __ccov8_end_blk7:
  1006  0202                     __ccov9_start_blk8:
  1007  0202                     l2178:
  1008                           
  1009                           ;main.c: 160:     TRISAbits.TRISA1 = 0;
  1010  0202  108C               	bcf	12,1	;volatile
  1011  0203                     __ccov9_end_blk8:
  1012  0203                     __ccov10_start_blk9:
  1013  0203                     l2180:
  1014                           
  1015                           ;main.c: 161:     TRISAbits.TRISA0 = 0;
  1016  0203  100C               	bcf	12,0	;volatile
  1017  0204                     __ccov10_end_blk9:
  1018  0204                     __ccov11_start_blk10:
  1019  0204                     l2182:
  1020                           
  1021                           ;main.c: 164:     ANSELAbits.ANSA4 = 0;
  1022  0204  0023               	movlb	3	; select bank3
  1023  0205  120C               	bcf	12,4	;volatile
  1024  0206                     __ccov11_end_blk10:
  1025  0206                     __ccov12_start_blk11:
  1026  0206                     l2184:
  1027                           
  1028                           ;main.c: 165:     ANSELAbits.ANSA2 = 0;
  1029  0206  110C               	bcf	12,2	;volatile
  1030  0207                     __ccov12_end_blk11:
  1031  0207                     __ccov13_start_blk12:
  1032  0207                     l2186:
  1033                           
  1034                           ;main.c: 166:     ANSELAbits.ANSA1 = 0;
  1035  0207  108C               	bcf	12,1	;volatile
  1036  0208                     __ccov13_end_blk12:
  1037  0208                     __ccov14_start_blk13:
  1038  0208                     l2188:
  1039                           
  1040                           ;main.c: 167:     ANSELAbits.ANSA0 = 0;
  1041  0208  100C               	bcf	12,0	;volatile
  1042  0209                     __ccov14_end_blk13:
  1043  0209                     __ccov15_start_blk14:
  1044  0209                     l2190:
  1045                           
  1046                           ;main.c: 174:     OPTION_REGbits.nWPUEN = 0;
  1047  0209  0021               	movlb	1	; select bank1
  1048  020A  1395               	bcf	21,7	;volatile
  1049  020B                     __ccov15_end_blk14:
  1050  020B                     __ccov16_start_blk15:
  1051  020B                     l2192:
  1052                           
  1053                           ;main.c: 176:     WPUAbits.WPUA3 = 1;
  1054  020B  0024               	movlb	4	; select bank4
  1055  020C  158C               	bsf	12,3	;volatile
  1056  020D                     __ccov16_end_blk15:
  1057  020D                     __ccov17_start_blk16:
  1058  020D                     l2194:
  1059                           
  1060                           ;main.c: 177:     WPUAbits.WPUA2 = 0;
  1061  020D  110C               	bcf	12,2	;volatile
  1062  020E                     __ccov17_end_blk16:
  1063  020E                     __ccov18_start_blk17:
  1064  020E                     l2196:
  1065                           
  1066                           ;main.c: 184:     INTCONbits.PEIE = 1;
  1067  020E  170B               	bsf	11,6	;volatile
  1068  020F                     __ccov18_end_blk17:
  1069  020F                     __ccov19_start_blk18:
  1070  020F                     l2198:
  1071                           
  1072                           ;main.c: 186:     PIE1bits.TMR1GIE = 0;
  1073  020F  0021               	movlb	1	; select bank1
  1074  0210  1391               	bcf	17,7	;volatile
  1075  0211                     __ccov19_end_blk18:
  1076  0211                     __ccov20_start_blk19:
  1077  0211                     l2200:
  1078                           
  1079                           ;main.c: 187:     PIE1bits.SSP1IE = 0;
  1080  0211  1191               	bcf	17,3	;volatile
  1081  0212                     __ccov20_end_blk19:
  1082  0212                     __ccov21_start_blk20:
  1083  0212                     l2202:
  1084                           
  1085                           ;main.c: 189:     INTCONbits.GIE = 1;
  1086  0212  178B               	bsf	11,7	;volatile
  1087  0213                     __ccov21_end_blk20:
  1088  0213                     __ccov22_start_blk21:
  1089  0213                     l2204:
  1090                           
  1091                           ;main.c: 191:     MDCARHbits.MDCH = 0b0100;
  1092  0213  0027               	movlb	7	; select bank7
  1093  0214  081F               	movf	31,w	;volatile
  1094  0215  39F0               	andlw	-16
  1095  0216  3804               	iorlw	4
  1096  0217  009F               	movwf	31	;volatile
  1097  0218                     __ccov22_end_blk21:
  1098  0218                     __ccov23_start_blk22:
  1099  0218                     l2206:
  1100                           
  1101                           ;main.c: 192:     MDCONbits.MDEN = 0;
  1102  0218  139C               	bcf	28,7	;volatile
  1103  0219                     __ccov23_end_blk22:
  1104  0219                     __ccov24_start_blk23:
  1105  0219                     l2208:
  1106                           
  1107                           ;main.c: 193:     MDSRCbits.MDMSODIS = 1;
  1108  0219  179D               	bsf	29,7	;volatile
  1109  021A                     __ccov24_end_blk23:
  1110  021A                     __ccov25_start_blk24:
  1111  021A                     l2210:
  1112                           
  1113                           ;main.c: 195:     PIE1bits.TMR2IE = 1;
  1114  021A  0021               	movlb	1	; select bank1
  1115  021B  1491               	bsf	17,1	;volatile
  1116  021C                     __ccov25_end_blk24:
  1117  021C                     __ccov26_start_blk25:
  1118  021C                     l2212:
  1119                           
  1120                           ;main.c: 197:     PIR1 = 0;
  1121  021C  0020               	movlb	0	; select bank0
  1122  021D  0191               	clrf	17	;volatile
  1123  021E                     __ccov26_end_blk25:
  1124  021E                     __ccov27_start_blk26:
  1125  021E                     l2214:
  1126                           
  1127                           ;main.c: 198:     PIR2 = 0;
  1128  021E  0192               	clrf	18	;volatile
  1129  021F                     __ccov27_end_blk26:
  1130  021F                     __ccov28_start_blk27:
  1131  021F                     l2216:
  1132                           
  1133                           ;main.c: 205:     IOCAF = 0;
  1134  021F  0027               	movlb	7	; select bank7
  1135  0220  0193               	clrf	19	;volatile
  1136  0221                     __ccov28_end_blk27:
  1137  0221                     __ccov29_start_blk28:
  1138  0221                     l2218:
  1139                           
  1140                           ;main.c: 209:     FVRCON = 0;
  1141  0221  0022               	movlb	2	; select bank2
  1142  0222  0197               	clrf	23	;volatile
  1143  0223                     __ccov29_end_blk28:
  1144  0223                     __ccov30_start_blk29:
  1145  0223                     l2220:
  1146                           
  1147                           ;main.c: 211:     MDSRCbits.MDMS = 0b0010;
  1148  0223  0027               	movlb	7	; select bank7
  1149  0224  081D               	movf	29,w	;volatile
  1150  0225  39F0               	andlw	-16
  1151  0226  3802               	iorlw	2
  1152  0227  009D               	movwf	29	;volatile
  1153  0228                     __ccov30_end_blk29:
  1154  0228                     __ccov31_start_blk30:
  1155  0228                     l2222:
  1156                           
  1157                           ;main.c: 212:     MDCARHbits.MDCH = 0b0100;
  1158  0228  081F               	movf	31,w	;volatile
  1159  0229  39F0               	andlw	-16
  1160  022A  3804               	iorlw	4
  1161  022B  009F               	movwf	31	;volatile
  1162  022C                     __ccov31_end_blk30:
  1163  022C                     __ccov32_start_blk31:
  1164  022C                     l2224:
  1165                           
  1166                           ;main.c: 213:     MDCARLbits.MDCL = 0b0100;
  1167  022C  081E               	movf	30,w	;volatile
  1168  022D  39F0               	andlw	-16
  1169  022E  3804               	iorlw	4
  1170  022F  009E               	movwf	30	;volatile
  1171  0230                     __ccov32_end_blk31:
  1172  0230                     __ccov33_start_blk32:
  1173  0230                     l2226:
  1174                           
  1175                           ;main.c: 215:     SSP1CON1bits.SSPEN = 0;
  1176  0230  0024               	movlb	4	; select bank4
  1177  0231  1295               	bcf	21,5	;volatile
  1178  0232                     __ccov33_end_blk32:
  1179  0232                     __ccov34_start_blk33:
  1180  0232                     l2228:
  1181                           
  1182                           ;main.c: 216:     RCSTAbits.SPEN = 0;
  1183  0232  0023               	movlb	3	; select bank3
  1184  0233  139D               	bcf	29,7	;volatile
  1185  0234                     __ccov34_end_blk33:
  1186  0234                     __ccov35_start_blk34:
  1187  0234                     l2230:
  1188                           
  1189                           ;main.c: 218:     CM1CON0bits.C1ON = 0;
  1190  0234  0022               	movlb	2	; select bank2
  1191  0235  1391               	bcf	17,7	;volatile
  1192  0236                     __ccov35_end_blk34:
  1193  0236                     __ccov36_start_blk35:
  1194  0236                     l2232:
  1195                           
  1196                           ;main.c: 222:     SRCON0bits.SRLEN = 0;
  1197  0236  139A               	bcf	26,7	;volatile
  1198  0237                     __ccov36_end_blk35:
  1199  0237                     __ccov37_start_blk36:
  1200  0237                     l2234:
  1201                           
  1202                           ;main.c: 224:     RCSTAbits.SREN = 0;
  1203  0237  0023               	movlb	3	; select bank3
  1204  0238  129D               	bcf	29,5	;volatile
  1205  0239                     __ccov37_end_blk36:
  1206  0239                     __ccov38_start_blk37:
  1207  0239                     l2236:
  1208                           
  1209                           ;main.c: 225:     TXSTAbits.TXEN = 0;
  1210  0239  129E               	bcf	30,5	;volatile
  1211  023A                     __ccov38_end_blk37:
  1212  023A                     __ccov39_start_blk38:
  1213  023A                     l2238:
  1214                           
  1215                           ;main.c: 227:     timer2_init();
  1216  023A  3183  23CD  3181   	fcall	_timer2_init
  1217  023D                     __ccov39_end_blk38:
  1218  023D                     __ccov40_start_blk39:
  1219  023D                     l2240:
  1220                           
  1221                           ;main.c: 241:    disable_watchdog_timer();
  1222  023D  3184  2409  3181   	fcall	_disable_watchdog_timer
  1223  0240                     __ccov40_end_blk39:
  1224  0240                     __ccov41_start_blk40:
  1225  0240                     l2242:
  1226                           
  1227                           ;main.c: 246:      _delay((unsigned long)((200)*(16000000/4000.0)));
  1228  0240  3005               	movlw	5
  1229  0241  0020               	movlb	0	; select bank0
  1230  0242  00C7               	movwf	??_main+1
  1231  0243  300F               	movlw	15
  1232  0244  00C6               	movwf	??_main
  1233  0245  30F1               	movlw	241
  1234  0246                     u757:
  1235  0246  0B89               	decfsz	9,f
  1236  0247  2A46               	goto	u757
  1237  0248  0BC6               	decfsz	??_main,f
  1238  0249  2A46               	goto	u757
  1239  024A  0BC7               	decfsz	??_main+1,f
  1240  024B  2A46               	goto	u757
  1241  024C                     __ccov41_end_blk40:
  1242  024C                     __ccov42_start_blk41:
  1243  024C                     l2244:
  1244                           
  1245                           ;main.c: 248:     NewStateChangeDetected = 0;
  1246  024C  13F2               	bcf	_NewStateChangeDetected/(0+8),_NewStateChangeDetected& (0+7)
  1247  024D                     __ccov42_end_blk41:
  1248  024D                     __ccov43_start_blk42:
  1249  024D                     l2246:
  1250                           
  1251                           ;main.c: 251:     state_door = PORTAbits.RA2;
  1252  024D  3000               	movlw	0
  1253  024E  0020               	movlb	0	; select bank0
  1254  024F  190C               	btfsc	12,2	;volatile
  1255  0250  3001               	movlw	1
  1256  0251  00BF               	movwf	_state_door
  1257  0252                     __ccov43_end_blk42:
  1258  0252                     __ccov44_start_blk43:
  1259  0252                     l2248:
  1260                           
  1261                           ;main.c: 252:     state_machine = STATE_JUST_AWAKED;
  1262  0252  01BE               	clrf	_state_machine
  1263  0253                     __ccov44_end_blk43:
  1264  0253                     __ccov45_start_blk44:
  1265  0253                     l2250:
  1266                           
  1267                           ;main.c: 255:     BatteryVoltage = getBatteryVoltage();
  1268  0253  3183  2397  3181   	fcall	_getBatteryVoltage
  1269  0256  0876               	movf	?_getBatteryVoltage+1,w
  1270  0257  00FD               	movwf	_BatteryVoltage+1	;volatile
  1271  0258  0875               	movf	?_getBatteryVoltage,w
  1272  0259  00FC               	movwf	_BatteryVoltage	;volatile
  1273  025A                     __ccov45_end_blk44:
  1274  025A                     __ccov46_start_blk45:
  1275  025A                     l2252:
  1276                           
  1277                           ;main.c: 256:     millivolts = (8192 / BatteryVoltage) * 1024;
  1278  025A  087D               	movf	_BatteryVoltage+1,w	;volatile
  1279  025B  00F6               	movwf	___awdiv@divisor+1
  1280  025C  087C               	movf	_BatteryVoltage,w	;volatile
  1281  025D  00F5               	movwf	___awdiv@divisor
  1282  025E  3000               	movlw	0
  1283  025F  00F7               	movwf	___awdiv@dividend
  1284  0260  3020               	movlw	32
  1285  0261  00F8               	movwf	___awdiv@dividend+1
  1286  0262  3183  2337  3181   	fcall	___awdiv
  1287  0265  0875               	movf	?___awdiv,w
  1288  0266  0020               	movlb	0	; select bank0
  1289  0267  00C6               	movwf	??_main
  1290  0268  0876               	movf	?___awdiv+1,w
  1291  0269  00C7               	movwf	??_main+1
  1292  026A  300A               	movlw	10
  1293  026B                     u725:
  1294  026B  35C6               	lslf	??_main,f
  1295  026C  0DC7               	rlf	??_main+1,f
  1296  026D  0B89               	decfsz	9,f
  1297  026E  2A6B               	goto	u725
  1298  026F  0846               	movf	??_main,w
  1299  0270  00B8               	movwf	_millivolts	;volatile
  1300  0271  0847               	movf	??_main+1,w
  1301  0272  00B9               	movwf	_millivolts+1	;volatile
  1302  0273                     __ccov46_end_blk45:
  1303  0273                     __ccov47_start_blk46:
  1304  0273                     l2254:
  1305                           
  1306                           ;main.c: 257:     millivolts = millivolts /8;
  1307  0273  3008               	movlw	8
  1308  0274  00F5               	movwf	___awdiv@divisor
  1309  0275  3000               	movlw	0
  1310  0276  00F6               	movwf	___awdiv@divisor+1
  1311  0277  0839               	movf	_millivolts+1,w	;volatile
  1312  0278  00F8               	movwf	___awdiv@dividend+1
  1313  0279  0838               	movf	_millivolts,w	;volatile
  1314  027A  00F7               	movwf	___awdiv@dividend
  1315  027B  3183  2337  3181   	fcall	___awdiv
  1316  027E  0876               	movf	?___awdiv+1,w
  1317  027F  0020               	movlb	0	; select bank0
  1318  0280  00B9               	movwf	_millivolts+1	;volatile
  1319  0281  0875               	movf	?___awdiv,w
  1320  0282  00B8               	movwf	_millivolts	;volatile
  1321  0283                     __ccov47_end_blk46:
  1322  0283                     __ccov48_start_blk47:
  1323  0283                     l2256:
  1324                           
  1325                           ;main.c: 258:     if (BatteryVoltage <= 2400) {
  1326  0283  087D               	movf	_BatteryVoltage+1,w	;volatile
  1327  0284  3A80               	xorlw	128
  1328  0285  00C6               	movwf	??_main
  1329  0286  3089               	movlw	137
  1330  0287  0246               	subwf	??_main,w
  1331  0288  1D03               	skipz
  1332  0289  2A8C               	goto	u735
  1333  028A  3061               	movlw	97
  1334  028B  027C               	subwf	_BatteryVoltage,w	;volatile
  1335  028C                     u735:
  1336  028C  1803               	skipnc
  1337  028D  2A8F               	goto	u731
  1338  028E  2A90               	goto	u730
  1339  028F                     u731:
  1340  028F  2A9E               	goto	l2264
  1341  0290                     __ccov48_end_blk47:
  1342  0290                     u730:
  1343  0290                     __ccov49_start_blk48:
  1344  0290                     l2258:
  1345                           
  1346                           ;main.c: 260:         LATAbits.LATA4 = 1;
  1347  0290  0022               	movlb	2	; select bank2
  1348  0291  160C               	bsf	12,4	;volatile
  1349  0292                     __ccov49_end_blk48:
  1350  0292                     __ccov50_start_blk49:
  1351  0292                     l2260:
  1352                           
  1353                           ;main.c: 261:         _delay((unsigned long)((5*8)*(16000000/4000.0)));
  1354  0292  30D0               	movlw	208
  1355  0293  0020               	movlb	0	; select bank0
  1356  0294  00C6               	movwf	??_main
  1357  0295  30C9               	movlw	201
  1358  0296                     u767:
  1359  0296  0B89               	decfsz	9,f
  1360  0297  2A96               	goto	u767
  1361  0298  0BC6               	decfsz	??_main,f
  1362  0299  2A96               	goto	u767
  1363  029A  3200               	nop2
  1364  029B                     __ccov50_end_blk49:
  1365  029B                     __ccov51_start_blk50:
  1366  029B                     l2262:
  1367  029B  1672               	bsf	__ccovbit50_1/(0+8),__ccovbit50_1& (0+7)	;volatile
  1368                           
  1369                           ;main.c: 262:         LATAbits.LATA4 = !1;
  1370  029C  0022               	movlb	2	; select bank2
  1371  029D  120C               	bcf	12,4	;volatile
  1372  029E                     __ccov51_end_blk50:
  1373  029E                     __ccov52_start_blk52:
  1374  029E                     l2264:
  1375                           
  1376                           ;main.c: 265:     DoorStateBeforePrel = PORTAbits.RA2;
  1377  029E  3000               	movlw	0
  1378  029F  0020               	movlb	0	; select bank0
  1379  02A0  190C               	btfsc	12,2	;volatile
  1380  02A1  3001               	movlw	1
  1381  02A2  00BD               	movwf	_DoorStateBeforePrel
  1382  02A3                     __ccov52_end_blk52:
  1383  02A3                     __ccov53_start_blk53:
  1384  02A3                     l2266:
  1385                           
  1386                           ;main.c: 266:     DoorStateAfterPrel = PORTAbits.RA2;
  1387  02A3  3000               	movlw	0
  1388  02A4  190C               	btfsc	12,2	;volatile
  1389  02A5  3001               	movlw	1
  1390  02A6  00BC               	movwf	_DoorStateAfterPrel
  1391  02A7                     __ccov53_end_blk53:
  1392  02A7                     __ccov54_start_blk54:
  1393  02A7                     l2268:
  1394                           
  1395                           ;main.c: 268:     INTCONbits.INTF = 0;
  1396  02A7  108B               	bcf	11,1	;volatile
  1397  02A8                     __ccov54_end_blk54:
  1398  02A8                     __ccov55_start_blk55:
  1399  02A8                     l2270:
  1400                           
  1401                           ;main.c: 269:     INTCONbits.GIE = 1;
  1402  02A8  178B               	bsf	11,7	;volatile
  1403  02A9                     __ccov55_end_blk55:
  1404  02A9                     __ccov56_start_blk56:
  1405  02A9                     l2272:
  1406                           
  1407                           ;main.c: 271:     enable_external_interrupt();
  1408  02A9  3184  240D  3181   	fcall	_enable_external_interrupt
  1409  02AC                     __ccov56_end_blk56:
  1410  02AC                     __ccov57_start_blk57:
  1411  02AC                     l2274:
  1412                           
  1413                           ;main.c: 274:     sleep_128ms_counter = 0;
  1414  02AC  0020               	movlb	0	; select bank0
  1415  02AD  01B0               	clrf	_sleep_128ms_counter	;volatile
  1416  02AE  01B1               	clrf	_sleep_128ms_counter+1	;volatile
  1417  02AF                     __ccov57_end_blk57:
  1418  02AF                     __ccov58_start_blk58:
  1419  02AF                     l2276:
  1420                           
  1421                           ;main.c: 275:     sleep_256ms_counter = 0;
  1422  02AF  01AE               	clrf	_sleep_256ms_counter	;volatile
  1423  02B0  01AF               	clrf	_sleep_256ms_counter+1	;volatile
  1424  02B1                     __ccov58_end_blk58:
  1425  02B1                     __ccov59_start_blk59:
  1426  02B1                     l2278:
  1427                           
  1428                           ;main.c: 276:     sleep_1s_counter = 0;
  1429  02B1  01AC               	clrf	_sleep_1s_counter	;volatile
  1430  02B2  01AD               	clrf	_sleep_1s_counter+1	;volatile
  1431  02B3                     __ccov59_end_blk59:
  1432  02B3                     __ccov60_start_blk60:
  1433  02B3                     l2280:
  1434                           
  1435                           ;main.c: 277:     sleep_4s_counter = 0;
  1436  02B3  01AA               	clrf	_sleep_4s_counter	;volatile
  1437  02B4  01AB               	clrf	_sleep_4s_counter+1	;volatile
  1438  02B5                     __ccov60_end_blk60:
  1439  02B5                     __ccov61_start_blk61:
  1440  02B5                     l2282:
  1441                           
  1442                           ;main.c: 278:     sleep_256s_counter = 0;
  1443  02B5  01A8               	clrf	_sleep_256s_counter	;volatile
  1444  02B6  01A9               	clrf	_sleep_256s_counter+1	;volatile
  1445  02B7                     __ccov61_end_blk61:
  1446  02B7                     __ccov62_start_blk62:
  1447  02B7                     l2284:
  1448                           
  1449                           ;main.c: 279:     set_watchdog_timer_128ms();
  1450  02B7  3183  23F8  3181   	fcall	_set_watchdog_timer_128ms
  1451  02BA                     __ccov62_end_blk62:
  1452  02BA                     __ccov63_start_blk64:
  1453  02BA                     l2286:
  1454                           
  1455                           ;main.c: 283:         if (NewStateChangeDetected == 1) {
  1456  02BA  1FF2               	btfss	_NewStateChangeDetected/(0+8),_NewStateChangeDetected& (0+7)
  1457  02BB  2ABD               	goto	u741
  1458  02BC  2ABE               	goto	u740
  1459  02BD                     u741:
  1460  02BD  2AC3               	goto	l2290
  1461  02BE                     __ccov63_end_blk64:
  1462  02BE                     u740:
  1463  02BE                     __ccov64_start_blk65:
  1464  02BE                     l2288:
  1465  02BE  15F2               	bsf	__ccovbit65_2/(0+8),__ccovbit65_2& (0+7)	;volatile
  1466                           
  1467                           ;main.c: 284:             state_machine = STATE_NEW_DOOR_STATE;
  1468  02BF  0020               	movlb	0	; select bank0
  1469  02C0  01BE               	clrf	_state_machine
  1470  02C1  0ABE               	incf	_state_machine,f
  1471                           
  1472                           ;main.c: 285:             NewStateChangeDetected = 0;
  1473  02C2  13F2               	bcf	_NewStateChangeDetected/(0+8),_NewStateChangeDetected& (0+7)
  1474  02C3                     __ccov64_end_blk65:
  1475  02C3                     __ccov65_start_blk67:
  1476  02C3                     l2290:
  1477                           
  1478                           ;main.c: 298:         checkState1();
  1479  02C3  3180  208B  3181   	fcall	_checkState1
  1480  02C6                     __ccov65_end_blk67:
  1481  02C6                     __ccov66_start_blk68:
  1482  02C6                     l2292:
  1483  02C6  1572               	bsf	__ccovbit68_3/(0+8),__ccovbit68_3& (0+7)	;volatile
  1484                           
  1485                           ;main.c: 300:         watch_dog_incrementing_timer();
  1486  02C7  3182  22CC  3181   	fcall	_watch_dog_incrementing_timer
  1487  02CA  2ABA               	goto	l2286
  1488  02CB                     __ccov66_end_blk68:
  1489  02CB  2871               	ljmp	start
  1490  02CC                     __end_of_main:
  1491                           
  1492                           	psect	text1
  1493  02CC                     __ptext1:	
  1494 ;; *************** function _watch_dog_incrementing_timer *****************
  1495 ;; Defined at:
  1496 ;;		line 445 in file "main.c"
  1497 ;; Parameters:    Size  Location     Type
  1498 ;;		None
  1499 ;; Auto vars:     Size  Location     Type
  1500 ;;		None
  1501 ;; Return value:  Size  Location     Type
  1502 ;;                  1    wreg      void 
  1503 ;; Registers used:
  1504 ;;		wreg, status,2, status,0, pclath, cstack
  1505 ;; Tracked objects:
  1506 ;;		On entry : 0/0
  1507 ;;		On exit  : 0/0
  1508 ;;		Unchanged: 0/0
  1509 ;; Data sizes:     COMMON   BANK0   BANK1
  1510 ;;      Params:         0       0       0
  1511 ;;      Locals:         0       0       0
  1512 ;;      Temps:          1       0       0
  1513 ;;      Totals:         1       0       0
  1514 ;;Total ram usage:        1 bytes
  1515 ;; Hardware stack levels used: 1
  1516 ;; Hardware stack levels required when called: 2
  1517 ;; This function calls:
  1518 ;;		_set_watchdog_timer_128ms
  1519 ;;		_set_watchdog_timer_1s
  1520 ;;		_set_watchdog_timer_256ms
  1521 ;;		_set_watchdog_timer_256s
  1522 ;;		_set_watchdog_timer_4s
  1523 ;; This function is called by:
  1524 ;;		_main
  1525 ;; This function uses a non-reentrant model
  1526 ;;
  1527                           
  1528                           
  1529                           ;psect for function _watch_dog_incrementing_timer
  1530  02CC                     _watch_dog_incrementing_timer:
  1531                           
  1532                           ;incstack = 0
  1533                           ; Regs used in _watch_dog_incrementing_timer: [wreg+status,2+status,0+pclath+cstack]
  1534  02CC                     l1378:
  1535                           
  1536                           ;main.c: 447:     if (sleep_128ms_counter < 8) {
  1537  02CC  0020               	movlb	0	; select bank0
  1538  02CD  0831               	movf	_sleep_128ms_counter+1,w	;volatile
  1539  02CE  3A80               	xorlw	128
  1540  02CF  00F5               	movwf	??_watch_dog_incrementing_timer
  1541  02D0  3080               	movlw	128
  1542  02D1  0275               	subwf	??_watch_dog_incrementing_timer,w
  1543  02D2  1D03               	skipz
  1544  02D3  2AD6               	goto	u225
  1545  02D4  3008               	movlw	8
  1546  02D5  0230               	subwf	_sleep_128ms_counter,w	;volatile
  1547  02D6                     u225:
  1548  02D6  1803               	skipnc
  1549  02D7  2AD9               	goto	u221
  1550  02D8  2ADA               	goto	u220
  1551  02D9                     u221:
  1552  02D9  2AE4               	goto	l1384
  1553  02DA                     __ccov86_end_blk0:
  1554  02DA                     u220:
  1555  02DA                     __ccov87_start_blk1:
  1556  02DA                     l1380:
  1557                           
  1558                           ;main.c: 449:         sleep_128ms_counter++;
  1559  02DA  3001               	movlw	1
  1560  02DB  0020               	movlb	0	; select bank0
  1561  02DC  07B0               	addwf	_sleep_128ms_counter,f	;volatile
  1562  02DD  3000               	movlw	0
  1563  02DE  3DB1               	addwfc	_sleep_128ms_counter+1,f	;volatile
  1564  02DF                     __ccov87_end_blk1:
  1565  02DF                     __ccov88_start_blk2:
  1566  02DF                     l1382:
  1567  02DF  17F1               	bsf	__ccovbit2_6/(0+8),__ccovbit2_6& (0+7)	;volatile
  1568                           
  1569                           ;main.c: 450:         set_watchdog_timer_128ms();
  1570  02E0  3183  23F8  3182   	fcall	_set_watchdog_timer_128ms
  1571                           
  1572                           ;main.c: 451:     }
  1573  02E3  2B35               	goto	l157
  1574  02E4                     __ccov88_end_blk2:
  1575  02E4                     __ccov89_start_blk4:
  1576  02E4                     l1384:
  1577  02E4  0020               	movlb	0	; select bank0
  1578  02E5  082F               	movf	_sleep_256ms_counter+1,w	;volatile
  1579  02E6  3A80               	xorlw	128
  1580  02E7  00F5               	movwf	??_watch_dog_incrementing_timer
  1581  02E8  3080               	movlw	128
  1582  02E9  0275               	subwf	??_watch_dog_incrementing_timer,w
  1583  02EA  1D03               	skipz
  1584  02EB  2AEE               	goto	u235
  1585  02EC  3028               	movlw	40
  1586  02ED  022E               	subwf	_sleep_256ms_counter,w	;volatile
  1587  02EE                     u235:
  1588  02EE  1803               	skipnc
  1589  02EF  2AF1               	goto	u231
  1590  02F0  2AF2               	goto	u230
  1591  02F1                     u231:
  1592  02F1  2AFC               	goto	l1390
  1593  02F2                     __ccov89_end_blk4:
  1594  02F2                     u230:
  1595  02F2                     __ccov90_start_blk5:
  1596  02F2                     l1386:
  1597                           
  1598                           ;main.c: 454:         sleep_256ms_counter++;
  1599  02F2  3001               	movlw	1
  1600  02F3  0020               	movlb	0	; select bank0
  1601  02F4  07AE               	addwf	_sleep_256ms_counter,f	;volatile
  1602  02F5  3000               	movlw	0
  1603  02F6  3DAF               	addwfc	_sleep_256ms_counter+1,f	;volatile
  1604  02F7                     __ccov90_end_blk5:
  1605  02F7                     __ccov91_start_blk6:
  1606  02F7                     l1388:
  1607  02F7  1771               	bsf	__ccovbit6_7/(0+8),__ccovbit6_7& (0+7)	;volatile
  1608                           
  1609                           ;main.c: 455:         set_watchdog_timer_256ms();
  1610  02F8  3183  23EA  3182   	fcall	_set_watchdog_timer_256ms
  1611                           
  1612                           ;main.c: 456:     }
  1613  02FB  2B35               	goto	l157
  1614  02FC                     __ccov91_end_blk6:
  1615  02FC                     __ccov92_start_blk8:
  1616  02FC                     l1390:
  1617  02FC  0020               	movlb	0	; select bank0
  1618  02FD  082D               	movf	_sleep_1s_counter+1,w	;volatile
  1619  02FE  3A80               	xorlw	128
  1620  02FF  00F5               	movwf	??_watch_dog_incrementing_timer
  1621  0300  3080               	movlw	128
  1622  0301  0275               	subwf	??_watch_dog_incrementing_timer,w
  1623  0302  1D03               	skipz
  1624  0303  2B06               	goto	u245
  1625  0304  303C               	movlw	60
  1626  0305  022C               	subwf	_sleep_1s_counter,w	;volatile
  1627  0306                     u245:
  1628  0306  1803               	skipnc
  1629  0307  2B09               	goto	u241
  1630  0308  2B0A               	goto	u240
  1631  0309                     u241:
  1632  0309  2B14               	goto	l1396
  1633  030A                     __ccov92_end_blk8:
  1634  030A                     u240:
  1635  030A                     __ccov93_start_blk9:
  1636  030A                     l1392:
  1637                           
  1638                           ;main.c: 459:         sleep_1s_counter++;
  1639  030A  3001               	movlw	1
  1640  030B  0020               	movlb	0	; select bank0
  1641  030C  07AC               	addwf	_sleep_1s_counter,f	;volatile
  1642  030D  3000               	movlw	0
  1643  030E  3DAD               	addwfc	_sleep_1s_counter+1,f	;volatile
  1644  030F                     __ccov93_end_blk9:
  1645  030F                     __ccov94_start_blk10:
  1646  030F                     l1394:
  1647  030F  16F1               	bsf	__ccovbit10_8/(0+8),__ccovbit10_8& (0+7)	;volatile
  1648                           
  1649                           ;main.c: 460:         set_watchdog_timer_1s();
  1650  0310  3183  23F1  3182   	fcall	_set_watchdog_timer_1s
  1651                           
  1652                           ;main.c: 461:     }
  1653  0313  2B35               	goto	l157
  1654  0314                     __ccov94_end_blk10:
  1655  0314                     __ccov95_start_blk12:
  1656  0314                     l1396:
  1657  0314  0020               	movlb	0	; select bank0
  1658  0315  082B               	movf	_sleep_4s_counter+1,w	;volatile
  1659  0316  3A80               	xorlw	128
  1660  0317  00F5               	movwf	??_watch_dog_incrementing_timer
  1661  0318  3080               	movlw	128
  1662  0319  0275               	subwf	??_watch_dog_incrementing_timer,w
  1663  031A  1D03               	skipz
  1664  031B  2B1E               	goto	u255
  1665  031C  304B               	movlw	75
  1666  031D  022A               	subwf	_sleep_4s_counter,w	;volatile
  1667  031E                     u255:
  1668  031E  1803               	skipnc
  1669  031F  2B21               	goto	u251
  1670  0320  2B22               	goto	u250
  1671  0321                     u251:
  1672  0321  2B2C               	goto	l1402
  1673  0322                     __ccov95_end_blk12:
  1674  0322                     u250:
  1675  0322                     __ccov96_start_blk13:
  1676  0322                     l1398:
  1677                           
  1678                           ;main.c: 464:         sleep_4s_counter++;
  1679  0322  3001               	movlw	1
  1680  0323  0020               	movlb	0	; select bank0
  1681  0324  07AA               	addwf	_sleep_4s_counter,f	;volatile
  1682  0325  3000               	movlw	0
  1683  0326  3DAB               	addwfc	_sleep_4s_counter+1,f	;volatile
  1684  0327                     __ccov96_end_blk13:
  1685  0327                     __ccov97_start_blk14:
  1686  0327                     l1400:
  1687  0327  1671               	bsf	__ccovbit14_9/(0+8),__ccovbit14_9& (0+7)	;volatile
  1688                           
  1689                           ;main.c: 465:         set_watchdog_timer_4s();
  1690  0328  3183  23DC  3182   	fcall	_set_watchdog_timer_4s
  1691                           
  1692                           ;main.c: 466:     }
  1693  032B  2B35               	goto	l157
  1694  032C                     __ccov97_end_blk14:
  1695  032C                     __ccov98_start_blk16:
  1696  032C                     l1402:
  1697                           
  1698                           ;main.c: 468:         sleep_256s_counter++;
  1699  032C  3001               	movlw	1
  1700  032D  0020               	movlb	0	; select bank0
  1701  032E  07A8               	addwf	_sleep_256s_counter,f	;volatile
  1702  032F  3000               	movlw	0
  1703  0330  3DA9               	addwfc	_sleep_256s_counter+1,f	;volatile
  1704  0331                     __ccov98_end_blk16:
  1705  0331                     __ccov99_start_blk17:
  1706  0331                     l1404:
  1707  0331  15F1               	bsf	__ccovbit17_10/(0+8),__ccovbit17_10& (0+7)	;volatile
  1708                           
  1709                           ;main.c: 469:         set_watchdog_timer_256s();
  1710  0332  3183  23E3  3182   	fcall	_set_watchdog_timer_256s
  1711  0335                     __ccov99_end_blk17:
  1712  0335                     __ccov100_start_blk22:
  1713  0335                     l157:
  1714  0335  1571               	bsf	__ccovbit22_11/(0+8),__ccovbit22_11& (0+7)	;volatile
  1715  0336  0008               	return
  1716  0337                     __end_of_watch_dog_incrementing_timer:
  1717  0337                     
  1718                           	psect	text2
  1719  03DC                     __ptext2:	
  1720 ;; *************** function _set_watchdog_timer_4s *****************
  1721 ;; Defined at:
  1722 ;;		line 484 in file "main.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;		None
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;		None
  1727 ;; Return value:  Size  Location     Type
  1728 ;;                  1    wreg      void 
  1729 ;; Registers used:
  1730 ;;		wreg, status,2, status,0
  1731 ;; Tracked objects:
  1732 ;;		On entry : 0/0
  1733 ;;		On exit  : 0/0
  1734 ;;		Unchanged: 0/0
  1735 ;; Data sizes:     COMMON   BANK0   BANK1
  1736 ;;      Params:         0       0       0
  1737 ;;      Locals:         0       0       0
  1738 ;;      Temps:          0       0       0
  1739 ;;      Totals:         0       0       0
  1740 ;;Total ram usage:        0 bytes
  1741 ;; Hardware stack levels used: 1
  1742 ;; Hardware stack levels required when called: 1
  1743 ;; This function calls:
  1744 ;;		Nothing
  1745 ;; This function is called by:
  1746 ;;		_watch_dog_incrementing_timer
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749                           
  1750                           
  1751                           ;psect for function _set_watchdog_timer_4s
  1752  03DC                     _set_watchdog_timer_4s:
  1753                           
  1754                           ;incstack = 0
  1755                           ; Regs used in _set_watchdog_timer_4s: [wreg+status,2+status,0]
  1756  03DC                     l1254:
  1757                           
  1758                           ;main.c: 485:     WDTCONbits.WDTPS = 0b01100;
  1759  03DC  0021               	movlb	1	; select bank1
  1760  03DD  0817               	movf	23,w	;volatile
  1761  03DE  39C1               	andlw	-63
  1762  03DF  3818               	iorlw	24
  1763  03E0  0097               	movwf	23	;volatile
  1764  03E1                     __ccov109_end_blk0:
  1765  03E1                     __ccov110_start_blk1:
  1766  03E1                     l172:
  1767  03E1  1770               	bsf	__ccovbit1_15/(0+8),__ccovbit1_15& (0+7)	;volatile
  1768  03E2  0008               	return
  1769  03E3                     __end_of_set_watchdog_timer_4s:
  1770  03E3                     
  1771                           	psect	text3
  1772  03E3                     __ptext3:	
  1773 ;; *************** function _set_watchdog_timer_256s *****************
  1774 ;; Defined at:
  1775 ;;		line 487 in file "main.c"
  1776 ;; Parameters:    Size  Location     Type
  1777 ;;		None
  1778 ;; Auto vars:     Size  Location     Type
  1779 ;;		None
  1780 ;; Return value:  Size  Location     Type
  1781 ;;                  1    wreg      void 
  1782 ;; Registers used:
  1783 ;;		wreg, status,2, status,0
  1784 ;; Tracked objects:
  1785 ;;		On entry : 0/0
  1786 ;;		On exit  : 0/0
  1787 ;;		Unchanged: 0/0
  1788 ;; Data sizes:     COMMON   BANK0   BANK1
  1789 ;;      Params:         0       0       0
  1790 ;;      Locals:         0       0       0
  1791 ;;      Temps:          0       0       0
  1792 ;;      Totals:         0       0       0
  1793 ;;Total ram usage:        0 bytes
  1794 ;; Hardware stack levels used: 1
  1795 ;; Hardware stack levels required when called: 1
  1796 ;; This function calls:
  1797 ;;		Nothing
  1798 ;; This function is called by:
  1799 ;;		_watch_dog_incrementing_timer
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           
  1803                           
  1804                           ;psect for function _set_watchdog_timer_256s
  1805  03E3                     _set_watchdog_timer_256s:
  1806                           
  1807                           ;incstack = 0
  1808                           ; Regs used in _set_watchdog_timer_256s: [wreg+status,2+status,0]
  1809  03E3                     l1256:
  1810                           
  1811                           ;main.c: 488:     WDTCONbits.WDTPS = 0b10010;
  1812  03E3  0021               	movlb	1	; select bank1
  1813  03E4  0817               	movf	23,w	;volatile
  1814  03E5  39C1               	andlw	-63
  1815  03E6  3824               	iorlw	36
  1816  03E7  0097               	movwf	23	;volatile
  1817  03E8                     __ccov111_end_blk0:
  1818  03E8                     __ccov112_start_blk1:
  1819  03E8                     l175:
  1820  03E8  16F0               	bsf	__ccovbit1_16/(0+8),__ccovbit1_16& (0+7)	;volatile
  1821  03E9  0008               	return
  1822  03EA                     __end_of_set_watchdog_timer_256s:
  1823  03EA                     
  1824                           	psect	text4
  1825  03EA                     __ptext4:	
  1826 ;; *************** function _set_watchdog_timer_256ms *****************
  1827 ;; Defined at:
  1828 ;;		line 478 in file "main.c"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;		None
  1831 ;; Auto vars:     Size  Location     Type
  1832 ;;		None
  1833 ;; Return value:  Size  Location     Type
  1834 ;;                  1    wreg      void 
  1835 ;; Registers used:
  1836 ;;		wreg, status,2, status,0
  1837 ;; Tracked objects:
  1838 ;;		On entry : 0/0
  1839 ;;		On exit  : 0/0
  1840 ;;		Unchanged: 0/0
  1841 ;; Data sizes:     COMMON   BANK0   BANK1
  1842 ;;      Params:         0       0       0
  1843 ;;      Locals:         0       0       0
  1844 ;;      Temps:          0       0       0
  1845 ;;      Totals:         0       0       0
  1846 ;;Total ram usage:        0 bytes
  1847 ;; Hardware stack levels used: 1
  1848 ;; Hardware stack levels required when called: 1
  1849 ;; This function calls:
  1850 ;;		Nothing
  1851 ;; This function is called by:
  1852 ;;		_watch_dog_incrementing_timer
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856                           
  1857                           ;psect for function _set_watchdog_timer_256ms
  1858  03EA                     _set_watchdog_timer_256ms:
  1859                           
  1860                           ;incstack = 0
  1861                           ; Regs used in _set_watchdog_timer_256ms: [wreg+status,2+status,0]
  1862  03EA                     l1250:
  1863                           
  1864                           ;main.c: 479:     WDTCONbits.WDTPS = 0b01000;
  1865  03EA  0021               	movlb	1	; select bank1
  1866  03EB  0817               	movf	23,w	;volatile
  1867  03EC  39C1               	andlw	-63
  1868  03ED  3810               	iorlw	16
  1869  03EE  0097               	movwf	23	;volatile
  1870  03EF                     __ccov105_end_blk0:
  1871  03EF                     __ccov106_start_blk1:
  1872  03EF                     l166:
  1873  03EF  1471               	bsf	__ccovbit1_13/(0+8),__ccovbit1_13& (0+7)	;volatile
  1874  03F0  0008               	return
  1875  03F1                     __end_of_set_watchdog_timer_256ms:
  1876  03F1                     
  1877                           	psect	text5
  1878  03F1                     __ptext5:	
  1879 ;; *************** function _set_watchdog_timer_1s *****************
  1880 ;; Defined at:
  1881 ;;		line 481 in file "main.c"
  1882 ;; Parameters:    Size  Location     Type
  1883 ;;		None
  1884 ;; Auto vars:     Size  Location     Type
  1885 ;;		None
  1886 ;; Return value:  Size  Location     Type
  1887 ;;                  1    wreg      void 
  1888 ;; Registers used:
  1889 ;;		wreg, status,2, status,0
  1890 ;; Tracked objects:
  1891 ;;		On entry : 0/0
  1892 ;;		On exit  : 0/0
  1893 ;;		Unchanged: 0/0
  1894 ;; Data sizes:     COMMON   BANK0   BANK1
  1895 ;;      Params:         0       0       0
  1896 ;;      Locals:         0       0       0
  1897 ;;      Temps:          0       0       0
  1898 ;;      Totals:         0       0       0
  1899 ;;Total ram usage:        0 bytes
  1900 ;; Hardware stack levels used: 1
  1901 ;; Hardware stack levels required when called: 1
  1902 ;; This function calls:
  1903 ;;		Nothing
  1904 ;; This function is called by:
  1905 ;;		_watch_dog_incrementing_timer
  1906 ;; This function uses a non-reentrant model
  1907 ;;
  1908                           
  1909                           
  1910                           ;psect for function _set_watchdog_timer_1s
  1911  03F1                     _set_watchdog_timer_1s:
  1912                           
  1913                           ;incstack = 0
  1914                           ; Regs used in _set_watchdog_timer_1s: [wreg+status,2+status,0]
  1915  03F1                     l1252:
  1916                           
  1917                           ;main.c: 482:     WDTCONbits.WDTPS = 0b01010;
  1918  03F1  0021               	movlb	1	; select bank1
  1919  03F2  0817               	movf	23,w	;volatile
  1920  03F3  39C1               	andlw	-63
  1921  03F4  3814               	iorlw	20
  1922  03F5  0097               	movwf	23	;volatile
  1923  03F6                     __ccov107_end_blk0:
  1924  03F6                     __ccov108_start_blk1:
  1925  03F6                     l169:
  1926  03F6  17F0               	bsf	__ccovbit1_14/(0+8),__ccovbit1_14& (0+7)	;volatile
  1927  03F7  0008               	return
  1928  03F8                     __end_of_set_watchdog_timer_1s:
  1929  03F8                     
  1930                           	psect	text6
  1931  03CD                     __ptext6:	
  1932 ;; *************** function _timer2_init *****************
  1933 ;; Defined at:
  1934 ;;		line 399 in file "main.c"
  1935 ;; Parameters:    Size  Location     Type
  1936 ;;		None
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;		None
  1939 ;; Return value:  Size  Location     Type
  1940 ;;                  1    wreg      void 
  1941 ;; Registers used:
  1942 ;;		wreg, status,2, status,0
  1943 ;; Tracked objects:
  1944 ;;		On entry : 0/0
  1945 ;;		On exit  : 0/0
  1946 ;;		Unchanged: 0/0
  1947 ;; Data sizes:     COMMON   BANK0   BANK1
  1948 ;;      Params:         0       0       0
  1949 ;;      Locals:         0       0       0
  1950 ;;      Temps:          0       0       0
  1951 ;;      Totals:         0       0       0
  1952 ;;Total ram usage:        0 bytes
  1953 ;; Hardware stack levels used: 1
  1954 ;; Hardware stack levels required when called: 1
  1955 ;; This function calls:
  1956 ;;		Nothing
  1957 ;; This function is called by:
  1958 ;;		_main
  1959 ;; This function uses a non-reentrant model
  1960 ;;
  1961                           
  1962                           
  1963                           ;psect for function _timer2_init
  1964  03CD                     _timer2_init:
  1965                           
  1966                           ;incstack = 0
  1967                           ; Regs used in _timer2_init: [wreg+status,2+status,0]
  1968  03CD                     l1262:
  1969                           
  1970                           ;main.c: 401:     T2CONbits.T2OUTPS = 0b1111;
  1971  03CD  3078               	movlw	120
  1972  03CE  0020               	movlb	0	; select bank0
  1973  03CF  049C               	iorwf	28,f	;volatile
  1974  03D0                     __ccov67_end_blk0:
  1975  03D0                     __ccov68_start_blk1:
  1976  03D0                     l1264:
  1977                           
  1978                           ;main.c: 402:     T2CONbits.TMR2ON = 1;
  1979  03D0  151C               	bsf	28,2	;volatile
  1980                           
  1981                           ;main.c: 404:     T2CONbits.T2CKPS = 0b10;
  1982  03D1  081C               	movf	28,w	;volatile
  1983  03D2  39FC               	andlw	-4
  1984  03D3  3802               	iorlw	2
  1985  03D4  009C               	movwf	28	;volatile
  1986                           
  1987                           ;main.c: 405:     T2CONbits.T2OUTPS = 0b111;
  1988  03D5  081C               	movf	28,w	;volatile
  1989  03D6  3987               	andlw	-121
  1990  03D7  3838               	iorlw	56
  1991  03D8  009C               	movwf	28	;volatile
  1992  03D9                     __ccov68_end_blk1:
  1993  03D9                     __ccov69_start_blk2:
  1994  03D9                     l1266:
  1995                           
  1996                           ;main.c: 406:     T2CONbits.TMR2ON = 1;
  1997  03D9  151C               	bsf	28,2	;volatile
  1998  03DA                     __ccov69_end_blk2:
  1999  03DA                     __ccov70_start_blk3:
  2000  03DA                     l137:
  2001  03DA  14F2               	bsf	__ccovbit3_4/(0+8),__ccovbit3_4& (0+7)	;volatile
  2002  03DB  0008               	return
  2003  03DC                     __end_of_timer2_init:
  2004  03DC                     
  2005                           	psect	text7
  2006  008B                     __ptext7:	
  2007 ;; *************** function _checkState1 *****************
  2008 ;; Defined at:
  2009 ;;		line 41 in file "statemachine.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;		None
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;		None
  2014 ;; Return value:  Size  Location     Type
  2015 ;;                  1    wreg      void 
  2016 ;; Registers used:
  2017 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2018 ;; Tracked objects:
  2019 ;;		On entry : 0/0
  2020 ;;		On exit  : 0/0
  2021 ;;		Unchanged: 0/0
  2022 ;; Data sizes:     COMMON   BANK0   BANK1
  2023 ;;      Params:         0       0       0
  2024 ;;      Locals:         0       0       0
  2025 ;;      Temps:          0       2       0
  2026 ;;      Totals:         0       2       0
  2027 ;;Total ram usage:        2 bytes
  2028 ;; Hardware stack levels used: 1
  2029 ;; Hardware stack levels required when called: 2
  2030 ;; This function calls:
  2031 ;;		___awdiv
  2032 ;;		_disable_external_interrupt
  2033 ;;		_disable_watchdog_timer
  2034 ;;		_enable_external_interrupt
  2035 ;;		_enable_watchdog_timer
  2036 ;;		_getBatteryVoltage
  2037 ;;		_set_watchdog_timer_128ms
  2038 ;; This function is called by:
  2039 ;;		_main
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           
  2043                           
  2044                           ;psect for function _checkState1
  2045  008B                     _checkState1:
  2046                           
  2047                           ;incstack = 0
  2048                           ; Regs used in _checkState1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2049  008B                     l2056:
  2050                           
  2051                           ;statemachine.c: 42:     switch(state_machine) {
  2052  008B  29CC               	goto	l2148
  2053  008C                     __ccov137_end_blk0:
  2054  008C                     __ccov138_start_blk2:
  2055  008C                     l2058:
  2056                           
  2057                           ;statemachine.c: 45:             disable_external_interrupt();
  2058  008C  3184  2410  3180   	fcall	_disable_external_interrupt
  2059                           
  2060                           ;statemachine.c: 46:             disable_watchdog_timer();
  2061  008F  3184  2409  3180   	fcall	_disable_watchdog_timer
  2062  0092                     __ccov138_end_blk2:
  2063  0092                     __ccov139_start_blk3:
  2064  0092                     l2060:
  2065  0092  0020               	movlb	0	; select bank0
  2066  0093  1424               	bsf	__ccovbit3_30/(0+8),__ccovbit3_30& (0+7)	;volatile
  2067                           
  2068                           ;statemachine.c: 47:             state_door = STATE_DOOR_UNKNOWN;
  2069  0094  3002               	movlw	2
  2070  0095  00C4               	movwf	??_checkState1
  2071  0096  0844               	movf	??_checkState1,w
  2072  0097  00BF               	movwf	_state_door
  2073  0098                     __ccov139_end_blk3:
  2074  0098                     __ccov140_start_blk4:
  2075  0098                     l2062:
  2076  0098  0020               	movlb	0	; select bank0
  2077  0099  17A3               	bsf	__ccovbit4_31/(0+8),__ccovbit4_31& (0+7)	;volatile
  2078                           
  2079                           ;statemachine.c: 48:             state_machine = STATE_CHECK_DOOR;
  2080  009A  3002               	movlw	2
  2081  009B  00C4               	movwf	??_checkState1
  2082  009C  0844               	movf	??_checkState1,w
  2083  009D  00BE               	movwf	_state_machine
  2084                           
  2085                           ;statemachine.c: 49:             break;
  2086  009E  29F2               	goto	l300
  2087  009F                     __ccov140_end_blk4:
  2088  009F                     __ccov141_start_blk6:
  2089  009F                     l2064:
  2090  009F  1723               	bsf	__ccovbit6_32/(0+8),__ccovbit6_32& (0+7)	;volatile
  2091                           
  2092                           ;statemachine.c: 55:             sleep_128ms_counter = 0;
  2093  00A0  01B0               	clrf	_sleep_128ms_counter	;volatile
  2094  00A1  01B1               	clrf	_sleep_128ms_counter+1	;volatile
  2095                           
  2096                           ;statemachine.c: 56:             sleep_256ms_counter = 0;
  2097  00A2  01AE               	clrf	_sleep_256ms_counter	;volatile
  2098  00A3  01AF               	clrf	_sleep_256ms_counter+1	;volatile
  2099                           
  2100                           ;statemachine.c: 57:             sleep_1s_counter = 0;
  2101  00A4  01AC               	clrf	_sleep_1s_counter	;volatile
  2102  00A5  01AD               	clrf	_sleep_1s_counter+1	;volatile
  2103                           
  2104                           ;statemachine.c: 58:             sleep_4s_counter = 0;
  2105  00A6  01AA               	clrf	_sleep_4s_counter	;volatile
  2106  00A7  01AB               	clrf	_sleep_4s_counter+1	;volatile
  2107  00A8                     __ccov141_end_blk6:
  2108  00A8                     __ccov142_start_blk7:
  2109  00A8                     l2066:
  2110  00A8  16A3               	bsf	__ccovbit7_33/(0+8),__ccovbit7_33& (0+7)	;volatile
  2111                           
  2112                           ;statemachine.c: 61:             prelCounter = 1;
  2113  00A9  3001               	movlw	1
  2114  00AA  00B6               	movwf	_prelCounter	;volatile
  2115  00AB  3000               	movlw	0
  2116  00AC  00B7               	movwf	_prelCounter+1	;volatile
  2117  00AD                     __ccov142_end_blk7:
  2118  00AD                     __ccov143_start_blk8:
  2119  00AD                     l2068:
  2120  00AD  0020               	movlb	0	; select bank0
  2121  00AE  1623               	bsf	__ccovbit8_34/(0+8),__ccovbit8_34& (0+7)	;volatile
  2122                           
  2123                           ;statemachine.c: 62:             state_machine = STATE_DOOR_CHANGED_WAIT_PREL;
  2124  00AF  3004               	movlw	4
  2125  00B0  00C4               	movwf	??_checkState1
  2126  00B1  0844               	movf	??_checkState1,w
  2127  00B2  00BE               	movwf	_state_machine
  2128                           
  2129                           ;statemachine.c: 63:             break;
  2130  00B3  29F2               	goto	l300
  2131  00B4                     __ccov143_end_blk8:
  2132  00B4                     __ccov144_start_blk10:
  2133  00B4                     l2070:
  2134  00B4  15A3               	bsf	__ccovbit10_35/(0+8),__ccovbit10_35& (0+7)	;volatile
  2135                           
  2136                           ;statemachine.c: 69:             if (state_door == PORTAbits.RA2) {
  2137  00B5  0C0C               	rrf	12,w	;volatile
  2138  00B6  0C89               	rrf	9,f
  2139  00B7  3901               	andlw	1
  2140  00B8  063F               	xorwf	_state_door,w
  2141  00B9  1D03               	skipz
  2142  00BA  28BC               	goto	u651
  2143  00BB  28BD               	goto	u650
  2144  00BC                     u651:
  2145  00BC  28C4               	goto	l2074
  2146  00BD                     __ccov144_end_blk10:
  2147  00BD                     u650:
  2148  00BD                     __ccov145_start_blk11:
  2149  00BD                     l2072:
  2150  00BD  0020               	movlb	0	; select bank0
  2151  00BE  1523               	bsf	__ccovbit11_36/(0+8),__ccovbit11_36& (0+7)	;volatile
  2152                           
  2153                           ;statemachine.c: 72:                 state_machine = STATE_GO_SLEEP;
  2154  00BF  3009               	movlw	9
  2155  00C0  00C4               	movwf	??_checkState1
  2156  00C1  0844               	movf	??_checkState1,w
  2157  00C2  00BE               	movwf	_state_machine
  2158                           
  2159                           ;statemachine.c: 73:             }
  2160  00C3  29F2               	goto	l300
  2161  00C4                     __ccov145_end_blk11:
  2162  00C4                     __ccov146_start_blk13:
  2163  00C4                     l2074:
  2164                           
  2165                           ;statemachine.c: 77:                 state_door = PORTAbits.RA2;
  2166  00C4  3000               	movlw	0
  2167  00C5  190C               	btfsc	12,2	;volatile
  2168  00C6  3001               	movlw	1
  2169  00C7  00BF               	movwf	_state_door
  2170  00C8                     __ccov146_end_blk13:
  2171  00C8                     __ccov147_start_blk14:
  2172  00C8                     l2076:
  2173  00C8  14A3               	bsf	__ccovbit14_37/(0+8),__ccovbit14_37& (0+7)	;volatile
  2174                           
  2175                           ;statemachine.c: 78:                 DoorStateBeforePrel = state_door;
  2176  00C9  083F               	movf	_state_door,w
  2177  00CA  00C4               	movwf	??_checkState1
  2178  00CB  0844               	movf	??_checkState1,w
  2179  00CC  00BD               	movwf	_DoorStateBeforePrel
  2180  00CD  28A8               	goto	l2066
  2181  00CE                     __ccov147_end_blk14:
  2182  00CE                     __ccov148_start_blk17:
  2183  00CE                     l271:	
  2184                           ;statemachine.c: 81:             }
  2185                           
  2186  00CE  1423               	bsf	__ccovbit17_38/(0+8),__ccovbit17_38& (0+7)	;volatile
  2187                           
  2188                           ;statemachine.c: 82:             break;
  2189  00CF  29F2               	goto	l300
  2190  00D0                     __ccov148_end_blk17:
  2191  00D0                     __ccov149_start_blk19:
  2192  00D0                     l2082:
  2193  00D0  17A2               	bsf	__ccovbit19_39/(0+8),__ccovbit19_39& (0+7)	;volatile
  2194                           
  2195                           ;statemachine.c: 85:             if (prelCounter > 0) {
  2196  00D1  0837               	movf	_prelCounter+1,w	;volatile
  2197  00D2  3A80               	xorlw	128
  2198  00D3  00C4               	movwf	??_checkState1
  2199  00D4  3080               	movlw	128
  2200  00D5  0244               	subwf	??_checkState1,w
  2201  00D6  1D03               	skipz
  2202  00D7  28DA               	goto	u665
  2203  00D8  3001               	movlw	1
  2204  00D9  0236               	subwf	_prelCounter,w	;volatile
  2205  00DA                     u665:
  2206  00DA  1C03               	skipc
  2207  00DB  28DD               	goto	u661
  2208  00DC  28DE               	goto	u660
  2209  00DD                     u661:
  2210  00DD  28DF               	goto	l2086
  2211  00DE                     u660:
  2212  00DE  28AD               	goto	l2068
  2213  00DF                     __ccov149_end_blk19:
  2214  00DF                     __ccov150_start_blk22:
  2215  00DF                     l2086:
  2216  00DF  0020               	movlb	0	; select bank0
  2217  00E0  1722               	bsf	__ccovbit22_40/(0+8),__ccovbit22_40& (0+7)	;volatile
  2218                           
  2219                           ;statemachine.c: 89:                 state_machine = STATE_DOOR_CHECK_AFTER_PREL;
  2220  00E1  3005               	movlw	5
  2221  00E2  00C4               	movwf	??_checkState1
  2222  00E3  0844               	movf	??_checkState1,w
  2223  00E4  00BE               	movwf	_state_machine
  2224  00E5  29F2               	goto	l300
  2225  00E6                     __ccov150_end_blk22:
  2226  00E6                     __ccov151_start_blk25:
  2227  00E6                     l2088:
  2228                           
  2229                           ;statemachine.c: 96:             DoorStateAfterPrel = PORTAbits.RA2;
  2230  00E6  3000               	movlw	0
  2231  00E7  190C               	btfsc	12,2	;volatile
  2232  00E8  3001               	movlw	1
  2233  00E9  00BC               	movwf	_DoorStateAfterPrel
  2234  00EA                     __ccov151_end_blk25:
  2235  00EA                     __ccov152_start_blk26:
  2236  00EA                     l2090:
  2237                           
  2238                           ;statemachine.c: 99:             if (DoorStateAfterPrel == DoorStateBeforePrel) {
  2239  00EA  083C               	movf	_DoorStateAfterPrel,w
  2240  00EB  063D               	xorwf	_DoorStateBeforePrel,w
  2241  00EC  1D03               	skipz
  2242  00ED  28EF               	goto	u671
  2243  00EE  28F0               	goto	u670
  2244  00EF                     u671:
  2245  00EF  291D               	goto	l2102
  2246  00F0                     __ccov152_end_blk26:
  2247  00F0                     u670:
  2248  00F0                     __ccov153_start_blk27:
  2249  00F0                     l2092:
  2250                           
  2251                           ;statemachine.c: 102:                 state_door = DoorStateAfterPrel;
  2252  00F0  083C               	movf	_DoorStateAfterPrel,w
  2253  00F1  00C4               	movwf	??_checkState1
  2254  00F2  0844               	movf	??_checkState1,w
  2255  00F3  00BF               	movwf	_state_door
  2256                           
  2257                           ;statemachine.c: 105:                 switch (state_door) {
  2258  00F4  28FF               	goto	l2098
  2259  00F5                     __ccov153_end_blk27:
  2260  00F5                     __ccov154_start_blk28:
  2261  00F5                     l278:	
  2262                           ;statemachine.c: 106:                     case STATE_DOOR_OPEN:
  2263                           
  2264  00F5  16A2               	bsf	__ccovbit28_41/(0+8),__ccovbit28_41& (0+7)	;volatile
  2265                           
  2266                           ;statemachine.c: 107:                         LATAbits.LATA0 = 1;
  2267  00F6  0022               	movlb	2	; select bank2
  2268  00F7  140C               	bsf	12,0	;volatile
  2269                           
  2270                           ;statemachine.c: 108:                         break;
  2271  00F8  2912               	goto	l2100
  2272  00F9                     __ccov154_end_blk28:
  2273  00F9                     __ccov155_start_blk29:
  2274  00F9                     l280:	
  2275                           ;statemachine.c: 109:                     case STATE_DOOR_CLOSED:
  2276                           
  2277  00F9  1622               	bsf	__ccovbit29_42/(0+8),__ccovbit29_42& (0+7)	;volatile
  2278                           
  2279                           ;statemachine.c: 110:                         LATAbits.LATA1 = 1;
  2280  00FA  0022               	movlb	2	; select bank2
  2281  00FB  148C               	bsf	12,1	;volatile
  2282                           
  2283                           ;statemachine.c: 111:                         break;
  2284  00FC  2912               	goto	l2100
  2285  00FD                     __ccov155_end_blk29:
  2286  00FD                     __ccov156_start_blk33:
  2287  00FD                     l283:
  2288  00FD  15A2               	bsf	__ccovbit33_43/(0+8),__ccovbit33_43& (0+7)	;volatile
  2289                           
  2290                           ;statemachine.c: 116:                         break;
  2291  00FE  2912               	goto	l2100
  2292  00FF                     __ccov156_end_blk33:
  2293  00FF                     __ccov157_start_blk36:
  2294  00FF                     l2098:
  2295  00FF  083F               	movf	_state_door,w
  2296  0100  00C4               	movwf	??_checkState1
  2297  0101  01C5               	clrf	??_checkState1+1
  2298                           
  2299                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2300                           ; Switch size 1, requested type "simple"
  2301                           ; Number of cases is 1, Range of values is 0 to 0
  2302                           ; switch strategies available:
  2303                           ; Name         Instructions Cycles
  2304                           ; simple_byte            4     3 (average)
  2305                           ; direct_byte            8     6 (fixed)
  2306                           ; jumptable            260     6 (fixed)
  2307                           ;	Chosen strategy is simple_byte
  2308  0102  0845               	movf	??_checkState1+1,w
  2309  0103  3A00               	xorlw	0	; case 0
  2310  0104  1903               	skipnz
  2311  0105  2907               	goto	l2434
  2312  0106  2912               	goto	l2100
  2313  0107                     l2434:
  2314                           
  2315                           ; Switch size 1, requested type "simple"
  2316                           ; Number of cases is 3, Range of values is 0 to 2
  2317                           ; switch strategies available:
  2318                           ; Name         Instructions Cycles
  2319                           ; simple_byte           10     6 (average)
  2320                           ; direct_byte           12     6 (fixed)
  2321                           ; jumptable            260     6 (fixed)
  2322                           ;	Chosen strategy is simple_byte
  2323  0107  0844               	movf	??_checkState1,w
  2324  0108  3A00               	xorlw	0	; case 0
  2325  0109  1903               	skipnz
  2326  010A  28F9               	goto	l280
  2327  010B  3A01               	xorlw	1	; case 1
  2328  010C  1903               	skipnz
  2329  010D  28F5               	goto	l278
  2330  010E  3A03               	xorlw	3	; case 2
  2331  010F  1903               	skipnz
  2332  0110  28FD               	goto	l283
  2333  0111  2912               	goto	l2100
  2334  0112                     __ccov157_end_blk36:
  2335  0112                     __ccov158_start_blk38:
  2336  0112                     l2100:
  2337  0112  0020               	movlb	0	; select bank0
  2338  0113  1522               	bsf	__ccovbit38_44/(0+8),__ccovbit38_44& (0+7)	;volatile
  2339                           
  2340                           ;statemachine.c: 118:                 ihcPulseTimer = 5;
  2341  0114  3005               	movlw	5
  2342  0115  00B4               	movwf	_ihcPulseTimer	;volatile
  2343  0116  3000               	movlw	0
  2344  0117  00B5               	movwf	_ihcPulseTimer+1	;volatile
  2345                           
  2346                           ;statemachine.c: 119:                 state_machine = STATE_SEND_IHC_PULSE;
  2347  0118  3006               	movlw	6
  2348  0119  00C4               	movwf	??_checkState1
  2349  011A  0844               	movf	??_checkState1,w
  2350  011B  00BE               	movwf	_state_machine
  2351                           
  2352                           ;statemachine.c: 120:             }
  2353  011C  29F2               	goto	l300
  2354  011D                     __ccov158_end_blk38:
  2355  011D                     __ccov159_start_blk40:
  2356  011D                     l2102:
  2357  011D  14A2               	bsf	__ccovbit40_45/(0+8),__ccovbit40_45& (0+7)	;volatile
  2358                           
  2359                           ;statemachine.c: 126:                 sleep_64ms_counter = 0;
  2360  011E  01B2               	clrf	_sleep_64ms_counter	;volatile
  2361  011F  01B3               	clrf	_sleep_64ms_counter+1	;volatile
  2362                           
  2363                           ;statemachine.c: 127:                 sleep_256ms_counter = 0;
  2364  0120  01AE               	clrf	_sleep_256ms_counter	;volatile
  2365  0121  01AF               	clrf	_sleep_256ms_counter+1	;volatile
  2366                           
  2367                           ;statemachine.c: 128:                 sleep_1s_counter = 0;
  2368  0122  01AC               	clrf	_sleep_1s_counter	;volatile
  2369  0123  01AD               	clrf	_sleep_1s_counter+1	;volatile
  2370                           
  2371                           ;statemachine.c: 129:                 sleep_4s_counter = 0;
  2372  0124  01AA               	clrf	_sleep_4s_counter	;volatile
  2373  0125  01AB               	clrf	_sleep_4s_counter+1	;volatile
  2374  0126                     __ccov159_end_blk40:
  2375  0126                     __ccov160_start_blk41:
  2376  0126                     l2104:
  2377  0126  1422               	bsf	__ccovbit41_46/(0+8),__ccovbit41_46& (0+7)	;volatile
  2378                           
  2379                           ;statemachine.c: 132:                 set_watchdog_timer_128ms();
  2380  0127  3183  23F8  3180   	fcall	_set_watchdog_timer_128ms
  2381  012A  28BD               	goto	l2072
  2382  012B                     __ccov160_end_blk41:
  2383  012B                     __ccov161_start_blk45:
  2384  012B                     l2108:
  2385                           
  2386                           ;statemachine.c: 138:             if (ihcPulseTimer > 0)
  2387  012B  0835               	movf	_ihcPulseTimer+1,w	;volatile
  2388  012C  3A80               	xorlw	128
  2389  012D  00C4               	movwf	??_checkState1
  2390  012E  3080               	movlw	128
  2391  012F  0244               	subwf	??_checkState1,w
  2392  0130  1D03               	skipz
  2393  0131  2934               	goto	u685
  2394  0132  3001               	movlw	1
  2395  0133  0234               	subwf	_ihcPulseTimer,w	;volatile
  2396  0134                     u685:
  2397  0134  1C03               	skipc
  2398  0135  2937               	goto	u681
  2399  0136  2938               	goto	u680
  2400  0137                     u681:
  2401  0137  293F               	goto	l2112
  2402  0138                     __ccov161_end_blk45:
  2403  0138                     u680:
  2404  0138                     __ccov162_start_blk46:
  2405  0138                     l2110:
  2406  0138  0020               	movlb	0	; select bank0
  2407  0139  17A1               	bsf	__ccovbit46_47/(0+8),__ccovbit46_47& (0+7)	;volatile
  2408                           
  2409                           ;statemachine.c: 139:                 state_machine = STATE_SEND_IHC_PULSE;
  2410  013A  3006               	movlw	6
  2411  013B  00C4               	movwf	??_checkState1
  2412  013C  0844               	movf	??_checkState1,w
  2413  013D  00BE               	movwf	_state_machine
  2414  013E  29F2               	goto	l300
  2415  013F                     __ccov162_end_blk46:
  2416  013F                     __ccov163_start_blk48:
  2417  013F                     l2112:
  2418  013F  0020               	movlb	0	; select bank0
  2419  0140  1721               	bsf	__ccovbit48_48/(0+8),__ccovbit48_48& (0+7)	;volatile
  2420                           
  2421                           ;statemachine.c: 141:                 state_machine = STATE_STOP_SENDING_IHC_PULSE;
  2422  0141  3007               	movlw	7
  2423  0142  00C4               	movwf	??_checkState1
  2424  0143  0844               	movf	??_checkState1,w
  2425  0144  00BE               	movwf	_state_machine
  2426  0145  29F2               	goto	l300
  2427  0146                     __ccov163_end_blk48:
  2428  0146                     __ccov164_start_blk50:
  2429  0146                     l288:	
  2430                           ;statemachine.c: 144:         case STATE_STOP_SENDING_IHC_PULSE:
  2431                           
  2432                           
  2433                           ;statemachine.c: 146:             LATAbits.LATA0 = !1;
  2434  0146  0022               	movlb	2	; select bank2
  2435  0147  100C               	bcf	12,0	;volatile
  2436                           
  2437                           ;statemachine.c: 147:             LATAbits.LATA1 = !1;
  2438  0148  108C               	bcf	12,1	;volatile
  2439                           
  2440                           ;statemachine.c: 148:             LATAbits.LATA4 = !1;
  2441  0149  120C               	bcf	12,4	;volatile
  2442  014A                     __ccov164_end_blk50:
  2443  014A                     __ccov165_start_blk51:
  2444  014A                     l2114:
  2445  014A  0020               	movlb	0	; select bank0
  2446  014B  16A1               	bsf	__ccovbit51_49/(0+8),__ccovbit51_49& (0+7)	;volatile
  2447                           
  2448                           ;statemachine.c: 151:             sleep_64ms_counter = 0;
  2449  014C  01B2               	clrf	_sleep_64ms_counter	;volatile
  2450  014D  01B3               	clrf	_sleep_64ms_counter+1	;volatile
  2451                           
  2452                           ;statemachine.c: 152:             sleep_128ms_counter = 0;
  2453  014E  01B0               	clrf	_sleep_128ms_counter	;volatile
  2454  014F  01B1               	clrf	_sleep_128ms_counter+1	;volatile
  2455                           
  2456                           ;statemachine.c: 153:             sleep_256ms_counter = 0;
  2457  0150  01AE               	clrf	_sleep_256ms_counter	;volatile
  2458  0151  01AF               	clrf	_sleep_256ms_counter+1	;volatile
  2459                           
  2460                           ;statemachine.c: 154:             sleep_1s_counter = 0;
  2461  0152  01AC               	clrf	_sleep_1s_counter	;volatile
  2462  0153  01AD               	clrf	_sleep_1s_counter+1	;volatile
  2463                           
  2464                           ;statemachine.c: 155:             sleep_4s_counter = 0;
  2465  0154  01AA               	clrf	_sleep_4s_counter	;volatile
  2466  0155  01AB               	clrf	_sleep_4s_counter+1	;volatile
  2467  0156  2926               	goto	l2104
  2468  0157                     __ccov165_end_blk51:
  2469  0157                     __ccov166_start_blk55:
  2470  0157                     l2120:
  2471                           
  2472                           ;statemachine.c: 184:             enable_watchdog_timer();
  2473  0157  3184  2405  3180   	fcall	_enable_watchdog_timer
  2474                           
  2475                           ;statemachine.c: 185:             enable_external_interrupt();
  2476  015A  3184  240D  3180   	fcall	_enable_external_interrupt
  2477  015D  0063               	sleep	;# 
  2478  015E                     __ccov166_end_blk55:
  2479  015E                     __ccov167_start_blk56:
  2480  015E                     l2122:
  2481                           
  2482                           ;statemachine.c: 188:             __nop();
  2483  015E  0000               	nop
  2484                           
  2485                           ;statemachine.c: 190:             disable_watchdog_timer();
  2486  015F  3184  2409  3180   	fcall	_disable_watchdog_timer
  2487  0162                     __ccov167_end_blk56:
  2488  0162                     __ccov168_start_blk62:
  2489  0162                     l2130:
  2490                           
  2491                           ;statemachine.c: 212:             if (sleep_256s_counter >= 337) {
  2492  0162  0020               	movlb	0	; select bank0
  2493  0163  0829               	movf	_sleep_256s_counter+1,w	;volatile
  2494  0164  3A80               	xorlw	128
  2495  0165  00C4               	movwf	??_checkState1
  2496  0166  3081               	movlw	129
  2497  0167  0244               	subwf	??_checkState1,w
  2498  0168  1D03               	skipz
  2499  0169  296C               	goto	u695
  2500  016A  3051               	movlw	81
  2501  016B  0228               	subwf	_sleep_256s_counter,w	;volatile
  2502  016C                     u695:
  2503  016C  1C03               	skipc
  2504  016D  296F               	goto	u691
  2505  016E  2970               	goto	u690
  2506  016F                     u691:
  2507  016F  29C8               	goto	l292
  2508  0170                     __ccov168_end_blk62:
  2509  0170                     u690:
  2510  0170                     __ccov169_start_blk63:
  2511  0170                     l2132:
  2512                           
  2513                           ;statemachine.c: 214:                 BatteryVoltage = getBatteryVoltage();
  2514  0170  3183  2397  3180   	fcall	_getBatteryVoltage
  2515  0173  0876               	movf	?_getBatteryVoltage+1,w
  2516  0174  00FD               	movwf	_BatteryVoltage+1	;volatile
  2517  0175  0875               	movf	?_getBatteryVoltage,w
  2518  0176  00FC               	movwf	_BatteryVoltage	;volatile
  2519                           
  2520                           ;statemachine.c: 218:                 millivolts = (8192 / BatteryVoltage) * 1024;
  2521  0177  087D               	movf	_BatteryVoltage+1,w	;volatile
  2522  0178  00F6               	movwf	___awdiv@divisor+1
  2523  0179  087C               	movf	_BatteryVoltage,w	;volatile
  2524  017A  00F5               	movwf	___awdiv@divisor
  2525  017B  3000               	movlw	0
  2526  017C  00F7               	movwf	___awdiv@dividend
  2527  017D  3020               	movlw	32
  2528  017E  00F8               	movwf	___awdiv@dividend+1
  2529  017F  3183  2337  3180   	fcall	___awdiv
  2530  0182  0875               	movf	?___awdiv,w
  2531  0183  0020               	movlb	0	; select bank0
  2532  0184  00C4               	movwf	??_checkState1
  2533  0185  0876               	movf	?___awdiv+1,w
  2534  0186  00C5               	movwf	??_checkState1+1
  2535  0187  300A               	movlw	10
  2536  0188                     u705:
  2537  0188  35C4               	lslf	??_checkState1,f
  2538  0189  0DC5               	rlf	??_checkState1+1,f
  2539  018A  0B89               	decfsz	9,f
  2540  018B  2988               	goto	u705
  2541  018C  0844               	movf	??_checkState1,w
  2542  018D  00B8               	movwf	_millivolts	;volatile
  2543  018E  0845               	movf	??_checkState1+1,w
  2544  018F  00B9               	movwf	_millivolts+1	;volatile
  2545                           
  2546                           ;statemachine.c: 219:                 millivolts = millivolts /8;
  2547  0190  3008               	movlw	8
  2548  0191  00F5               	movwf	___awdiv@divisor
  2549  0192  3000               	movlw	0
  2550  0193  00F6               	movwf	___awdiv@divisor+1
  2551  0194  0839               	movf	_millivolts+1,w	;volatile
  2552  0195  00F8               	movwf	___awdiv@dividend+1
  2553  0196  0838               	movf	_millivolts,w	;volatile
  2554  0197  00F7               	movwf	___awdiv@dividend
  2555  0198  3183  2337  3180   	fcall	___awdiv
  2556  019B  0876               	movf	?___awdiv+1,w
  2557  019C  0020               	movlb	0	; select bank0
  2558  019D  00B9               	movwf	_millivolts+1	;volatile
  2559  019E  0875               	movf	?___awdiv,w
  2560  019F  00B8               	movwf	_millivolts	;volatile
  2561  01A0                     __ccov169_end_blk63:
  2562  01A0                     __ccov170_start_blk64:
  2563  01A0                     l2134:
  2564                           
  2565                           ;statemachine.c: 229:                 if (BatteryVoltage <= 2400) {
  2566  01A0  087D               	movf	_BatteryVoltage+1,w	;volatile
  2567  01A1  3A80               	xorlw	128
  2568  01A2  00C4               	movwf	??_checkState1
  2569  01A3  3089               	movlw	137
  2570  01A4  0244               	subwf	??_checkState1,w
  2571  01A5  1D03               	skipz
  2572  01A6  29A9               	goto	u715
  2573  01A7  3061               	movlw	97
  2574  01A8  027C               	subwf	_BatteryVoltage,w	;volatile
  2575  01A9                     u715:
  2576  01A9  1803               	skipnc
  2577  01AA  29AC               	goto	u711
  2578  01AB  29AD               	goto	u710
  2579  01AC                     u711:
  2580  01AC  29BD               	goto	l293
  2581  01AD                     __ccov170_end_blk64:
  2582  01AD                     u710:
  2583  01AD                     __ccov171_start_blk65:
  2584  01AD                     l2136:
  2585                           
  2586                           ;statemachine.c: 230:                     LATAbits.LATA4 = 1;
  2587  01AD  0022               	movlb	2	; select bank2
  2588  01AE  160C               	bsf	12,4	;volatile
  2589  01AF                     __ccov171_end_blk65:
  2590  01AF                     __ccov172_start_blk66:
  2591  01AF                     l2138:
  2592                           
  2593                           ;statemachine.c: 231:                     _delay((unsigned long)((5*8)*(16000000/4000.0)
      +                          ));
  2594  01AF  30D0               	movlw	208
  2595  01B0  0020               	movlb	0	; select bank0
  2596  01B1  00C4               	movwf	??_checkState1
  2597  01B2  30C9               	movlw	201
  2598  01B3                     u777:
  2599  01B3  0B89               	decfsz	9,f
  2600  01B4  29B3               	goto	u777
  2601  01B5  0BC4               	decfsz	??_checkState1,f
  2602  01B6  29B3               	goto	u777
  2603  01B7  3200               	nop2
  2604  01B8                     __ccov172_end_blk66:
  2605  01B8                     __ccov173_start_blk67:
  2606  01B8                     l2140:
  2607  01B8  0020               	movlb	0	; select bank0
  2608  01B9  1621               	bsf	__ccovbit67_50/(0+8),__ccovbit67_50& (0+7)	;volatile
  2609                           
  2610                           ;statemachine.c: 232:                     LATAbits.LATA4 = !1;
  2611  01BA  0022               	movlb	2	; select bank2
  2612  01BB  120C               	bcf	12,4	;volatile
  2613                           
  2614                           ;statemachine.c: 233:                 }
  2615  01BC  29C1               	goto	l2142
  2616  01BD                     __ccov173_end_blk67:
  2617  01BD                     __ccov174_start_blk68:
  2618  01BD                     l293:	
  2619                           ;statemachine.c: 234:                 else
  2620                           
  2621  01BD  0020               	movlb	0	; select bank0
  2622  01BE  15A1               	bsf	__ccovbit68_51/(0+8),__ccovbit68_51& (0+7)	;volatile
  2623                           
  2624                           ;statemachine.c: 235:                     LATAbits.LATA4 = !1;
  2625  01BF  0022               	movlb	2	; select bank2
  2626  01C0  120C               	bcf	12,4	;volatile
  2627  01C1                     __ccov174_end_blk68:
  2628  01C1                     __ccov175_start_blk70:
  2629  01C1                     l2142:
  2630  01C1  0020               	movlb	0	; select bank0
  2631  01C2  1521               	bsf	__ccovbit70_52/(0+8),__ccovbit70_52& (0+7)	;volatile
  2632                           
  2633                           ;statemachine.c: 236:                 sleep_256s_counter = 1;
  2634  01C3  3001               	movlw	1
  2635  01C4  00A8               	movwf	_sleep_256s_counter	;volatile
  2636  01C5  3000               	movlw	0
  2637  01C6  00A9               	movwf	_sleep_256s_counter+1	;volatile
  2638                           
  2639                           ;statemachine.c: 237:             }
  2640  01C7  2898               	goto	l2062
  2641  01C8                     __ccov175_end_blk70:
  2642  01C8                     __ccov176_start_blk71:
  2643  01C8                     l292:	
  2644                           ;statemachine.c: 238:             else {
  2645                           
  2646  01C8  0020               	movlb	0	; select bank0
  2647  01C9  14A1               	bsf	__ccovbit71_53/(0+8),__ccovbit71_53& (0+7)	;volatile
  2648                           
  2649                           ;statemachine.c: 241:                 __nop();
  2650  01CA  0000               	nop
  2651  01CB  2898               	goto	l2062
  2652  01CC                     __ccov176_end_blk71:
  2653  01CC                     __ccov177_start_blk80:
  2654  01CC                     l2148:
  2655  01CC  0020               	movlb	0	; select bank0
  2656  01CD  083E               	movf	_state_machine,w
  2657  01CE  00C4               	movwf	??_checkState1
  2658  01CF  01C5               	clrf	??_checkState1+1
  2659                           
  2660                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2661                           ; Switch size 1, requested type "simple"
  2662                           ; Number of cases is 1, Range of values is 0 to 0
  2663                           ; switch strategies available:
  2664                           ; Name         Instructions Cycles
  2665                           ; simple_byte            4     3 (average)
  2666                           ; direct_byte            8     6 (fixed)
  2667                           ; jumptable            260     6 (fixed)
  2668                           ;	Chosen strategy is simple_byte
  2669  01D0  0845               	movf	??_checkState1+1,w
  2670  01D1  3A00               	xorlw	0	; case 0
  2671  01D2  1903               	skipnz
  2672  01D3  29D5               	goto	l2436
  2673  01D4  29F2               	goto	l300
  2674  01D5                     l2436:
  2675                           
  2676                           ; Switch size 1, requested type "simple"
  2677                           ; Number of cases is 9, Range of values is 0 to 9
  2678                           ; switch strategies available:
  2679                           ; Name         Instructions Cycles
  2680                           ; direct_byte           26     6 (fixed)
  2681                           ; simple_byte           28    15 (average)
  2682                           ; jumptable            260     6 (fixed)
  2683                           ;	Chosen strategy is simple_byte
  2684  01D5  0844               	movf	??_checkState1,w
  2685  01D6  3A00               	xorlw	0	; case 0
  2686  01D7  1903               	skipnz
  2687  01D8  288C               	goto	l2058
  2688  01D9  3A01               	xorlw	1	; case 1
  2689  01DA  1903               	skipnz
  2690  01DB  289F               	goto	l2064
  2691  01DC  3A03               	xorlw	3	; case 2
  2692  01DD  1903               	skipnz
  2693  01DE  28B4               	goto	l2070
  2694  01DF  3A01               	xorlw	1	; case 3
  2695  01E0  1903               	skipnz
  2696  01E1  28CE               	goto	l271
  2697  01E2  3A07               	xorlw	7	; case 4
  2698  01E3  1903               	skipnz
  2699  01E4  28D0               	goto	l2082
  2700  01E5  3A01               	xorlw	1	; case 5
  2701  01E6  1903               	skipnz
  2702  01E7  28E6               	goto	l2088
  2703  01E8  3A03               	xorlw	3	; case 6
  2704  01E9  1903               	skipnz
  2705  01EA  292B               	goto	l2108
  2706  01EB  3A01               	xorlw	1	; case 7
  2707  01EC  1903               	skipnz
  2708  01ED  2946               	goto	l288
  2709  01EE  3A0E               	xorlw	14	; case 9
  2710  01EF  1903               	skipnz
  2711  01F0  2957               	goto	l2120
  2712  01F1  29F2               	goto	l300
  2713  01F2                     __ccov177_end_blk80:
  2714  01F2                     __ccov178_start_blk82:
  2715  01F2                     l300:
  2716  01F2  1421               	bsf	__ccovbit82_54/(0+8),__ccovbit82_54& (0+7)	;volatile
  2717  01F3  0008               	return
  2718  01F4                     __end_of_checkState1:
  2719  01F4                     
  2720                           	psect	text8
  2721  03F8                     __ptext8:	
  2722 ;; *************** function _set_watchdog_timer_128ms *****************
  2723 ;; Defined at:
  2724 ;;		line 475 in file "main.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;		None
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;		None
  2729 ;; Return value:  Size  Location     Type
  2730 ;;                  1    wreg      void 
  2731 ;; Registers used:
  2732 ;;		wreg, status,2, status,0
  2733 ;; Tracked objects:
  2734 ;;		On entry : 0/0
  2735 ;;		On exit  : 0/0
  2736 ;;		Unchanged: 0/0
  2737 ;; Data sizes:     COMMON   BANK0   BANK1
  2738 ;;      Params:         0       0       0
  2739 ;;      Locals:         0       0       0
  2740 ;;      Temps:          0       0       0
  2741 ;;      Totals:         0       0       0
  2742 ;;Total ram usage:        0 bytes
  2743 ;; Hardware stack levels used: 1
  2744 ;; Hardware stack levels required when called: 1
  2745 ;; This function calls:
  2746 ;;		Nothing
  2747 ;; This function is called by:
  2748 ;;		_main
  2749 ;;		_watch_dog_incrementing_timer
  2750 ;;		_checkState1
  2751 ;; This function uses a non-reentrant model
  2752 ;;
  2753                           
  2754                           
  2755                           ;psect for function _set_watchdog_timer_128ms
  2756  03F8                     _set_watchdog_timer_128ms:
  2757                           
  2758                           ;incstack = 0
  2759                           ; Regs used in _set_watchdog_timer_128ms: [wreg+status,2+status,0]
  2760  03F8                     l1248:
  2761                           
  2762                           ;main.c: 476:     WDTCONbits.WDTPS = 0b00111;
  2763  03F8  0021               	movlb	1	; select bank1
  2764  03F9  0817               	movf	23,w	;volatile
  2765  03FA  39C1               	andlw	-63
  2766  03FB  380E               	iorlw	14
  2767  03FC  0097               	movwf	23	;volatile
  2768  03FD                     __ccov103_end_blk0:
  2769  03FD                     __ccov104_start_blk1:
  2770  03FD                     l163:
  2771  03FD  14F1               	bsf	__ccovbit1_12/(0+8),__ccovbit1_12& (0+7)	;volatile
  2772  03FE  0008               	return
  2773  03FF                     __end_of_set_watchdog_timer_128ms:
  2774  03FF                     
  2775                           	psect	text9
  2776  0397                     __ptext9:	
  2777 ;; *************** function _getBatteryVoltage *****************
  2778 ;; Defined at:
  2779 ;;		line 409 in file "main.c"
  2780 ;; Parameters:    Size  Location     Type
  2781 ;;		None
  2782 ;; Auto vars:     Size  Location     Type
  2783 ;;  adc_val         2    7[COMMON] int 
  2784 ;; Return value:  Size  Location     Type
  2785 ;;                  2    2[COMMON] int 
  2786 ;; Registers used:
  2787 ;;		wreg, status,2, status,0
  2788 ;; Tracked objects:
  2789 ;;		On entry : 0/0
  2790 ;;		On exit  : 0/0
  2791 ;;		Unchanged: 0/0
  2792 ;; Data sizes:     COMMON   BANK0   BANK1
  2793 ;;      Params:         2       0       0
  2794 ;;      Locals:         2       0       0
  2795 ;;      Temps:          3       0       0
  2796 ;;      Totals:         7       0       0
  2797 ;;Total ram usage:        7 bytes
  2798 ;; Hardware stack levels used: 1
  2799 ;; Hardware stack levels required when called: 1
  2800 ;; This function calls:
  2801 ;;		Nothing
  2802 ;; This function is called by:
  2803 ;;		_main
  2804 ;;		_checkState1
  2805 ;; This function uses a non-reentrant model
  2806 ;;
  2807                           
  2808                           
  2809                           ;psect for function _getBatteryVoltage
  2810  0397                     _getBatteryVoltage:
  2811                           
  2812                           ;incstack = 0
  2813                           ; Regs used in _getBatteryVoltage: [wreg+status,2+status,0]
  2814  0397                     l1222:
  2815                           
  2816                           ;main.c: 418:     FVRCONbits.ADFVR = 0b01;
  2817  0397  0022               	movlb	2	; select bank2
  2818  0398  0817               	movf	23,w	;volatile
  2819  0399  39FC               	andlw	-4
  2820  039A  3801               	iorlw	1
  2821  039B  0097               	movwf	23	;volatile
  2822  039C                     __ccov71_end_blk0:
  2823  039C                     __ccov72_start_blk1:
  2824  039C                     l1224:
  2825                           
  2826                           ;main.c: 420:     FVRCONbits.FVREN = 1;
  2827  039C  1797               	bsf	23,7	;volatile
  2828  039D                     __ccov72_end_blk1:
  2829  039D                     __ccov73_start_blk3:
  2830  039D                     l140:	
  2831                           ;main.c: 421:     while(!FVRCONbits.FVRRDY);
  2832                           
  2833  039D  1F17               	btfss	23,6	;volatile
  2834  039E  2BA0               	goto	u131
  2835  039F  2BA1               	goto	u130
  2836  03A0                     u131:
  2837  03A0  2B9D               	goto	l140
  2838  03A1                     __ccov73_end_blk3:
  2839  03A1                     u130:
  2840  03A1                     __ccov74_start_blk4:
  2841  03A1                     l142:
  2842                           
  2843                           ;main.c: 423:     ADCON1bits.ADFM = 1;
  2844  03A1  0021               	movlb	1	; select bank1
  2845  03A2  179E               	bsf	30,7	;volatile
  2846  03A3                     __ccov74_end_blk4:
  2847  03A3                     __ccov75_start_blk5:
  2848  03A3                     l1226:
  2849                           
  2850                           ;main.c: 424:     ADCON0bits.CHS = 0b11111;
  2851  03A3  307C               	movlw	124
  2852  03A4  049D               	iorwf	29,f	;volatile
  2853  03A5                     __ccov75_end_blk5:
  2854  03A5                     __ccov76_start_blk6:
  2855  03A5                     l1228:
  2856                           
  2857                           ;main.c: 425:     _delay((unsigned long)((200)*(16000000/4000000.0)));
  2858  03A5  30A0               	movlw	160
  2859  03A6                     u787:
  2860  03A6  3200               	nop2
  2861  03A7  0B89               	decfsz	9,f
  2862  03A8  2BA6               	goto	u787
  2863  03A9                     __ccov76_end_blk6:
  2864  03A9                     __ccov77_start_blk7:
  2865  03A9                     l1230:
  2866                           
  2867                           ;main.c: 427:     ADCON1bits.ADPREF = 0b00;
  2868  03A9  30FC               	movlw	-4
  2869  03AA  0021               	movlb	1	; select bank1
  2870  03AB  059E               	andwf	30,f	;volatile
  2871  03AC                     __ccov77_end_blk7:
  2872  03AC                     __ccov78_start_blk8:
  2873  03AC                     l1232:
  2874                           
  2875                           ;main.c: 429:     ADCON0bits.ADON = 1;
  2876  03AC  141D               	bsf	29,0	;volatile
  2877  03AD                     __ccov78_end_blk8:
  2878  03AD                     l1234:
  2879  03AD                     __ccov80_start_blk10:
  2880  03AD                     l1236:
  2881                           
  2882                           ;main.c: 434:     ADCON0bits.GO = 1;
  2883  03AD  149D               	bsf	29,1	;volatile
  2884  03AE                     __ccov80_end_blk10:
  2885  03AE                     __ccov81_start_blk12:
  2886  03AE                     l143:	
  2887                           ;main.c: 435:     while (!ADCON0bits.GO_nDONE);
  2888                           
  2889  03AE  1C9D               	btfss	29,1	;volatile
  2890  03AF  2BB1               	goto	u141
  2891  03B0  2BB2               	goto	u140
  2892  03B1                     u141:
  2893  03B1  2BAE               	goto	l143
  2894  03B2                     __ccov81_end_blk12:
  2895  03B2                     u140:
  2896  03B2                     __ccov82_start_blk14:
  2897  03B2                     l1238:
  2898                           
  2899                           ;main.c: 437:     adc_val = (ADRESH << 8);
  2900  03B2  081C               	movf	28,w	;volatile
  2901  03B3  00F7               	movwf	??_getBatteryVoltage
  2902  03B4  01F8               	clrf	??_getBatteryVoltage+1
  2903  03B5  0877               	movf	??_getBatteryVoltage,w
  2904  03B6  00F8               	movwf	??_getBatteryVoltage+1
  2905  03B7  01F7               	clrf	??_getBatteryVoltage
  2906  03B8  0877               	movf	??_getBatteryVoltage,w
  2907  03B9  00FA               	movwf	getBatteryVoltage@adc_val
  2908  03BA  0878               	movf	??_getBatteryVoltage+1,w
  2909  03BB  00FB               	movwf	getBatteryVoltage@adc_val+1
  2910                           
  2911                           ;main.c: 438:     adc_val |= ADRESL;
  2912  03BC  081B               	movf	27,w	;volatile
  2913  03BD  00F7               	movwf	??_getBatteryVoltage
  2914  03BE  01F8               	clrf	??_getBatteryVoltage+1
  2915  03BF  0877               	movf	??_getBatteryVoltage,w
  2916  03C0  04FA               	iorwf	getBatteryVoltage@adc_val,f
  2917  03C1  0878               	movf	??_getBatteryVoltage+1,w
  2918  03C2  04FB               	iorwf	getBatteryVoltage@adc_val+1,f
  2919  03C3                     __ccov82_end_blk14:
  2920  03C3                     __ccov83_start_blk15:
  2921  03C3                     l1240:
  2922                           
  2923                           ;main.c: 440:     FVRCONbits.FVREN = 0;
  2924  03C3  0022               	movlb	2	; select bank2
  2925  03C4  1397               	bcf	23,7	;volatile
  2926  03C5                     __ccov83_end_blk15:
  2927  03C5                     __ccov84_start_blk16:
  2928  03C5                     l1242:
  2929                           
  2930                           ;main.c: 441:     ADCON0bits.ADON = 0;
  2931  03C5  0021               	movlb	1	; select bank1
  2932  03C6  101D               	bcf	29,0	;volatile
  2933                           
  2934                           ;main.c: 442:     return adc_val;
  2935  03C7  087B               	movf	getBatteryVoltage@adc_val+1,w
  2936  03C8  00F6               	movwf	?_getBatteryVoltage+1
  2937  03C9  087A               	movf	getBatteryVoltage@adc_val,w
  2938  03CA  00F5               	movwf	?_getBatteryVoltage
  2939  03CB                     __ccov84_end_blk16:
  2940  03CB                     __ccov85_start_blk18:
  2941  03CB                     l146:
  2942  03CB  1472               	bsf	__ccovbit18_5/(0+8),__ccovbit18_5& (0+7)	;volatile
  2943  03CC  0008               	return
  2944  03CD                     __end_of_getBatteryVoltage:
  2945  03CD                     
  2946                           	psect	text10
  2947  0405                     __ptext10:	
  2948 ;; *************** function _enable_watchdog_timer *****************
  2949 ;; Defined at:
  2950 ;;		line 491 in file "main.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;		None
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;		None
  2955 ;; Return value:  Size  Location     Type
  2956 ;;                  1    wreg      void 
  2957 ;; Registers used:
  2958 ;;		None
  2959 ;; Tracked objects:
  2960 ;;		On entry : 0/0
  2961 ;;		On exit  : 0/0
  2962 ;;		Unchanged: 0/0
  2963 ;; Data sizes:     COMMON   BANK0   BANK1
  2964 ;;      Params:         0       0       0
  2965 ;;      Locals:         0       0       0
  2966 ;;      Temps:          0       0       0
  2967 ;;      Totals:         0       0       0
  2968 ;;Total ram usage:        0 bytes
  2969 ;; Hardware stack levels used: 1
  2970 ;; Hardware stack levels required when called: 1
  2971 ;; This function calls:
  2972 ;;		Nothing
  2973 ;; This function is called by:
  2974 ;;		_checkState1
  2975 ;; This function uses a non-reentrant model
  2976 ;;
  2977                           
  2978                           
  2979                           ;psect for function _enable_watchdog_timer
  2980  0405                     _enable_watchdog_timer:
  2981                           
  2982                           ;incstack = 0
  2983                           ; Regs used in _enable_watchdog_timer: []
  2984  0405                     l1258:
  2985                           
  2986                           ;main.c: 492:     WDTCONbits.SWDTEN = 1;
  2987  0405  0021               	movlb	1	; select bank1
  2988  0406  1417               	bsf	23,0	;volatile
  2989  0407                     __ccov113_end_blk0:
  2990  0407                     __ccov114_start_blk1:
  2991  0407                     l178:
  2992  0407  1670               	bsf	__ccovbit1_17/(0+8),__ccovbit1_17& (0+7)	;volatile
  2993  0408  0008               	return
  2994  0409                     __end_of_enable_watchdog_timer:
  2995  0409                     
  2996                           	psect	text11
  2997  040D                     __ptext11:	
  2998 ;; *************** function _enable_external_interrupt *****************
  2999 ;; Defined at:
  3000 ;;		line 497 in file "main.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;		None
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;		None
  3005 ;; Return value:  Size  Location     Type
  3006 ;;                  1    wreg      void 
  3007 ;; Registers used:
  3008 ;;		None
  3009 ;; Tracked objects:
  3010 ;;		On entry : 0/0
  3011 ;;		On exit  : 0/0
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMMON   BANK0   BANK1
  3014 ;;      Params:         0       0       0
  3015 ;;      Locals:         0       0       0
  3016 ;;      Temps:          0       0       0
  3017 ;;      Totals:         0       0       0
  3018 ;;Total ram usage:        0 bytes
  3019 ;; Hardware stack levels used: 1
  3020 ;; Hardware stack levels required when called: 1
  3021 ;; This function calls:
  3022 ;;		Nothing
  3023 ;; This function is called by:
  3024 ;;		_main
  3025 ;;		_checkState1
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028                           
  3029                           
  3030                           ;psect for function _enable_external_interrupt
  3031  040D                     _enable_external_interrupt:
  3032                           
  3033                           ;incstack = 0
  3034                           ; Regs used in _enable_external_interrupt: []
  3035  040D                     l1246:
  3036                           
  3037                           ;main.c: 498:     INTCONbits.INTE = 1;
  3038  040D  160B               	bsf	11,4	;volatile
  3039  040E                     __ccov117_end_blk0:
  3040  040E                     __ccov118_start_blk1:
  3041  040E                     l184:
  3042  040E  1570               	bsf	__ccovbit1_19/(0+8),__ccovbit1_19& (0+7)	;volatile
  3043  040F  0008               	return
  3044  0410                     __end_of_enable_external_interrupt:
  3045  0410                     
  3046                           	psect	text12
  3047  0409                     __ptext12:	
  3048 ;; *************** function _disable_watchdog_timer *****************
  3049 ;; Defined at:
  3050 ;;		line 494 in file "main.c"
  3051 ;; Parameters:    Size  Location     Type
  3052 ;;		None
  3053 ;; Auto vars:     Size  Location     Type
  3054 ;;		None
  3055 ;; Return value:  Size  Location     Type
  3056 ;;                  1    wreg      void 
  3057 ;; Registers used:
  3058 ;;		None
  3059 ;; Tracked objects:
  3060 ;;		On entry : 0/0
  3061 ;;		On exit  : 0/0
  3062 ;;		Unchanged: 0/0
  3063 ;; Data sizes:     COMMON   BANK0   BANK1
  3064 ;;      Params:         0       0       0
  3065 ;;      Locals:         0       0       0
  3066 ;;      Temps:          0       0       0
  3067 ;;      Totals:         0       0       0
  3068 ;;Total ram usage:        0 bytes
  3069 ;; Hardware stack levels used: 1
  3070 ;; Hardware stack levels required when called: 1
  3071 ;; This function calls:
  3072 ;;		Nothing
  3073 ;; This function is called by:
  3074 ;;		_main
  3075 ;;		_checkState1
  3076 ;; This function uses a non-reentrant model
  3077 ;;
  3078                           
  3079                           
  3080                           ;psect for function _disable_watchdog_timer
  3081  0409                     _disable_watchdog_timer:
  3082                           
  3083                           ;incstack = 0
  3084                           ; Regs used in _disable_watchdog_timer: []
  3085  0409                     l1220:
  3086                           
  3087                           ;main.c: 495:     WDTCONbits.SWDTEN = 0;
  3088  0409  0021               	movlb	1	; select bank1
  3089  040A  1017               	bcf	23,0	;volatile
  3090  040B                     __ccov115_end_blk0:
  3091  040B                     __ccov116_start_blk1:
  3092  040B                     l181:
  3093  040B  15F0               	bsf	__ccovbit1_18/(0+8),__ccovbit1_18& (0+7)	;volatile
  3094  040C  0008               	return
  3095  040D                     __end_of_disable_watchdog_timer:
  3096  040D                     
  3097                           	psect	text13
  3098  0410                     __ptext13:	
  3099 ;; *************** function _disable_external_interrupt *****************
  3100 ;; Defined at:
  3101 ;;		line 500 in file "main.c"
  3102 ;; Parameters:    Size  Location     Type
  3103 ;;		None
  3104 ;; Auto vars:     Size  Location     Type
  3105 ;;		None
  3106 ;; Return value:  Size  Location     Type
  3107 ;;                  1    wreg      void 
  3108 ;; Registers used:
  3109 ;;		None
  3110 ;; Tracked objects:
  3111 ;;		On entry : 0/0
  3112 ;;		On exit  : 0/0
  3113 ;;		Unchanged: 0/0
  3114 ;; Data sizes:     COMMON   BANK0   BANK1
  3115 ;;      Params:         0       0       0
  3116 ;;      Locals:         0       0       0
  3117 ;;      Temps:          0       0       0
  3118 ;;      Totals:         0       0       0
  3119 ;;Total ram usage:        0 bytes
  3120 ;; Hardware stack levels used: 1
  3121 ;; Hardware stack levels required when called: 1
  3122 ;; This function calls:
  3123 ;;		Nothing
  3124 ;; This function is called by:
  3125 ;;		_checkState1
  3126 ;; This function uses a non-reentrant model
  3127 ;;
  3128                           
  3129                           
  3130                           ;psect for function _disable_external_interrupt
  3131  0410                     _disable_external_interrupt:
  3132                           
  3133                           ;incstack = 0
  3134                           ; Regs used in _disable_external_interrupt: []
  3135  0410                     l1260:
  3136                           
  3137                           ;main.c: 501:     INTCONbits.INTE = 0;
  3138  0410  120B               	bcf	11,4	;volatile
  3139  0411                     __ccov119_end_blk0:
  3140  0411                     __ccov120_start_blk1:
  3141  0411                     l187:
  3142  0411  14F0               	bsf	__ccovbit1_20/(0+8),__ccovbit1_20& (0+7)	;volatile
  3143  0412  0008               	return
  3144  0413                     __end_of_disable_external_interrupt:
  3145  0413                     
  3146                           	psect	text14
  3147  0337                     __ptext14:	
  3148 ;; *************** function ___awdiv *****************
  3149 ;; Defined at:
  3150 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  3151 ;; Parameters:    Size  Location     Type
  3152 ;;  divisor         2    2[COMMON] int 
  3153 ;;  dividend        2    4[COMMON] int 
  3154 ;; Auto vars:     Size  Location     Type
  3155 ;;  quotient        2    2[BANK0 ] int 
  3156 ;;  sign            1    1[BANK0 ] unsigned char 
  3157 ;;  counter         1    0[BANK0 ] unsigned char 
  3158 ;; Return value:  Size  Location     Type
  3159 ;;                  2    2[COMMON] int 
  3160 ;; Registers used:
  3161 ;;		wreg, status,2, status,0
  3162 ;; Tracked objects:
  3163 ;;		On entry : 0/0
  3164 ;;		On exit  : 0/0
  3165 ;;		Unchanged: 0/0
  3166 ;; Data sizes:     COMMON   BANK0   BANK1
  3167 ;;      Params:         4       0       0
  3168 ;;      Locals:         0       4       0
  3169 ;;      Temps:          1       0       0
  3170 ;;      Totals:         5       4       0
  3171 ;;Total ram usage:        9 bytes
  3172 ;; Hardware stack levels used: 1
  3173 ;; Hardware stack levels required when called: 1
  3174 ;; This function calls:
  3175 ;;		Nothing
  3176 ;; This function is called by:
  3177 ;;		_main
  3178 ;;		_checkState1
  3179 ;; This function uses a non-reentrant model
  3180 ;;
  3181                           
  3182                           
  3183                           ;psect for function ___awdiv
  3184  0337                     ___awdiv:
  3185  0337                     l2012:	
  3186                           ;incstack = 0
  3187                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3188                           
  3189  0337  0020               	movlb	0	; select bank0
  3190  0338  01C1               	clrf	___awdiv@sign
  3191  0339                     l2014:
  3192  0339  1FF6               	btfss	___awdiv@divisor+1,7
  3193  033A  2B3C               	goto	u551
  3194  033B  2B3D               	goto	u550
  3195  033C                     u551:
  3196  033C  2B44               	goto	l2020
  3197  033D                     u550:
  3198  033D                     l2016:
  3199  033D  09F5               	comf	___awdiv@divisor,f
  3200  033E  09F6               	comf	___awdiv@divisor+1,f
  3201  033F  0AF5               	incf	___awdiv@divisor,f
  3202  0340  1903               	skipnz
  3203  0341  0AF6               	incf	___awdiv@divisor+1,f
  3204  0342                     l2018:
  3205  0342  01C1               	clrf	___awdiv@sign
  3206  0343  0AC1               	incf	___awdiv@sign,f
  3207  0344                     l2020:
  3208  0344  1FF8               	btfss	___awdiv@dividend+1,7
  3209  0345  2B47               	goto	u561
  3210  0346  2B48               	goto	u560
  3211  0347                     u561:
  3212  0347  2B51               	goto	l2026
  3213  0348                     u560:
  3214  0348                     l2022:
  3215  0348  09F7               	comf	___awdiv@dividend,f
  3216  0349  09F8               	comf	___awdiv@dividend+1,f
  3217  034A  0AF7               	incf	___awdiv@dividend,f
  3218  034B  1903               	skipnz
  3219  034C  0AF8               	incf	___awdiv@dividend+1,f
  3220  034D                     l2024:
  3221  034D  3001               	movlw	1
  3222  034E  00F9               	movwf	??___awdiv
  3223  034F  0879               	movf	??___awdiv,w
  3224  0350  06C1               	xorwf	___awdiv@sign,f
  3225  0351                     l2026:
  3226  0351  01C2               	clrf	___awdiv@quotient
  3227  0352  01C3               	clrf	___awdiv@quotient+1
  3228  0353                     l2028:
  3229  0353  0875               	movf	___awdiv@divisor,w
  3230  0354  0476               	iorwf	___awdiv@divisor+1,w
  3231  0355  1903               	btfsc	3,2
  3232  0356  2B58               	goto	u571
  3233  0357  2B59               	goto	u570
  3234  0358                     u571:
  3235  0358  2B88               	goto	l2048
  3236  0359                     u570:
  3237  0359                     l2030:
  3238  0359  01C0               	clrf	___awdiv@counter
  3239  035A  0AC0               	incf	___awdiv@counter,f
  3240  035B  2B65               	goto	l2036
  3241  035C                     l2032:
  3242  035C  3001               	movlw	1
  3243  035D                     u585:
  3244  035D  35F5               	lslf	___awdiv@divisor,f
  3245  035E  0DF6               	rlf	___awdiv@divisor+1,f
  3246  035F  0B89               	decfsz	9,f
  3247  0360  2B5D               	goto	u585
  3248  0361                     l2034:
  3249  0361  3001               	movlw	1
  3250  0362  00F9               	movwf	??___awdiv
  3251  0363  0879               	movf	??___awdiv,w
  3252  0364  07C0               	addwf	___awdiv@counter,f
  3253  0365                     l2036:
  3254  0365  1FF6               	btfss	___awdiv@divisor+1,7
  3255  0366  2B68               	goto	u591
  3256  0367  2B69               	goto	u590
  3257  0368                     u591:
  3258  0368  2B5C               	goto	l2032
  3259  0369                     u590:
  3260  0369                     l2038:
  3261  0369  3001               	movlw	1
  3262  036A                     u605:
  3263  036A  35C2               	lslf	___awdiv@quotient,f
  3264  036B  0DC3               	rlf	___awdiv@quotient+1,f
  3265  036C  0B89               	decfsz	9,f
  3266  036D  2B6A               	goto	u605
  3267  036E  0876               	movf	___awdiv@divisor+1,w
  3268  036F  0278               	subwf	___awdiv@dividend+1,w
  3269  0370  1D03               	skipz
  3270  0371  2B74               	goto	u615
  3271  0372  0875               	movf	___awdiv@divisor,w
  3272  0373  0277               	subwf	___awdiv@dividend,w
  3273  0374                     u615:
  3274  0374  1C03               	skipc
  3275  0375  2B77               	goto	u611
  3276  0376  2B78               	goto	u610
  3277  0377                     u611:
  3278  0377  2B7D               	goto	l2044
  3279  0378                     u610:
  3280  0378                     l2040:
  3281  0378  0875               	movf	___awdiv@divisor,w
  3282  0379  02F7               	subwf	___awdiv@dividend,f
  3283  037A  0876               	movf	___awdiv@divisor+1,w
  3284  037B  3BF8               	subwfb	___awdiv@dividend+1,f
  3285  037C                     l2042:
  3286  037C  1442               	bsf	___awdiv@quotient,0
  3287  037D                     l2044:
  3288  037D  3001               	movlw	1
  3289  037E                     u625:
  3290  037E  36F6               	lsrf	___awdiv@divisor+1,f
  3291  037F  0CF5               	rrf	___awdiv@divisor,f
  3292  0380  0B89               	decfsz	9,f
  3293  0381  2B7E               	goto	u625
  3294  0382                     l2046:
  3295  0382  3001               	movlw	1
  3296  0383  02C0               	subwf	___awdiv@counter,f
  3297  0384  1D03               	btfss	3,2
  3298  0385  2B87               	goto	u631
  3299  0386  2B88               	goto	u630
  3300  0387                     u631:
  3301  0387  2B69               	goto	l2038
  3302  0388                     u630:
  3303  0388                     l2048:
  3304  0388  0841               	movf	___awdiv@sign,w
  3305  0389  1903               	btfsc	3,2
  3306  038A  2B8C               	goto	u641
  3307  038B  2B8D               	goto	u640
  3308  038C                     u641:
  3309  038C  2B92               	goto	l2052
  3310  038D                     u640:
  3311  038D                     l2050:
  3312  038D  09C2               	comf	___awdiv@quotient,f
  3313  038E  09C3               	comf	___awdiv@quotient+1,f
  3314  038F  0AC2               	incf	___awdiv@quotient,f
  3315  0390  1903               	skipnz
  3316  0391  0AC3               	incf	___awdiv@quotient+1,f
  3317  0392                     l2052:
  3318  0392  0843               	movf	___awdiv@quotient+1,w
  3319  0393  00F6               	movwf	?___awdiv+1
  3320  0394  0842               	movf	___awdiv@quotient,w
  3321  0395  00F5               	movwf	?___awdiv
  3322  0396                     l603:
  3323  0396  0008               	return
  3324  0397                     __end_of___awdiv:
  3325                           
  3326                           	psect	intentry
  3327  0004                     __pintentry:	
  3328 ;; *************** function _my_isr *****************
  3329 ;; Defined at:
  3330 ;;		line 503 in file "main.c"
  3331 ;; Parameters:    Size  Location     Type
  3332 ;;		None
  3333 ;; Auto vars:     Size  Location     Type
  3334 ;;		None
  3335 ;; Return value:  Size  Location     Type
  3336 ;;                  1    wreg      void 
  3337 ;; Registers used:
  3338 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3339 ;; Tracked objects:
  3340 ;;		On entry : 0/0
  3341 ;;		On exit  : 0/0
  3342 ;;		Unchanged: 0/0
  3343 ;; Data sizes:     COMMON   BANK0   BANK1
  3344 ;;      Params:         0       0       0
  3345 ;;      Locals:         0       0       0
  3346 ;;      Temps:          2       0       0
  3347 ;;      Totals:         2       0       0
  3348 ;;Total ram usage:        2 bytes
  3349 ;; Hardware stack levels used: 1
  3350 ;; This function calls:
  3351 ;;		Nothing
  3352 ;; This function is called by:
  3353 ;;		Interrupt level 1
  3354 ;; This function uses a non-reentrant model
  3355 ;;
  3356                           
  3357  0004                     _my_isr:
  3358                           
  3359                           ;incstack = 0
  3360  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3361                           
  3362                           ; Regs used in _my_isr: [wreg-fsr0h+status,2+status,0]
  3363  0005  3180               	pagesel	$
  3364  0006                     i1l1538:
  3365                           
  3366                           ;main.c: 506:     if (INTE && INTF) {
  3367  0006  1E0B               	btfss	11,4	;volatile
  3368  0007  2809               	goto	u29_21
  3369  0008  280A               	goto	u29_20
  3370  0009                     u29_21:
  3371  0009  2838               	goto	i1l192
  3372  000A                     u29_20:
  3373  000A                     __ccov121_end_blk0:
  3374  000A                     __ccov122_start_blk1:
  3375  000A                     i1l1540:
  3376  000A  1470               	bsf	__ccovbit1_21/(0+8),__ccovbit1_21& (0+7)	;volatile
  3377  000B  1C8B               	btfss	11,1	;volatile
  3378  000C  280E               	goto	u30_21
  3379  000D  280F               	goto	u30_20
  3380  000E                     u30_21:
  3381  000E  2838               	goto	i1l192
  3382  000F                     u30_20:
  3383  000F  2822               	goto	i1l1552
  3384  0010                     __ccov122_end_blk1:
  3385  0010                     __ccov123_start_blk3:
  3386  0010                     i1l194:	
  3387                           ;main.c: 510:             case 1:
  3388                           
  3389  0010  1425               	bsf	__ccovbit3_22/(0+8),__ccovbit3_22& (0+7)	;volatile
  3390                           
  3391                           ;main.c: 511:                 state_door = STATE_DOOR_OPEN;
  3392  0011  01BF               	clrf	_state_door
  3393  0012  0ABF               	incf	_state_door,f
  3394                           
  3395                           ;main.c: 512:                 OPTION_REGbits.INTEDG = !1;
  3396  0013  0021               	movlb	1	; select bank1
  3397  0014  1315               	bcf	21,6	;volatile
  3398                           
  3399                           ;main.c: 513:                 NewDoorPolarity = 1;
  3400  0015  1772               	bsf	_NewDoorPolarity/(0+8),_NewDoorPolarity& (0+7)
  3401                           
  3402                           ;main.c: 514:                 DoorStateBeforePrel = 1;
  3403  0016  0020               	movlb	0	; select bank0
  3404  0017  01BD               	clrf	_DoorStateBeforePrel
  3405  0018  0ABD               	incf	_DoorStateBeforePrel,f
  3406                           
  3407                           ;main.c: 515:                 break;
  3408  0019  2835               	goto	i1l195
  3409  001A                     __ccov123_end_blk3:
  3410  001A                     __ccov124_start_blk5:
  3411  001A                     i1l1544:
  3412                           
  3413                           ;main.c: 518:                 state_door = STATE_DOOR_CLOSED;
  3414  001A  01BF               	clrf	_state_door
  3415  001B                     __ccov124_end_blk5:
  3416  001B                     __ccov125_start_blk6:
  3417  001B                     i1l1546:
  3418                           
  3419                           ;main.c: 519:                 OPTION_REGbits.INTEDG = !0;
  3420  001B  0021               	movlb	1	; select bank1
  3421  001C  1715               	bsf	21,6	;volatile
  3422  001D                     __ccov125_end_blk6:
  3423  001D                     __ccov126_start_blk7:
  3424  001D                     i1l1548:
  3425  001D  0020               	movlb	0	; select bank0
  3426  001E  17A4               	bsf	__ccovbit7_23/(0+8),__ccovbit7_23& (0+7)	;volatile
  3427                           
  3428                           ;main.c: 520:                 NewDoorPolarity = 0;
  3429  001F  1372               	bcf	_NewDoorPolarity/(0+8),_NewDoorPolarity& (0+7)
  3430                           
  3431                           ;main.c: 521:                 DoorStateBeforePrel = 0;
  3432  0020  01BD               	clrf	_DoorStateBeforePrel
  3433                           
  3434                           ;main.c: 522:                 break;
  3435  0021  2835               	goto	i1l195
  3436  0022                     __ccov126_end_blk7:
  3437  0022                     __ccov127_start_blk10:
  3438  0022                     i1l1552:
  3439  0022  0020               	movlb	0	; select bank0
  3440  0023  0C0C               	rrf	12,w	;volatile
  3441  0024  0C89               	rrf	9,f
  3442  0025  3901               	andlw	1
  3443  0026  00F3               	movwf	??_my_isr
  3444  0027  01F4               	clrf	??_my_isr+1
  3445                           
  3446                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3447                           ; Switch size 1, requested type "simple"
  3448                           ; Number of cases is 1, Range of values is 0 to 0
  3449                           ; switch strategies available:
  3450                           ; Name         Instructions Cycles
  3451                           ; simple_byte            4     3 (average)
  3452                           ; direct_byte            8     6 (fixed)
  3453                           ; jumptable            260     6 (fixed)
  3454                           ;	Chosen strategy is simple_byte
  3455  0028  0874               	movf	??_my_isr+1,w
  3456  0029  3A00               	xorlw	0	; case 0
  3457  002A  1903               	skipnz
  3458  002B  282D               	goto	i1l2438
  3459  002C  2835               	goto	i1l195
  3460  002D                     i1l2438:
  3461                           
  3462                           ; Switch size 1, requested type "simple"
  3463                           ; Number of cases is 2, Range of values is 0 to 1
  3464                           ; switch strategies available:
  3465                           ; Name         Instructions Cycles
  3466                           ; simple_byte            7     4 (average)
  3467                           ; direct_byte           10     6 (fixed)
  3468                           ; jumptable            260     6 (fixed)
  3469                           ;	Chosen strategy is simple_byte
  3470  002D  0873               	movf	??_my_isr,w
  3471  002E  3A00               	xorlw	0	; case 0
  3472  002F  1903               	skipnz
  3473  0030  281A               	goto	i1l1544
  3474  0031  3A01               	xorlw	1	; case 1
  3475  0032  1903               	skipnz
  3476  0033  2810               	goto	i1l194
  3477  0034  2835               	goto	i1l195
  3478  0035                     __ccov127_end_blk10:
  3479  0035                     __ccov128_start_blk11:
  3480  0035                     i1l195:
  3481  0035  1724               	bsf	__ccovbit11_24/(0+8),__ccovbit11_24& (0+7)	;volatile
  3482                           
  3483                           ;main.c: 524:         NewStateChangeDetected = 1;
  3484  0036  17F2               	bsf	_NewStateChangeDetected/(0+8),_NewStateChangeDetected& (0+7)
  3485                           
  3486                           ;main.c: 525:         INTF = 0;
  3487  0037  108B               	bcf	11,1	;volatile
  3488  0038                     __ccov128_end_blk11:
  3489  0038                     __ccov129_start_blk12:
  3490  0038                     i1l192:	
  3491                           ;main.c: 526:     }
  3492                           
  3493                           
  3494                           ;main.c: 529:     if (PIE1bits.TMR2IE && PIR1bits.TMR2IF) {
  3495  0038  0021               	movlb	1	; select bank1
  3496  0039  1C91               	btfss	17,1	;volatile
  3497  003A  283C               	goto	u31_21
  3498  003B  283D               	goto	u31_20
  3499  003C                     u31_21:
  3500  003C  286D               	goto	i1l200
  3501  003D                     u31_20:
  3502  003D                     __ccov129_end_blk12:
  3503  003D                     __ccov130_start_blk13:
  3504  003D                     i1l1554:
  3505  003D  0020               	movlb	0	; select bank0
  3506  003E  16A4               	bsf	__ccovbit13_25/(0+8),__ccovbit13_25& (0+7)	;volatile
  3507  003F  1C91               	btfss	17,1	;volatile
  3508  0040  2842               	goto	u32_21
  3509  0041  2843               	goto	u32_20
  3510  0042                     u32_21:
  3511  0042  286D               	goto	i1l200
  3512  0043                     u32_20:
  3513  0043                     __ccov130_end_blk13:
  3514  0043                     __ccov131_start_blk14:
  3515  0043                     i1l1556:
  3516                           
  3517                           ;main.c: 530:         if (prelCounter > 0)
  3518  0043  0837               	movf	_prelCounter+1,w	;volatile
  3519  0044  3A80               	xorlw	128
  3520  0045  00F3               	movwf	??_my_isr
  3521  0046  3080               	movlw	128
  3522  0047  0273               	subwf	??_my_isr,w
  3523  0048  1D03               	skipz
  3524  0049  284C               	goto	u33_25
  3525  004A  3001               	movlw	1
  3526  004B  0236               	subwf	_prelCounter,w	;volatile
  3527  004C                     u33_25:
  3528  004C  1C03               	skipc
  3529  004D  284F               	goto	u33_21
  3530  004E  2850               	goto	u33_20
  3531  004F                     u33_21:
  3532  004F  2856               	goto	i1l198
  3533  0050                     u33_20:
  3534  0050                     __ccov131_end_blk14:
  3535  0050                     __ccov132_start_blk15:
  3536  0050                     i1l1558:
  3537  0050  0020               	movlb	0	; select bank0
  3538  0051  1624               	bsf	__ccovbit15_26/(0+8),__ccovbit15_26& (0+7)	;volatile
  3539                           
  3540                           ;main.c: 531:             prelCounter--;
  3541  0052  30FF               	movlw	255
  3542  0053  07B6               	addwf	_prelCounter,f	;volatile
  3543  0054  30FF               	movlw	255
  3544  0055  3DB7               	addwfc	_prelCounter+1,f	;volatile
  3545  0056                     __ccov132_end_blk15:
  3546  0056                     __ccov133_start_blk16:
  3547  0056                     i1l198:
  3548                           
  3549                           ;main.c: 533:         if (ihcPulseTimer > 0)
  3550  0056  0020               	movlb	0	; select bank0
  3551  0057  0835               	movf	_ihcPulseTimer+1,w	;volatile
  3552  0058  3A80               	xorlw	128
  3553  0059  00F3               	movwf	??_my_isr
  3554  005A  3080               	movlw	128
  3555  005B  0273               	subwf	??_my_isr,w
  3556  005C  1D03               	skipz
  3557  005D  2860               	goto	u34_25
  3558  005E  3001               	movlw	1
  3559  005F  0234               	subwf	_ihcPulseTimer,w	;volatile
  3560  0060                     u34_25:
  3561  0060  1C03               	skipc
  3562  0061  2863               	goto	u34_21
  3563  0062  2864               	goto	u34_20
  3564  0063                     u34_21:
  3565  0063  286A               	goto	i1l1562
  3566  0064                     u34_20:
  3567  0064                     __ccov133_end_blk16:
  3568  0064                     __ccov134_start_blk17:
  3569  0064                     i1l1560:
  3570  0064  0020               	movlb	0	; select bank0
  3571  0065  15A4               	bsf	__ccovbit17_27/(0+8),__ccovbit17_27& (0+7)	;volatile
  3572                           
  3573                           ;main.c: 534:             ihcPulseTimer--;
  3574  0066  30FF               	movlw	255
  3575  0067  07B4               	addwf	_ihcPulseTimer,f	;volatile
  3576  0068  30FF               	movlw	255
  3577  0069  3DB5               	addwfc	_ihcPulseTimer+1,f	;volatile
  3578  006A                     __ccov134_end_blk17:
  3579  006A                     __ccov135_start_blk19:
  3580  006A                     i1l1562:
  3581  006A  0020               	movlb	0	; select bank0
  3582  006B  1524               	bsf	__ccovbit19_28/(0+8),__ccovbit19_28& (0+7)	;volatile
  3583                           
  3584                           ;main.c: 535:         PIR1bits.TMR2IF = 0;
  3585  006C  1091               	bcf	17,1	;volatile
  3586  006D                     __ccov135_end_blk19:
  3587  006D                     __ccov136_start_blk22:
  3588  006D                     i1l200:
  3589  006D  0020               	movlb	0	; select bank0
  3590  006E  14A4               	bsf	__ccovbit22_29/(0+8),__ccovbit22_29& (0+7)	;volatile
  3591  006F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3592  0070  0009               	retfie
  3593  0071                     __end_of_my_isr:
  3594  0071                     
  3595                           	psect	codecov_info_hdr
  3596  0000                     __pcodecov_info_hdr:	
  3597                           ;
  3598                           ; Code-coverage Info Header
  3599                           ;
  3600                           
  3601  0000  0010               	db	16	; SIZE
  3602  0001  00000001           	ddw	1	; VERSION
  3603  0005  0001               	db	1	; POINTSIZE
  3604  0006  0008               	db	8	; UNITSIZE
  3605  0007  0001               	db	1	; FLAGS=SET
  3606  0008  00000000           	ddw	0	; Reserved
  3607  000C  00000000           	ddw	0	; Reserved
  3608                           
  3609                           	psect	codecov_info
  3610  0000                     __pcodecov_info:	
  3611                           ;
  3612                           ; Code-coverage Info
  3613                           ;
  3614                           
  3615                           
  3616                           ; Function: main, coverage: 50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,
      +                          30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0
  3617  0000  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  3618  0004  00000072           	ddw	__ccovbit50_1/(0+8)	; CC_ADDR
  3619  0008  00000001           	ddw	1	; NUM_POINTS
  3620  000C  00000004           	ddw	__ccovbit50_1& (0+7)	; OFFSET
  3621  0010  00000000           	ddw	0	; Reserved
  3622  0014  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  3623  0018  00000033           	ddw	51	; NUM_RANGES
  3624  001C  0000029B           	ddw	__ccov51_start_blk50	; block 50 START_ADDR
  3625  0020  0000029E           	ddw	__ccov51_end_blk50	; block 50 END_ADDR
  3626  0024  00000292           	ddw	__ccov50_start_blk49	; block 49 START_ADDR
  3627  0028  0000029B           	ddw	__ccov50_end_blk49	; block 49 END_ADDR
  3628  002C  00000290           	ddw	__ccov49_start_blk48	; block 48 START_ADDR
  3629  0030  00000292           	ddw	__ccov49_end_blk48	; block 48 END_ADDR
  3630  0034  00000283           	ddw	__ccov48_start_blk47	; block 47 START_ADDR
  3631  0038  00000290           	ddw	__ccov48_end_blk47	; block 47 END_ADDR
  3632  003C  00000273           	ddw	__ccov47_start_blk46	; block 46 START_ADDR
  3633  0040  00000283           	ddw	__ccov47_end_blk46	; block 46 END_ADDR
  3634  0044  0000025A           	ddw	__ccov46_start_blk45	; block 45 START_ADDR
  3635  0048  00000273           	ddw	__ccov46_end_blk45	; block 45 END_ADDR
  3636  004C  00000253           	ddw	__ccov45_start_blk44	; block 44 START_ADDR
  3637  0050  0000025A           	ddw	__ccov45_end_blk44	; block 44 END_ADDR
  3638  0054  00000252           	ddw	__ccov44_start_blk43	; block 43 START_ADDR
  3639  0058  00000253           	ddw	__ccov44_end_blk43	; block 43 END_ADDR
  3640  005C  0000024D           	ddw	__ccov43_start_blk42	; block 42 START_ADDR
  3641  0060  00000252           	ddw	__ccov43_end_blk42	; block 42 END_ADDR
  3642  0064  0000024C           	ddw	__ccov42_start_blk41	; block 41 START_ADDR
  3643  0068  0000024D           	ddw	__ccov42_end_blk41	; block 41 END_ADDR
  3644  006C  00000240           	ddw	__ccov41_start_blk40	; block 40 START_ADDR
  3645  0070  0000024C           	ddw	__ccov41_end_blk40	; block 40 END_ADDR
  3646  0074  0000023D           	ddw	__ccov40_start_blk39	; block 39 START_ADDR
  3647  0078  00000240           	ddw	__ccov40_end_blk39	; block 39 END_ADDR
  3648  007C  0000023A           	ddw	__ccov39_start_blk38	; block 38 START_ADDR
  3649  0080  0000023D           	ddw	__ccov39_end_blk38	; block 38 END_ADDR
  3650  0084  00000239           	ddw	__ccov38_start_blk37	; block 37 START_ADDR
  3651  0088  0000023A           	ddw	__ccov38_end_blk37	; block 37 END_ADDR
  3652  008C  00000237           	ddw	__ccov37_start_blk36	; block 36 START_ADDR
  3653  0090  00000239           	ddw	__ccov37_end_blk36	; block 36 END_ADDR
  3654  0094  00000236           	ddw	__ccov36_start_blk35	; block 35 START_ADDR
  3655  0098  00000237           	ddw	__ccov36_end_blk35	; block 35 END_ADDR
  3656  009C  00000234           	ddw	__ccov35_start_blk34	; block 34 START_ADDR
  3657  00A0  00000236           	ddw	__ccov35_end_blk34	; block 34 END_ADDR
  3658  00A4  00000232           	ddw	__ccov34_start_blk33	; block 33 START_ADDR
  3659  00A8  00000234           	ddw	__ccov34_end_blk33	; block 33 END_ADDR
  3660  00AC  00000230           	ddw	__ccov33_start_blk32	; block 32 START_ADDR
  3661  00B0  00000232           	ddw	__ccov33_end_blk32	; block 32 END_ADDR
  3662  00B4  0000022C           	ddw	__ccov32_start_blk31	; block 31 START_ADDR
  3663  00B8  00000230           	ddw	__ccov32_end_blk31	; block 31 END_ADDR
  3664  00BC  00000228           	ddw	__ccov31_start_blk30	; block 30 START_ADDR
  3665  00C0  0000022C           	ddw	__ccov31_end_blk30	; block 30 END_ADDR
  3666  00C4  00000223           	ddw	__ccov30_start_blk29	; block 29 START_ADDR
  3667  00C8  00000228           	ddw	__ccov30_end_blk29	; block 29 END_ADDR
  3668  00CC  00000221           	ddw	__ccov29_start_blk28	; block 28 START_ADDR
  3669  00D0  00000223           	ddw	__ccov29_end_blk28	; block 28 END_ADDR
  3670  00D4  0000021F           	ddw	__ccov28_start_blk27	; block 27 START_ADDR
  3671  00D8  00000221           	ddw	__ccov28_end_blk27	; block 27 END_ADDR
  3672  00DC  0000021E           	ddw	__ccov27_start_blk26	; block 26 START_ADDR
  3673  00E0  0000021F           	ddw	__ccov27_end_blk26	; block 26 END_ADDR
  3674  00E4  0000021C           	ddw	__ccov26_start_blk25	; block 25 START_ADDR
  3675  00E8  0000021E           	ddw	__ccov26_end_blk25	; block 25 END_ADDR
  3676  00EC  0000021A           	ddw	__ccov25_start_blk24	; block 24 START_ADDR
  3677  00F0  0000021C           	ddw	__ccov25_end_blk24	; block 24 END_ADDR
  3678  00F4  00000219           	ddw	__ccov24_start_blk23	; block 23 START_ADDR
  3679  00F8  0000021A           	ddw	__ccov24_end_blk23	; block 23 END_ADDR
  3680  00FC  00000218           	ddw	__ccov23_start_blk22	; block 22 START_ADDR
  3681  0100  00000219           	ddw	__ccov23_end_blk22	; block 22 END_ADDR
  3682  0104  00000213           	ddw	__ccov22_start_blk21	; block 21 START_ADDR
  3683  0108  00000218           	ddw	__ccov22_end_blk21	; block 21 END_ADDR
  3684  010C  00000212           	ddw	__ccov21_start_blk20	; block 20 START_ADDR
  3685  0110  00000213           	ddw	__ccov21_end_blk20	; block 20 END_ADDR
  3686  0114  00000211           	ddw	__ccov20_start_blk19	; block 19 START_ADDR
  3687  0118  00000212           	ddw	__ccov20_end_blk19	; block 19 END_ADDR
  3688  011C  0000020F           	ddw	__ccov19_start_blk18	; block 18 START_ADDR
  3689  0120  00000211           	ddw	__ccov19_end_blk18	; block 18 END_ADDR
  3690  0124  0000020E           	ddw	__ccov18_start_blk17	; block 17 START_ADDR
  3691  0128  0000020F           	ddw	__ccov18_end_blk17	; block 17 END_ADDR
  3692  012C  0000020D           	ddw	__ccov17_start_blk16	; block 16 START_ADDR
  3693  0130  0000020E           	ddw	__ccov17_end_blk16	; block 16 END_ADDR
  3694  0134  0000020B           	ddw	__ccov16_start_blk15	; block 15 START_ADDR
  3695  0138  0000020D           	ddw	__ccov16_end_blk15	; block 15 END_ADDR
  3696  013C  00000209           	ddw	__ccov15_start_blk14	; block 14 START_ADDR
  3697  0140  0000020B           	ddw	__ccov15_end_blk14	; block 14 END_ADDR
  3698  0144  00000208           	ddw	__ccov14_start_blk13	; block 13 START_ADDR
  3699  0148  00000209           	ddw	__ccov14_end_blk13	; block 13 END_ADDR
  3700  014C  00000207           	ddw	__ccov13_start_blk12	; block 12 START_ADDR
  3701  0150  00000208           	ddw	__ccov13_end_blk12	; block 12 END_ADDR
  3702  0154  00000206           	ddw	__ccov12_start_blk11	; block 11 START_ADDR
  3703  0158  00000207           	ddw	__ccov12_end_blk11	; block 11 END_ADDR
  3704  015C  00000204           	ddw	__ccov11_start_blk10	; block 10 START_ADDR
  3705  0160  00000206           	ddw	__ccov11_end_blk10	; block 10 END_ADDR
  3706  0164  00000203           	ddw	__ccov10_start_blk9	; block 9 START_ADDR
  3707  0168  00000204           	ddw	__ccov10_end_blk9	; block 9 END_ADDR
  3708  016C  00000202           	ddw	__ccov9_start_blk8	; block 8 START_ADDR
  3709  0170  00000203           	ddw	__ccov9_end_blk8	; block 8 END_ADDR
  3710  0174  00000201           	ddw	__ccov8_start_blk7	; block 7 START_ADDR
  3711  0178  00000202           	ddw	__ccov8_end_blk7	; block 7 END_ADDR
  3712  017C  00000200           	ddw	__ccov7_start_blk6	; block 6 START_ADDR
  3713  0180  00000201           	ddw	__ccov7_end_blk6	; block 6 END_ADDR
  3714  0184  000001FF           	ddw	__ccov6_start_blk5	; block 5 START_ADDR
  3715  0188  00000200           	ddw	__ccov6_end_blk5	; block 5 END_ADDR
  3716  018C  000001FE           	ddw	__ccov5_start_blk4	; block 4 START_ADDR
  3717  0190  000001FF           	ddw	__ccov5_end_blk4	; block 4 END_ADDR
  3718  0194  000001FA           	ddw	__ccov4_start_blk3	; block 3 START_ADDR
  3719  0198  000001FE           	ddw	__ccov4_end_blk3	; block 3 END_ADDR
  3720  019C  000001F9           	ddw	__ccov3_start_blk2	; block 2 START_ADDR
  3721  01A0  000001FA           	ddw	__ccov3_end_blk2	; block 2 END_ADDR
  3722  01A4  000001F6           	ddw	__ccov2_start_blk1	; block 1 START_ADDR
  3723  01A8  000001F9           	ddw	__ccov2_end_blk1	; block 1 END_ADDR
  3724  01AC  000001F4           	ddw	_main	; block 0 START_ADDR
  3725  01B0  000001F6           	ddw	__ccov1_end_blk0	; block 0 END_ADDR
  3726                           
  3727                           ; Function: main, coverage: 65,64,62,61,60,59,58,57,56,55,54,53,52,47,46,45,44,43,42,41,
      +                          40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,1
      +                          1,10,9,8,7,6,5,4,3,2,1,0
  3728  01B4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  3729  01B8  00000072           	ddw	__ccovbit65_2/(0+8)	; CC_ADDR
  3730  01BC  00000001           	ddw	1	; NUM_POINTS
  3731  01C0  00000003           	ddw	__ccovbit65_2& (0+7)	; OFFSET
  3732  01C4  00000000           	ddw	0	; Reserved
  3733  01C8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  3734  01CC  0000003D           	ddw	61	; NUM_RANGES
  3735  01D0  000002BE           	ddw	__ccov64_start_blk65	; block 65 START_ADDR
  3736  01D4  000002C3           	ddw	__ccov64_end_blk65	; block 65 END_ADDR
  3737  01D8  000002BA           	ddw	__ccov63_start_blk64	; block 64 START_ADDR
  3738  01DC  000002BE           	ddw	__ccov63_end_blk64	; block 64 END_ADDR
  3739  01E0  000002B7           	ddw	__ccov62_start_blk62	; block 62 START_ADDR
  3740  01E4  000002BA           	ddw	__ccov62_end_blk62	; block 62 END_ADDR
  3741  01E8  000002B5           	ddw	__ccov61_start_blk61	; block 61 START_ADDR
  3742  01EC  000002B7           	ddw	__ccov61_end_blk61	; block 61 END_ADDR
  3743  01F0  000002B3           	ddw	__ccov60_start_blk60	; block 60 START_ADDR
  3744  01F4  000002B5           	ddw	__ccov60_end_blk60	; block 60 END_ADDR
  3745  01F8  000002B1           	ddw	__ccov59_start_blk59	; block 59 START_ADDR
  3746  01FC  000002B3           	ddw	__ccov59_end_blk59	; block 59 END_ADDR
  3747  0200  000002AF           	ddw	__ccov58_start_blk58	; block 58 START_ADDR
  3748  0204  000002B1           	ddw	__ccov58_end_blk58	; block 58 END_ADDR
  3749  0208  000002AC           	ddw	__ccov57_start_blk57	; block 57 START_ADDR
  3750  020C  000002AF           	ddw	__ccov57_end_blk57	; block 57 END_ADDR
  3751  0210  000002A9           	ddw	__ccov56_start_blk56	; block 56 START_ADDR
  3752  0214  000002AC           	ddw	__ccov56_end_blk56	; block 56 END_ADDR
  3753  0218  000002A8           	ddw	__ccov55_start_blk55	; block 55 START_ADDR
  3754  021C  000002A9           	ddw	__ccov55_end_blk55	; block 55 END_ADDR
  3755  0220  000002A7           	ddw	__ccov54_start_blk54	; block 54 START_ADDR
  3756  0224  000002A8           	ddw	__ccov54_end_blk54	; block 54 END_ADDR
  3757  0228  000002A3           	ddw	__ccov53_start_blk53	; block 53 START_ADDR
  3758  022C  000002A7           	ddw	__ccov53_end_blk53	; block 53 END_ADDR
  3759  0230  0000029E           	ddw	__ccov52_start_blk52	; block 52 START_ADDR
  3760  0234  000002A3           	ddw	__ccov52_end_blk52	; block 52 END_ADDR
  3761  0238  00000283           	ddw	__ccov48_start_blk47	; block 47 START_ADDR
  3762  023C  00000290           	ddw	__ccov48_end_blk47	; block 47 END_ADDR
  3763  0240  00000273           	ddw	__ccov47_start_blk46	; block 46 START_ADDR
  3764  0244  00000283           	ddw	__ccov47_end_blk46	; block 46 END_ADDR
  3765  0248  0000025A           	ddw	__ccov46_start_blk45	; block 45 START_ADDR
  3766  024C  00000273           	ddw	__ccov46_end_blk45	; block 45 END_ADDR
  3767  0250  00000253           	ddw	__ccov45_start_blk44	; block 44 START_ADDR
  3768  0254  0000025A           	ddw	__ccov45_end_blk44	; block 44 END_ADDR
  3769  0258  00000252           	ddw	__ccov44_start_blk43	; block 43 START_ADDR
  3770  025C  00000253           	ddw	__ccov44_end_blk43	; block 43 END_ADDR
  3771  0260  0000024D           	ddw	__ccov43_start_blk42	; block 42 START_ADDR
  3772  0264  00000252           	ddw	__ccov43_end_blk42	; block 42 END_ADDR
  3773  0268  0000024C           	ddw	__ccov42_start_blk41	; block 41 START_ADDR
  3774  026C  0000024D           	ddw	__ccov42_end_blk41	; block 41 END_ADDR
  3775  0270  00000240           	ddw	__ccov41_start_blk40	; block 40 START_ADDR
  3776  0274  0000024C           	ddw	__ccov41_end_blk40	; block 40 END_ADDR
  3777  0278  0000023D           	ddw	__ccov40_start_blk39	; block 39 START_ADDR
  3778  027C  00000240           	ddw	__ccov40_end_blk39	; block 39 END_ADDR
  3779  0280  0000023A           	ddw	__ccov39_start_blk38	; block 38 START_ADDR
  3780  0284  0000023D           	ddw	__ccov39_end_blk38	; block 38 END_ADDR
  3781  0288  00000239           	ddw	__ccov38_start_blk37	; block 37 START_ADDR
  3782  028C  0000023A           	ddw	__ccov38_end_blk37	; block 37 END_ADDR
  3783  0290  00000237           	ddw	__ccov37_start_blk36	; block 36 START_ADDR
  3784  0294  00000239           	ddw	__ccov37_end_blk36	; block 36 END_ADDR
  3785  0298  00000236           	ddw	__ccov36_start_blk35	; block 35 START_ADDR
  3786  029C  00000237           	ddw	__ccov36_end_blk35	; block 35 END_ADDR
  3787  02A0  00000234           	ddw	__ccov35_start_blk34	; block 34 START_ADDR
  3788  02A4  00000236           	ddw	__ccov35_end_blk34	; block 34 END_ADDR
  3789  02A8  00000232           	ddw	__ccov34_start_blk33	; block 33 START_ADDR
  3790  02AC  00000234           	ddw	__ccov34_end_blk33	; block 33 END_ADDR
  3791  02B0  00000230           	ddw	__ccov33_start_blk32	; block 32 START_ADDR
  3792  02B4  00000232           	ddw	__ccov33_end_blk32	; block 32 END_ADDR
  3793  02B8  0000022C           	ddw	__ccov32_start_blk31	; block 31 START_ADDR
  3794  02BC  00000230           	ddw	__ccov32_end_blk31	; block 31 END_ADDR
  3795  02C0  00000228           	ddw	__ccov31_start_blk30	; block 30 START_ADDR
  3796  02C4  0000022C           	ddw	__ccov31_end_blk30	; block 30 END_ADDR
  3797  02C8  00000223           	ddw	__ccov30_start_blk29	; block 29 START_ADDR
  3798  02CC  00000228           	ddw	__ccov30_end_blk29	; block 29 END_ADDR
  3799  02D0  00000221           	ddw	__ccov29_start_blk28	; block 28 START_ADDR
  3800  02D4  00000223           	ddw	__ccov29_end_blk28	; block 28 END_ADDR
  3801  02D8  0000021F           	ddw	__ccov28_start_blk27	; block 27 START_ADDR
  3802  02DC  00000221           	ddw	__ccov28_end_blk27	; block 27 END_ADDR
  3803  02E0  0000021E           	ddw	__ccov27_start_blk26	; block 26 START_ADDR
  3804  02E4  0000021F           	ddw	__ccov27_end_blk26	; block 26 END_ADDR
  3805  02E8  0000021C           	ddw	__ccov26_start_blk25	; block 25 START_ADDR
  3806  02EC  0000021E           	ddw	__ccov26_end_blk25	; block 25 END_ADDR
  3807  02F0  0000021A           	ddw	__ccov25_start_blk24	; block 24 START_ADDR
  3808  02F4  0000021C           	ddw	__ccov25_end_blk24	; block 24 END_ADDR
  3809  02F8  00000219           	ddw	__ccov24_start_blk23	; block 23 START_ADDR
  3810  02FC  0000021A           	ddw	__ccov24_end_blk23	; block 23 END_ADDR
  3811  0300  00000218           	ddw	__ccov23_start_blk22	; block 22 START_ADDR
  3812  0304  00000219           	ddw	__ccov23_end_blk22	; block 22 END_ADDR
  3813  0308  00000213           	ddw	__ccov22_start_blk21	; block 21 START_ADDR
  3814  030C  00000218           	ddw	__ccov22_end_blk21	; block 21 END_ADDR
  3815  0310  00000212           	ddw	__ccov21_start_blk20	; block 20 START_ADDR
  3816  0314  00000213           	ddw	__ccov21_end_blk20	; block 20 END_ADDR
  3817  0318  00000211           	ddw	__ccov20_start_blk19	; block 19 START_ADDR
  3818  031C  00000212           	ddw	__ccov20_end_blk19	; block 19 END_ADDR
  3819  0320  0000020F           	ddw	__ccov19_start_blk18	; block 18 START_ADDR
  3820  0324  00000211           	ddw	__ccov19_end_blk18	; block 18 END_ADDR
  3821  0328  0000020E           	ddw	__ccov18_start_blk17	; block 17 START_ADDR
  3822  032C  0000020F           	ddw	__ccov18_end_blk17	; block 17 END_ADDR
  3823  0330  0000020D           	ddw	__ccov17_start_blk16	; block 16 START_ADDR
  3824  0334  0000020E           	ddw	__ccov17_end_blk16	; block 16 END_ADDR
  3825  0338  0000020B           	ddw	__ccov16_start_blk15	; block 15 START_ADDR
  3826  033C  0000020D           	ddw	__ccov16_end_blk15	; block 15 END_ADDR
  3827  0340  00000209           	ddw	__ccov15_start_blk14	; block 14 START_ADDR
  3828  0344  0000020B           	ddw	__ccov15_end_blk14	; block 14 END_ADDR
  3829  0348  00000208           	ddw	__ccov14_start_blk13	; block 13 START_ADDR
  3830  034C  00000209           	ddw	__ccov14_end_blk13	; block 13 END_ADDR
  3831  0350  00000207           	ddw	__ccov13_start_blk12	; block 12 START_ADDR
  3832  0354  00000208           	ddw	__ccov13_end_blk12	; block 12 END_ADDR
  3833  0358  00000206           	ddw	__ccov12_start_blk11	; block 11 START_ADDR
  3834  035C  00000207           	ddw	__ccov12_end_blk11	; block 11 END_ADDR
  3835  0360  00000204           	ddw	__ccov11_start_blk10	; block 10 START_ADDR
  3836  0364  00000206           	ddw	__ccov11_end_blk10	; block 10 END_ADDR
  3837  0368  00000203           	ddw	__ccov10_start_blk9	; block 9 START_ADDR
  3838  036C  00000204           	ddw	__ccov10_end_blk9	; block 9 END_ADDR
  3839  0370  00000202           	ddw	__ccov9_start_blk8	; block 8 START_ADDR
  3840  0374  00000203           	ddw	__ccov9_end_blk8	; block 8 END_ADDR
  3841  0378  00000201           	ddw	__ccov8_start_blk7	; block 7 START_ADDR
  3842  037C  00000202           	ddw	__ccov8_end_blk7	; block 7 END_ADDR
  3843  0380  00000200           	ddw	__ccov7_start_blk6	; block 6 START_ADDR
  3844  0384  00000201           	ddw	__ccov7_end_blk6	; block 6 END_ADDR
  3845  0388  000001FF           	ddw	__ccov6_start_blk5	; block 5 START_ADDR
  3846  038C  00000200           	ddw	__ccov6_end_blk5	; block 5 END_ADDR
  3847  0390  000001FE           	ddw	__ccov5_start_blk4	; block 4 START_ADDR
  3848  0394  000001FF           	ddw	__ccov5_end_blk4	; block 4 END_ADDR
  3849  0398  000001FA           	ddw	__ccov4_start_blk3	; block 3 START_ADDR
  3850  039C  000001FE           	ddw	__ccov4_end_blk3	; block 3 END_ADDR
  3851  03A0  000001F9           	ddw	__ccov3_start_blk2	; block 2 START_ADDR
  3852  03A4  000001FA           	ddw	__ccov3_end_blk2	; block 2 END_ADDR
  3853  03A8  000001F6           	ddw	__ccov2_start_blk1	; block 1 START_ADDR
  3854  03AC  000001F9           	ddw	__ccov2_end_blk1	; block 1 END_ADDR
  3855  03B0  000001F4           	ddw	_main	; block 0 START_ADDR
  3856  03B4  000001F6           	ddw	__ccov1_end_blk0	; block 0 END_ADDR
  3857                           
  3858                           ; Function: main, coverage: 68,67,64,62,61,60,59,58,57,56,55,54,53,52,47,46,45,44,43,42,
      +                          41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,1
      +                          2,11,10,9,8,7,6,5,4,3,2,1,0
  3859  03B8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  3860  03BC  00000072           	ddw	__ccovbit68_3/(0+8)	; CC_ADDR
  3861  03C0  00000001           	ddw	1	; NUM_POINTS
  3862  03C4  00000002           	ddw	__ccovbit68_3& (0+7)	; OFFSET
  3863  03C8  00000000           	ddw	0	; Reserved
  3864  03CC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  3865  03D0  0000003E           	ddw	62	; NUM_RANGES
  3866  03D4  000002C6           	ddw	__ccov66_start_blk68	; block 68 START_ADDR
  3867  03D8  000002CB           	ddw	__ccov66_end_blk68	; block 68 END_ADDR
  3868  03DC  000002C3           	ddw	__ccov65_start_blk67	; block 67 START_ADDR
  3869  03E0  000002C6           	ddw	__ccov65_end_blk67	; block 67 END_ADDR
  3870  03E4  000002BA           	ddw	__ccov63_start_blk64	; block 64 START_ADDR
  3871  03E8  000002BE           	ddw	__ccov63_end_blk64	; block 64 END_ADDR
  3872  03EC  000002B7           	ddw	__ccov62_start_blk62	; block 62 START_ADDR
  3873  03F0  000002BA           	ddw	__ccov62_end_blk62	; block 62 END_ADDR
  3874  03F4  000002B5           	ddw	__ccov61_start_blk61	; block 61 START_ADDR
  3875  03F8  000002B7           	ddw	__ccov61_end_blk61	; block 61 END_ADDR
  3876  03FC  000002B3           	ddw	__ccov60_start_blk60	; block 60 START_ADDR
  3877  0400  000002B5           	ddw	__ccov60_end_blk60	; block 60 END_ADDR
  3878  0404  000002B1           	ddw	__ccov59_start_blk59	; block 59 START_ADDR
  3879  0408  000002B3           	ddw	__ccov59_end_blk59	; block 59 END_ADDR
  3880  040C  000002AF           	ddw	__ccov58_start_blk58	; block 58 START_ADDR
  3881  0410  000002B1           	ddw	__ccov58_end_blk58	; block 58 END_ADDR
  3882  0414  000002AC           	ddw	__ccov57_start_blk57	; block 57 START_ADDR
  3883  0418  000002AF           	ddw	__ccov57_end_blk57	; block 57 END_ADDR
  3884  041C  000002A9           	ddw	__ccov56_start_blk56	; block 56 START_ADDR
  3885  0420  000002AC           	ddw	__ccov56_end_blk56	; block 56 END_ADDR
  3886  0424  000002A8           	ddw	__ccov55_start_blk55	; block 55 START_ADDR
  3887  0428  000002A9           	ddw	__ccov55_end_blk55	; block 55 END_ADDR
  3888  042C  000002A7           	ddw	__ccov54_start_blk54	; block 54 START_ADDR
  3889  0430  000002A8           	ddw	__ccov54_end_blk54	; block 54 END_ADDR
  3890  0434  000002A3           	ddw	__ccov53_start_blk53	; block 53 START_ADDR
  3891  0438  000002A7           	ddw	__ccov53_end_blk53	; block 53 END_ADDR
  3892  043C  0000029E           	ddw	__ccov52_start_blk52	; block 52 START_ADDR
  3893  0440  000002A3           	ddw	__ccov52_end_blk52	; block 52 END_ADDR
  3894  0444  00000283           	ddw	__ccov48_start_blk47	; block 47 START_ADDR
  3895  0448  00000290           	ddw	__ccov48_end_blk47	; block 47 END_ADDR
  3896  044C  00000273           	ddw	__ccov47_start_blk46	; block 46 START_ADDR
  3897  0450  00000283           	ddw	__ccov47_end_blk46	; block 46 END_ADDR
  3898  0454  0000025A           	ddw	__ccov46_start_blk45	; block 45 START_ADDR
  3899  0458  00000273           	ddw	__ccov46_end_blk45	; block 45 END_ADDR
  3900  045C  00000253           	ddw	__ccov45_start_blk44	; block 44 START_ADDR
  3901  0460  0000025A           	ddw	__ccov45_end_blk44	; block 44 END_ADDR
  3902  0464  00000252           	ddw	__ccov44_start_blk43	; block 43 START_ADDR
  3903  0468  00000253           	ddw	__ccov44_end_blk43	; block 43 END_ADDR
  3904  046C  0000024D           	ddw	__ccov43_start_blk42	; block 42 START_ADDR
  3905  0470  00000252           	ddw	__ccov43_end_blk42	; block 42 END_ADDR
  3906  0474  0000024C           	ddw	__ccov42_start_blk41	; block 41 START_ADDR
  3907  0478  0000024D           	ddw	__ccov42_end_blk41	; block 41 END_ADDR
  3908  047C  00000240           	ddw	__ccov41_start_blk40	; block 40 START_ADDR
  3909  0480  0000024C           	ddw	__ccov41_end_blk40	; block 40 END_ADDR
  3910  0484  0000023D           	ddw	__ccov40_start_blk39	; block 39 START_ADDR
  3911  0488  00000240           	ddw	__ccov40_end_blk39	; block 39 END_ADDR
  3912  048C  0000023A           	ddw	__ccov39_start_blk38	; block 38 START_ADDR
  3913  0490  0000023D           	ddw	__ccov39_end_blk38	; block 38 END_ADDR
  3914  0494  00000239           	ddw	__ccov38_start_blk37	; block 37 START_ADDR
  3915  0498  0000023A           	ddw	__ccov38_end_blk37	; block 37 END_ADDR
  3916  049C  00000237           	ddw	__ccov37_start_blk36	; block 36 START_ADDR
  3917  04A0  00000239           	ddw	__ccov37_end_blk36	; block 36 END_ADDR
  3918  04A4  00000236           	ddw	__ccov36_start_blk35	; block 35 START_ADDR
  3919  04A8  00000237           	ddw	__ccov36_end_blk35	; block 35 END_ADDR
  3920  04AC  00000234           	ddw	__ccov35_start_blk34	; block 34 START_ADDR
  3921  04B0  00000236           	ddw	__ccov35_end_blk34	; block 34 END_ADDR
  3922  04B4  00000232           	ddw	__ccov34_start_blk33	; block 33 START_ADDR
  3923  04B8  00000234           	ddw	__ccov34_end_blk33	; block 33 END_ADDR
  3924  04BC  00000230           	ddw	__ccov33_start_blk32	; block 32 START_ADDR
  3925  04C0  00000232           	ddw	__ccov33_end_blk32	; block 32 END_ADDR
  3926  04C4  0000022C           	ddw	__ccov32_start_blk31	; block 31 START_ADDR
  3927  04C8  00000230           	ddw	__ccov32_end_blk31	; block 31 END_ADDR
  3928  04CC  00000228           	ddw	__ccov31_start_blk30	; block 30 START_ADDR
  3929  04D0  0000022C           	ddw	__ccov31_end_blk30	; block 30 END_ADDR
  3930  04D4  00000223           	ddw	__ccov30_start_blk29	; block 29 START_ADDR
  3931  04D8  00000228           	ddw	__ccov30_end_blk29	; block 29 END_ADDR
  3932  04DC  00000221           	ddw	__ccov29_start_blk28	; block 28 START_ADDR
  3933  04E0  00000223           	ddw	__ccov29_end_blk28	; block 28 END_ADDR
  3934  04E4  0000021F           	ddw	__ccov28_start_blk27	; block 27 START_ADDR
  3935  04E8  00000221           	ddw	__ccov28_end_blk27	; block 27 END_ADDR
  3936  04EC  0000021E           	ddw	__ccov27_start_blk26	; block 26 START_ADDR
  3937  04F0  0000021F           	ddw	__ccov27_end_blk26	; block 26 END_ADDR
  3938  04F4  0000021C           	ddw	__ccov26_start_blk25	; block 25 START_ADDR
  3939  04F8  0000021E           	ddw	__ccov26_end_blk25	; block 25 END_ADDR
  3940  04FC  0000021A           	ddw	__ccov25_start_blk24	; block 24 START_ADDR
  3941  0500  0000021C           	ddw	__ccov25_end_blk24	; block 24 END_ADDR
  3942  0504  00000219           	ddw	__ccov24_start_blk23	; block 23 START_ADDR
  3943  0508  0000021A           	ddw	__ccov24_end_blk23	; block 23 END_ADDR
  3944  050C  00000218           	ddw	__ccov23_start_blk22	; block 22 START_ADDR
  3945  0510  00000219           	ddw	__ccov23_end_blk22	; block 22 END_ADDR
  3946  0514  00000213           	ddw	__ccov22_start_blk21	; block 21 START_ADDR
  3947  0518  00000218           	ddw	__ccov22_end_blk21	; block 21 END_ADDR
  3948  051C  00000212           	ddw	__ccov21_start_blk20	; block 20 START_ADDR
  3949  0520  00000213           	ddw	__ccov21_end_blk20	; block 20 END_ADDR
  3950  0524  00000211           	ddw	__ccov20_start_blk19	; block 19 START_ADDR
  3951  0528  00000212           	ddw	__ccov20_end_blk19	; block 19 END_ADDR
  3952  052C  0000020F           	ddw	__ccov19_start_blk18	; block 18 START_ADDR
  3953  0530  00000211           	ddw	__ccov19_end_blk18	; block 18 END_ADDR
  3954  0534  0000020E           	ddw	__ccov18_start_blk17	; block 17 START_ADDR
  3955  0538  0000020F           	ddw	__ccov18_end_blk17	; block 17 END_ADDR
  3956  053C  0000020D           	ddw	__ccov17_start_blk16	; block 16 START_ADDR
  3957  0540  0000020E           	ddw	__ccov17_end_blk16	; block 16 END_ADDR
  3958  0544  0000020B           	ddw	__ccov16_start_blk15	; block 15 START_ADDR
  3959  0548  0000020D           	ddw	__ccov16_end_blk15	; block 15 END_ADDR
  3960  054C  00000209           	ddw	__ccov15_start_blk14	; block 14 START_ADDR
  3961  0550  0000020B           	ddw	__ccov15_end_blk14	; block 14 END_ADDR
  3962  0554  00000208           	ddw	__ccov14_start_blk13	; block 13 START_ADDR
  3963  0558  00000209           	ddw	__ccov14_end_blk13	; block 13 END_ADDR
  3964  055C  00000207           	ddw	__ccov13_start_blk12	; block 12 START_ADDR
  3965  0560  00000208           	ddw	__ccov13_end_blk12	; block 12 END_ADDR
  3966  0564  00000206           	ddw	__ccov12_start_blk11	; block 11 START_ADDR
  3967  0568  00000207           	ddw	__ccov12_end_blk11	; block 11 END_ADDR
  3968  056C  00000204           	ddw	__ccov11_start_blk10	; block 10 START_ADDR
  3969  0570  00000206           	ddw	__ccov11_end_blk10	; block 10 END_ADDR
  3970  0574  00000203           	ddw	__ccov10_start_blk9	; block 9 START_ADDR
  3971  0578  00000204           	ddw	__ccov10_end_blk9	; block 9 END_ADDR
  3972  057C  00000202           	ddw	__ccov9_start_blk8	; block 8 START_ADDR
  3973  0580  00000203           	ddw	__ccov9_end_blk8	; block 8 END_ADDR
  3974  0584  00000201           	ddw	__ccov8_start_blk7	; block 7 START_ADDR
  3975  0588  00000202           	ddw	__ccov8_end_blk7	; block 7 END_ADDR
  3976  058C  00000200           	ddw	__ccov7_start_blk6	; block 6 START_ADDR
  3977  0590  00000201           	ddw	__ccov7_end_blk6	; block 6 END_ADDR
  3978  0594  000001FF           	ddw	__ccov6_start_blk5	; block 5 START_ADDR
  3979  0598  00000200           	ddw	__ccov6_end_blk5	; block 5 END_ADDR
  3980  059C  000001FE           	ddw	__ccov5_start_blk4	; block 4 START_ADDR
  3981  05A0  000001FF           	ddw	__ccov5_end_blk4	; block 4 END_ADDR
  3982  05A4  000001FA           	ddw	__ccov4_start_blk3	; block 3 START_ADDR
  3983  05A8  000001FE           	ddw	__ccov4_end_blk3	; block 3 END_ADDR
  3984  05AC  000001F9           	ddw	__ccov3_start_blk2	; block 2 START_ADDR
  3985  05B0  000001FA           	ddw	__ccov3_end_blk2	; block 2 END_ADDR
  3986  05B4  000001F6           	ddw	__ccov2_start_blk1	; block 1 START_ADDR
  3987  05B8  000001F9           	ddw	__ccov2_end_blk1	; block 1 END_ADDR
  3988  05BC  000001F4           	ddw	_main	; block 0 START_ADDR
  3989  05C0  000001F6           	ddw	__ccov1_end_blk0	; block 0 END_ADDR
  3990                           
  3991                           ; Function: timer2_init, coverage: 3,2,1,0
  3992  05C4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  3993  05C8  00000072           	ddw	__ccovbit3_4/(0+8)	; CC_ADDR
  3994  05CC  00000001           	ddw	1	; NUM_POINTS
  3995  05D0  00000001           	ddw	__ccovbit3_4& (0+7)	; OFFSET
  3996  05D4  00000000           	ddw	0	; Reserved
  3997  05D8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  3998  05DC  00000004           	ddw	4	; NUM_RANGES
  3999  05E0  000003DA           	ddw	__ccov70_start_blk3	; block 3 START_ADDR
  4000  05E4  000003DC           	ddw	__end_of_timer2_init	; block 3 END_ADDR
  4001  05E8  000003D9           	ddw	__ccov69_start_blk2	; block 2 START_ADDR
  4002  05EC  000003DA           	ddw	__ccov69_end_blk2	; block 2 END_ADDR
  4003  05F0  000003D0           	ddw	__ccov68_start_blk1	; block 1 START_ADDR
  4004  05F4  000003D9           	ddw	__ccov68_end_blk1	; block 1 END_ADDR
  4005  05F8  000003CD           	ddw	_timer2_init	; block 0 START_ADDR
  4006  05FC  000003D0           	ddw	__ccov67_end_blk0	; block 0 END_ADDR
  4007                           
  4008                           ; Function: getBatteryVoltage, coverage: 18,16,15,14,12,10,9,8,7,6,5,4,3,1,0
  4009  0600  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4010  0604  00000072           	ddw	__ccovbit18_5/(0+8)	; CC_ADDR
  4011  0608  00000001           	ddw	1	; NUM_POINTS
  4012  060C  00000000           	ddw	__ccovbit18_5& (0+7)	; OFFSET
  4013  0610  00000000           	ddw	0	; Reserved
  4014  0614  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4015  0618  0000000E           	ddw	14	; NUM_RANGES
  4016  061C  000003CB           	ddw	__ccov85_start_blk18	; block 18 START_ADDR
  4017  0620  000003CD           	ddw	__end_of_getBatteryVoltage	; block 18 END_ADDR
  4018  0624  000003C5           	ddw	__ccov84_start_blk16	; block 16 START_ADDR
  4019  0628  000003CB           	ddw	__ccov84_end_blk16	; block 16 END_ADDR
  4020  062C  000003C3           	ddw	__ccov83_start_blk15	; block 15 START_ADDR
  4021  0630  000003C5           	ddw	__ccov83_end_blk15	; block 15 END_ADDR
  4022  0634  000003B2           	ddw	__ccov82_start_blk14	; block 14 START_ADDR
  4023  0638  000003C3           	ddw	__ccov82_end_blk14	; block 14 END_ADDR
  4024  063C  000003AE           	ddw	__ccov81_start_blk12	; block 12 START_ADDR
  4025  0640  000003B2           	ddw	__ccov81_end_blk12	; block 12 END_ADDR
  4026  0644  000003AD           	ddw	__ccov80_start_blk10	; block 10 START_ADDR
  4027  0648  000003AE           	ddw	__ccov80_end_blk10	; block 10 END_ADDR
  4028  064C  000003AC           	ddw	__ccov78_start_blk8	; block 8 START_ADDR
  4029  0650  000003AD           	ddw	__ccov78_end_blk8	; block 8 END_ADDR
  4030  0654  000003A9           	ddw	__ccov77_start_blk7	; block 7 START_ADDR
  4031  0658  000003AC           	ddw	__ccov77_end_blk7	; block 7 END_ADDR
  4032  065C  000003A5           	ddw	__ccov76_start_blk6	; block 6 START_ADDR
  4033  0660  000003A9           	ddw	__ccov76_end_blk6	; block 6 END_ADDR
  4034  0664  000003A3           	ddw	__ccov75_start_blk5	; block 5 START_ADDR
  4035  0668  000003A5           	ddw	__ccov75_end_blk5	; block 5 END_ADDR
  4036  066C  000003A1           	ddw	__ccov74_start_blk4	; block 4 START_ADDR
  4037  0670  000003A3           	ddw	__ccov74_end_blk4	; block 4 END_ADDR
  4038  0674  0000039D           	ddw	__ccov73_start_blk3	; block 3 START_ADDR
  4039  0678  000003A1           	ddw	__ccov73_end_blk3	; block 3 END_ADDR
  4040  067C  0000039C           	ddw	__ccov72_start_blk1	; block 1 START_ADDR
  4041  0680  0000039D           	ddw	__ccov72_end_blk1	; block 1 END_ADDR
  4042  0684  00000397           	ddw	_getBatteryVoltage	; block 0 START_ADDR
  4043  0688  0000039C           	ddw	__ccov71_end_blk0	; block 0 END_ADDR
  4044                           
  4045                           ; Function: watch_dog_incrementing_timer, coverage: 2,1,0
  4046  068C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4047  0690  00000071           	ddw	__ccovbit2_6/(0+8)	; CC_ADDR
  4048  0694  00000001           	ddw	1	; NUM_POINTS
  4049  0698  00000007           	ddw	__ccovbit2_6& (0+7)	; OFFSET
  4050  069C  00000000           	ddw	0	; Reserved
  4051  06A0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4052  06A4  00000003           	ddw	3	; NUM_RANGES
  4053  06A8  000002DF           	ddw	__ccov88_start_blk2	; block 2 START_ADDR
  4054  06AC  000002E4           	ddw	__ccov88_end_blk2	; block 2 END_ADDR
  4055  06B0  000002DA           	ddw	__ccov87_start_blk1	; block 1 START_ADDR
  4056  06B4  000002DF           	ddw	__ccov87_end_blk1	; block 1 END_ADDR
  4057  06B8  000002CC           	ddw	_watch_dog_incrementing_timer	; block 0 START_ADDR
  4058  06BC  000002DA           	ddw	__ccov86_end_blk0	; block 0 END_ADDR
  4059                           
  4060                           ; Function: watch_dog_incrementing_timer, coverage: 6,5,4,0
  4061  06C0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4062  06C4  00000071           	ddw	__ccovbit6_7/(0+8)	; CC_ADDR
  4063  06C8  00000001           	ddw	1	; NUM_POINTS
  4064  06CC  00000006           	ddw	__ccovbit6_7& (0+7)	; OFFSET
  4065  06D0  00000000           	ddw	0	; Reserved
  4066  06D4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4067  06D8  00000004           	ddw	4	; NUM_RANGES
  4068  06DC  000002F7           	ddw	__ccov91_start_blk6	; block 6 START_ADDR
  4069  06E0  000002FC           	ddw	__ccov91_end_blk6	; block 6 END_ADDR
  4070  06E4  000002F2           	ddw	__ccov90_start_blk5	; block 5 START_ADDR
  4071  06E8  000002F7           	ddw	__ccov90_end_blk5	; block 5 END_ADDR
  4072  06EC  000002E4           	ddw	__ccov89_start_blk4	; block 4 START_ADDR
  4073  06F0  000002F2           	ddw	__ccov89_end_blk4	; block 4 END_ADDR
  4074  06F4  000002CC           	ddw	_watch_dog_incrementing_timer	; block 0 START_ADDR
  4075  06F8  000002DA           	ddw	__ccov86_end_blk0	; block 0 END_ADDR
  4076                           
  4077                           ; Function: watch_dog_incrementing_timer, coverage: 10,9,8,4,0
  4078  06FC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4079  0700  00000071           	ddw	__ccovbit10_8/(0+8)	; CC_ADDR
  4080  0704  00000001           	ddw	1	; NUM_POINTS
  4081  0708  00000005           	ddw	__ccovbit10_8& (0+7)	; OFFSET
  4082  070C  00000000           	ddw	0	; Reserved
  4083  0710  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4084  0714  00000005           	ddw	5	; NUM_RANGES
  4085  0718  0000030F           	ddw	__ccov94_start_blk10	; block 10 START_ADDR
  4086  071C  00000314           	ddw	__ccov94_end_blk10	; block 10 END_ADDR
  4087  0720  0000030A           	ddw	__ccov93_start_blk9	; block 9 START_ADDR
  4088  0724  0000030F           	ddw	__ccov93_end_blk9	; block 9 END_ADDR
  4089  0728  000002FC           	ddw	__ccov92_start_blk8	; block 8 START_ADDR
  4090  072C  0000030A           	ddw	__ccov92_end_blk8	; block 8 END_ADDR
  4091  0730  000002E4           	ddw	__ccov89_start_blk4	; block 4 START_ADDR
  4092  0734  000002F2           	ddw	__ccov89_end_blk4	; block 4 END_ADDR
  4093  0738  000002CC           	ddw	_watch_dog_incrementing_timer	; block 0 START_ADDR
  4094  073C  000002DA           	ddw	__ccov86_end_blk0	; block 0 END_ADDR
  4095                           
  4096                           ; Function: watch_dog_incrementing_timer, coverage: 14,13,12,8,4,0
  4097  0740  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4098  0744  00000071           	ddw	__ccovbit14_9/(0+8)	; CC_ADDR
  4099  0748  00000001           	ddw	1	; NUM_POINTS
  4100  074C  00000004           	ddw	__ccovbit14_9& (0+7)	; OFFSET
  4101  0750  00000000           	ddw	0	; Reserved
  4102  0754  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4103  0758  00000006           	ddw	6	; NUM_RANGES
  4104  075C  00000327           	ddw	__ccov97_start_blk14	; block 14 START_ADDR
  4105  0760  0000032C           	ddw	__ccov97_end_blk14	; block 14 END_ADDR
  4106  0764  00000322           	ddw	__ccov96_start_blk13	; block 13 START_ADDR
  4107  0768  00000327           	ddw	__ccov96_end_blk13	; block 13 END_ADDR
  4108  076C  00000314           	ddw	__ccov95_start_blk12	; block 12 START_ADDR
  4109  0770  00000322           	ddw	__ccov95_end_blk12	; block 12 END_ADDR
  4110  0774  000002FC           	ddw	__ccov92_start_blk8	; block 8 START_ADDR
  4111  0778  0000030A           	ddw	__ccov92_end_blk8	; block 8 END_ADDR
  4112  077C  000002E4           	ddw	__ccov89_start_blk4	; block 4 START_ADDR
  4113  0780  000002F2           	ddw	__ccov89_end_blk4	; block 4 END_ADDR
  4114  0784  000002CC           	ddw	_watch_dog_incrementing_timer	; block 0 START_ADDR
  4115  0788  000002DA           	ddw	__ccov86_end_blk0	; block 0 END_ADDR
  4116                           
  4117                           ; Function: watch_dog_incrementing_timer, coverage: 17,16,12,8,4,0
  4118  078C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4119  0790  00000071           	ddw	__ccovbit17_10/(0+8)	; CC_ADDR
  4120  0794  00000001           	ddw	1	; NUM_POINTS
  4121  0798  00000003           	ddw	__ccovbit17_10& (0+7)	; OFFSET
  4122  079C  00000000           	ddw	0	; Reserved
  4123  07A0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4124  07A4  00000006           	ddw	6	; NUM_RANGES
  4125  07A8  00000331           	ddw	__ccov99_start_blk17	; block 17 START_ADDR
  4126  07AC  00000335           	ddw	__ccov99_end_blk17	; block 17 END_ADDR
  4127  07B0  0000032C           	ddw	__ccov98_start_blk16	; block 16 START_ADDR
  4128  07B4  00000331           	ddw	__ccov98_end_blk16	; block 16 END_ADDR
  4129  07B8  00000314           	ddw	__ccov95_start_blk12	; block 12 START_ADDR
  4130  07BC  00000322           	ddw	__ccov95_end_blk12	; block 12 END_ADDR
  4131  07C0  000002FC           	ddw	__ccov92_start_blk8	; block 8 START_ADDR
  4132  07C4  0000030A           	ddw	__ccov92_end_blk8	; block 8 END_ADDR
  4133  07C8  000002E4           	ddw	__ccov89_start_blk4	; block 4 START_ADDR
  4134  07CC  000002F2           	ddw	__ccov89_end_blk4	; block 4 END_ADDR
  4135  07D0  000002CC           	ddw	_watch_dog_incrementing_timer	; block 0 START_ADDR
  4136  07D4  000002DA           	ddw	__ccov86_end_blk0	; block 0 END_ADDR
  4137                           
  4138                           ; Function: watch_dog_incrementing_timer, coverage: 22,0
  4139  07D8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4140  07DC  00000071           	ddw	__ccovbit22_11/(0+8)	; CC_ADDR
  4141  07E0  00000001           	ddw	1	; NUM_POINTS
  4142  07E4  00000002           	ddw	__ccovbit22_11& (0+7)	; OFFSET
  4143  07E8  00000000           	ddw	0	; Reserved
  4144  07EC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4145  07F0  00000002           	ddw	2	; NUM_RANGES
  4146  07F4  00000335           	ddw	__ccov100_start_blk22	; block 22 START_ADDR
  4147  07F8  00000337           	ddw	__end_of_watch_dog_incrementing_timer	; block 22 END_ADDR
  4148  07FC  000002CC           	ddw	_watch_dog_incrementing_timer	; block 0 START_ADDR
  4149  0800  000002DA           	ddw	__ccov86_end_blk0	; block 0 END_ADDR
  4150                           
  4151                           ; Function: set_watchdog_timer_128ms, coverage: 1,0
  4152  0804  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4153  0808  00000071           	ddw	__ccovbit1_12/(0+8)	; CC_ADDR
  4154  080C  00000001           	ddw	1	; NUM_POINTS
  4155  0810  00000001           	ddw	__ccovbit1_12& (0+7)	; OFFSET
  4156  0814  00000000           	ddw	0	; Reserved
  4157  0818  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4158  081C  00000002           	ddw	2	; NUM_RANGES
  4159  0820  000003FD           	ddw	__ccov104_start_blk1	; block 1 START_ADDR
  4160  0824  000003FF           	ddw	__end_of_set_watchdog_timer_128ms	; block 1 END_ADDR
  4161  0828  000003F8           	ddw	_set_watchdog_timer_128ms	; block 0 START_ADDR
  4162  082C  000003FD           	ddw	__ccov103_end_blk0	; block 0 END_ADDR
  4163                           
  4164                           ; Function: set_watchdog_timer_256ms, coverage: 1,0
  4165  0830  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4166  0834  00000071           	ddw	__ccovbit1_13/(0+8)	; CC_ADDR
  4167  0838  00000001           	ddw	1	; NUM_POINTS
  4168  083C  00000000           	ddw	__ccovbit1_13& (0+7)	; OFFSET
  4169  0840  00000000           	ddw	0	; Reserved
  4170  0844  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4171  0848  00000002           	ddw	2	; NUM_RANGES
  4172  084C  000003EF           	ddw	__ccov106_start_blk1	; block 1 START_ADDR
  4173  0850  000003F1           	ddw	__end_of_set_watchdog_timer_256ms	; block 1 END_ADDR
  4174  0854  000003EA           	ddw	_set_watchdog_timer_256ms	; block 0 START_ADDR
  4175  0858  000003EF           	ddw	__ccov105_end_blk0	; block 0 END_ADDR
  4176                           
  4177                           ; Function: set_watchdog_timer_1s, coverage: 1,0
  4178  085C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4179  0860  00000070           	ddw	__ccovbit1_14/(0+8)	; CC_ADDR
  4180  0864  00000001           	ddw	1	; NUM_POINTS
  4181  0868  00000007           	ddw	__ccovbit1_14& (0+7)	; OFFSET
  4182  086C  00000000           	ddw	0	; Reserved
  4183  0870  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4184  0874  00000002           	ddw	2	; NUM_RANGES
  4185  0878  000003F6           	ddw	__ccov108_start_blk1	; block 1 START_ADDR
  4186  087C  000003F8           	ddw	__end_of_set_watchdog_timer_1s	; block 1 END_ADDR
  4187  0880  000003F1           	ddw	_set_watchdog_timer_1s	; block 0 START_ADDR
  4188  0884  000003F6           	ddw	__ccov107_end_blk0	; block 0 END_ADDR
  4189                           
  4190                           ; Function: set_watchdog_timer_4s, coverage: 1,0
  4191  0888  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4192  088C  00000070           	ddw	__ccovbit1_15/(0+8)	; CC_ADDR
  4193  0890  00000001           	ddw	1	; NUM_POINTS
  4194  0894  00000006           	ddw	__ccovbit1_15& (0+7)	; OFFSET
  4195  0898  00000000           	ddw	0	; Reserved
  4196  089C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4197  08A0  00000002           	ddw	2	; NUM_RANGES
  4198  08A4  000003E1           	ddw	__ccov110_start_blk1	; block 1 START_ADDR
  4199  08A8  000003E3           	ddw	__end_of_set_watchdog_timer_4s	; block 1 END_ADDR
  4200  08AC  000003DC           	ddw	_set_watchdog_timer_4s	; block 0 START_ADDR
  4201  08B0  000003E1           	ddw	__ccov109_end_blk0	; block 0 END_ADDR
  4202                           
  4203                           ; Function: set_watchdog_timer_256s, coverage: 1,0
  4204  08B4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4205  08B8  00000070           	ddw	__ccovbit1_16/(0+8)	; CC_ADDR
  4206  08BC  00000001           	ddw	1	; NUM_POINTS
  4207  08C0  00000005           	ddw	__ccovbit1_16& (0+7)	; OFFSET
  4208  08C4  00000000           	ddw	0	; Reserved
  4209  08C8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4210  08CC  00000002           	ddw	2	; NUM_RANGES
  4211  08D0  000003E8           	ddw	__ccov112_start_blk1	; block 1 START_ADDR
  4212  08D4  000003EA           	ddw	__end_of_set_watchdog_timer_256s	; block 1 END_ADDR
  4213  08D8  000003E3           	ddw	_set_watchdog_timer_256s	; block 0 START_ADDR
  4214  08DC  000003E8           	ddw	__ccov111_end_blk0	; block 0 END_ADDR
  4215                           
  4216                           ; Function: enable_watchdog_timer, coverage: 1,0
  4217  08E0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4218  08E4  00000070           	ddw	__ccovbit1_17/(0+8)	; CC_ADDR
  4219  08E8  00000001           	ddw	1	; NUM_POINTS
  4220  08EC  00000004           	ddw	__ccovbit1_17& (0+7)	; OFFSET
  4221  08F0  00000000           	ddw	0	; Reserved
  4222  08F4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4223  08F8  00000002           	ddw	2	; NUM_RANGES
  4224  08FC  00000407           	ddw	__ccov114_start_blk1	; block 1 START_ADDR
  4225  0900  00000409           	ddw	__end_of_enable_watchdog_timer	; block 1 END_ADDR
  4226  0904  00000405           	ddw	_enable_watchdog_timer	; block 0 START_ADDR
  4227  0908  00000407           	ddw	__ccov113_end_blk0	; block 0 END_ADDR
  4228                           
  4229                           ; Function: disable_watchdog_timer, coverage: 1,0
  4230  090C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4231  0910  00000070           	ddw	__ccovbit1_18/(0+8)	; CC_ADDR
  4232  0914  00000001           	ddw	1	; NUM_POINTS
  4233  0918  00000003           	ddw	__ccovbit1_18& (0+7)	; OFFSET
  4234  091C  00000000           	ddw	0	; Reserved
  4235  0920  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4236  0924  00000002           	ddw	2	; NUM_RANGES
  4237  0928  0000040B           	ddw	__ccov116_start_blk1	; block 1 START_ADDR
  4238  092C  0000040D           	ddw	__end_of_disable_watchdog_timer	; block 1 END_ADDR
  4239  0930  00000409           	ddw	_disable_watchdog_timer	; block 0 START_ADDR
  4240  0934  0000040B           	ddw	__ccov115_end_blk0	; block 0 END_ADDR
  4241                           
  4242                           ; Function: enable_external_interrupt, coverage: 1,0
  4243  0938  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4244  093C  00000070           	ddw	__ccovbit1_19/(0+8)	; CC_ADDR
  4245  0940  00000001           	ddw	1	; NUM_POINTS
  4246  0944  00000002           	ddw	__ccovbit1_19& (0+7)	; OFFSET
  4247  0948  00000000           	ddw	0	; Reserved
  4248  094C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4249  0950  00000002           	ddw	2	; NUM_RANGES
  4250  0954  0000040E           	ddw	__ccov118_start_blk1	; block 1 START_ADDR
  4251  0958  00000410           	ddw	__end_of_enable_external_interrupt	; block 1 END_ADDR
  4252  095C  0000040D           	ddw	_enable_external_interrupt	; block 0 START_ADDR
  4253  0960  0000040E           	ddw	__ccov117_end_blk0	; block 0 END_ADDR
  4254                           
  4255                           ; Function: disable_external_interrupt, coverage: 1,0
  4256  0964  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4257  0968  00000070           	ddw	__ccovbit1_20/(0+8)	; CC_ADDR
  4258  096C  00000001           	ddw	1	; NUM_POINTS
  4259  0970  00000001           	ddw	__ccovbit1_20& (0+7)	; OFFSET
  4260  0974  00000000           	ddw	0	; Reserved
  4261  0978  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4262  097C  00000002           	ddw	2	; NUM_RANGES
  4263  0980  00000411           	ddw	__ccov120_start_blk1	; block 1 START_ADDR
  4264  0984  00000413           	ddw	__end_of_disable_external_interrupt	; block 1 END_ADDR
  4265  0988  00000410           	ddw	_disable_external_interrupt	; block 0 START_ADDR
  4266  098C  00000411           	ddw	__ccov119_end_blk0	; block 0 END_ADDR
  4267                           
  4268                           ; Function: my_isr, coverage: 1,0
  4269  0990  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4270  0994  00000070           	ddw	__ccovbit1_21/(0+8)	; CC_ADDR
  4271  0998  00000001           	ddw	1	; NUM_POINTS
  4272  099C  00000000           	ddw	__ccovbit1_21& (0+7)	; OFFSET
  4273  09A0  00000000           	ddw	0	; Reserved
  4274  09A4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4275  09A8  00000002           	ddw	2	; NUM_RANGES
  4276  09AC  0000000A           	ddw	__ccov122_start_blk1	; block 1 START_ADDR
  4277  09B0  00000010           	ddw	__ccov122_end_blk1	; block 1 END_ADDR
  4278  09B4  00000004           	ddw	_my_isr	; block 0 START_ADDR
  4279  09B8  0000000A           	ddw	__ccov121_end_blk0	; block 0 END_ADDR
  4280                           
  4281                           ; Function: my_isr, coverage: 3,10,1,0
  4282  09BC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4283  09C0  00000025           	ddw	__ccovbit3_22/(0+8)	; CC_ADDR
  4284  09C4  00000001           	ddw	1	; NUM_POINTS
  4285  09C8  00000000           	ddw	__ccovbit3_22& (0+7)	; OFFSET
  4286  09CC  00000000           	ddw	0	; Reserved
  4287  09D0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4288  09D4  00000004           	ddw	4	; NUM_RANGES
  4289  09D8  00000010           	ddw	__ccov123_start_blk3	; block 3 START_ADDR
  4290  09DC  0000001A           	ddw	__ccov123_end_blk3	; block 3 END_ADDR
  4291  09E0  00000022           	ddw	__ccov127_start_blk10	; block 10 START_ADDR
  4292  09E4  00000035           	ddw	__ccov127_end_blk10	; block 10 END_ADDR
  4293  09E8  0000000A           	ddw	__ccov122_start_blk1	; block 1 START_ADDR
  4294  09EC  00000010           	ddw	__ccov122_end_blk1	; block 1 END_ADDR
  4295  09F0  00000004           	ddw	_my_isr	; block 0 START_ADDR
  4296  09F4  0000000A           	ddw	__ccov121_end_blk0	; block 0 END_ADDR
  4297                           
  4298                           ; Function: my_isr, coverage: 7,6,5,10,1,0
  4299  09F8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4300  09FC  00000024           	ddw	__ccovbit7_23/(0+8)	; CC_ADDR
  4301  0A00  00000001           	ddw	1	; NUM_POINTS
  4302  0A04  00000007           	ddw	__ccovbit7_23& (0+7)	; OFFSET
  4303  0A08  00000000           	ddw	0	; Reserved
  4304  0A0C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4305  0A10  00000006           	ddw	6	; NUM_RANGES
  4306  0A14  0000001D           	ddw	__ccov126_start_blk7	; block 7 START_ADDR
  4307  0A18  00000022           	ddw	__ccov126_end_blk7	; block 7 END_ADDR
  4308  0A1C  0000001B           	ddw	__ccov125_start_blk6	; block 6 START_ADDR
  4309  0A20  0000001D           	ddw	__ccov125_end_blk6	; block 6 END_ADDR
  4310  0A24  0000001A           	ddw	__ccov124_start_blk5	; block 5 START_ADDR
  4311  0A28  0000001B           	ddw	__ccov124_end_blk5	; block 5 END_ADDR
  4312  0A2C  00000022           	ddw	__ccov127_start_blk10	; block 10 START_ADDR
  4313  0A30  00000035           	ddw	__ccov127_end_blk10	; block 10 END_ADDR
  4314  0A34  0000000A           	ddw	__ccov122_start_blk1	; block 1 START_ADDR
  4315  0A38  00000010           	ddw	__ccov122_end_blk1	; block 1 END_ADDR
  4316  0A3C  00000004           	ddw	_my_isr	; block 0 START_ADDR
  4317  0A40  0000000A           	ddw	__ccov121_end_blk0	; block 0 END_ADDR
  4318                           
  4319                           ; Function: my_isr, coverage: 11,10,1,0
  4320  0A44  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4321  0A48  00000024           	ddw	__ccovbit11_24/(0+8)	; CC_ADDR
  4322  0A4C  00000001           	ddw	1	; NUM_POINTS
  4323  0A50  00000006           	ddw	__ccovbit11_24& (0+7)	; OFFSET
  4324  0A54  00000000           	ddw	0	; Reserved
  4325  0A58  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4326  0A5C  00000004           	ddw	4	; NUM_RANGES
  4327  0A60  00000035           	ddw	__ccov128_start_blk11	; block 11 START_ADDR
  4328  0A64  00000038           	ddw	__ccov128_end_blk11	; block 11 END_ADDR
  4329  0A68  00000022           	ddw	__ccov127_start_blk10	; block 10 START_ADDR
  4330  0A6C  00000035           	ddw	__ccov127_end_blk10	; block 10 END_ADDR
  4331  0A70  0000000A           	ddw	__ccov122_start_blk1	; block 1 START_ADDR
  4332  0A74  00000010           	ddw	__ccov122_end_blk1	; block 1 END_ADDR
  4333  0A78  00000004           	ddw	_my_isr	; block 0 START_ADDR
  4334  0A7C  0000000A           	ddw	__ccov121_end_blk0	; block 0 END_ADDR
  4335                           
  4336                           ; Function: my_isr, coverage: 13,12,0
  4337  0A80  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4338  0A84  00000024           	ddw	__ccovbit13_25/(0+8)	; CC_ADDR
  4339  0A88  00000001           	ddw	1	; NUM_POINTS
  4340  0A8C  00000005           	ddw	__ccovbit13_25& (0+7)	; OFFSET
  4341  0A90  00000000           	ddw	0	; Reserved
  4342  0A94  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4343  0A98  00000003           	ddw	3	; NUM_RANGES
  4344  0A9C  0000003D           	ddw	__ccov130_start_blk13	; block 13 START_ADDR
  4345  0AA0  00000043           	ddw	__ccov130_end_blk13	; block 13 END_ADDR
  4346  0AA4  00000038           	ddw	__ccov129_start_blk12	; block 12 START_ADDR
  4347  0AA8  0000003D           	ddw	__ccov129_end_blk12	; block 12 END_ADDR
  4348  0AAC  00000004           	ddw	_my_isr	; block 0 START_ADDR
  4349  0AB0  0000000A           	ddw	__ccov121_end_blk0	; block 0 END_ADDR
  4350                           
  4351                           ; Function: my_isr, coverage: 15,14,13,12,0
  4352  0AB4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4353  0AB8  00000024           	ddw	__ccovbit15_26/(0+8)	; CC_ADDR
  4354  0ABC  00000001           	ddw	1	; NUM_POINTS
  4355  0AC0  00000004           	ddw	__ccovbit15_26& (0+7)	; OFFSET
  4356  0AC4  00000000           	ddw	0	; Reserved
  4357  0AC8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4358  0ACC  00000005           	ddw	5	; NUM_RANGES
  4359  0AD0  00000050           	ddw	__ccov132_start_blk15	; block 15 START_ADDR
  4360  0AD4  00000056           	ddw	__ccov132_end_blk15	; block 15 END_ADDR
  4361  0AD8  00000043           	ddw	__ccov131_start_blk14	; block 14 START_ADDR
  4362  0ADC  00000050           	ddw	__ccov131_end_blk14	; block 14 END_ADDR
  4363  0AE0  0000003D           	ddw	__ccov130_start_blk13	; block 13 START_ADDR
  4364  0AE4  00000043           	ddw	__ccov130_end_blk13	; block 13 END_ADDR
  4365  0AE8  00000038           	ddw	__ccov129_start_blk12	; block 12 START_ADDR
  4366  0AEC  0000003D           	ddw	__ccov129_end_blk12	; block 12 END_ADDR
  4367  0AF0  00000004           	ddw	_my_isr	; block 0 START_ADDR
  4368  0AF4  0000000A           	ddw	__ccov121_end_blk0	; block 0 END_ADDR
  4369                           
  4370                           ; Function: my_isr, coverage: 17,16,14,13,12,0
  4371  0AF8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4372  0AFC  00000024           	ddw	__ccovbit17_27/(0+8)	; CC_ADDR
  4373  0B00  00000001           	ddw	1	; NUM_POINTS
  4374  0B04  00000003           	ddw	__ccovbit17_27& (0+7)	; OFFSET
  4375  0B08  00000000           	ddw	0	; Reserved
  4376  0B0C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4377  0B10  00000006           	ddw	6	; NUM_RANGES
  4378  0B14  00000064           	ddw	__ccov134_start_blk17	; block 17 START_ADDR
  4379  0B18  0000006A           	ddw	__ccov134_end_blk17	; block 17 END_ADDR
  4380  0B1C  00000056           	ddw	__ccov133_start_blk16	; block 16 START_ADDR
  4381  0B20  00000064           	ddw	__ccov133_end_blk16	; block 16 END_ADDR
  4382  0B24  00000043           	ddw	__ccov131_start_blk14	; block 14 START_ADDR
  4383  0B28  00000050           	ddw	__ccov131_end_blk14	; block 14 END_ADDR
  4384  0B2C  0000003D           	ddw	__ccov130_start_blk13	; block 13 START_ADDR
  4385  0B30  00000043           	ddw	__ccov130_end_blk13	; block 13 END_ADDR
  4386  0B34  00000038           	ddw	__ccov129_start_blk12	; block 12 START_ADDR
  4387  0B38  0000003D           	ddw	__ccov129_end_blk12	; block 12 END_ADDR
  4388  0B3C  00000004           	ddw	_my_isr	; block 0 START_ADDR
  4389  0B40  0000000A           	ddw	__ccov121_end_blk0	; block 0 END_ADDR
  4390                           
  4391                           ; Function: my_isr, coverage: 19,16,14,13,12,0
  4392  0B44  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4393  0B48  00000024           	ddw	__ccovbit19_28/(0+8)	; CC_ADDR
  4394  0B4C  00000001           	ddw	1	; NUM_POINTS
  4395  0B50  00000002           	ddw	__ccovbit19_28& (0+7)	; OFFSET
  4396  0B54  00000000           	ddw	0	; Reserved
  4397  0B58  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4398  0B5C  00000006           	ddw	6	; NUM_RANGES
  4399  0B60  0000006A           	ddw	__ccov135_start_blk19	; block 19 START_ADDR
  4400  0B64  0000006D           	ddw	__ccov135_end_blk19	; block 19 END_ADDR
  4401  0B68  00000056           	ddw	__ccov133_start_blk16	; block 16 START_ADDR
  4402  0B6C  00000064           	ddw	__ccov133_end_blk16	; block 16 END_ADDR
  4403  0B70  00000043           	ddw	__ccov131_start_blk14	; block 14 START_ADDR
  4404  0B74  00000050           	ddw	__ccov131_end_blk14	; block 14 END_ADDR
  4405  0B78  0000003D           	ddw	__ccov130_start_blk13	; block 13 START_ADDR
  4406  0B7C  00000043           	ddw	__ccov130_end_blk13	; block 13 END_ADDR
  4407  0B80  00000038           	ddw	__ccov129_start_blk12	; block 12 START_ADDR
  4408  0B84  0000003D           	ddw	__ccov129_end_blk12	; block 12 END_ADDR
  4409  0B88  00000004           	ddw	_my_isr	; block 0 START_ADDR
  4410  0B8C  0000000A           	ddw	__ccov121_end_blk0	; block 0 END_ADDR
  4411                           
  4412                           ; Function: my_isr, coverage: 22,12,0
  4413  0B90  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4414  0B94  00000024           	ddw	__ccovbit22_29/(0+8)	; CC_ADDR
  4415  0B98  00000001           	ddw	1	; NUM_POINTS
  4416  0B9C  00000001           	ddw	__ccovbit22_29& (0+7)	; OFFSET
  4417  0BA0  00000000           	ddw	0	; Reserved
  4418  0BA4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4419  0BA8  00000003           	ddw	3	; NUM_RANGES
  4420  0BAC  0000006D           	ddw	__ccov136_start_blk22	; block 22 START_ADDR
  4421  0BB0  00000071           	ddw	__end_of_my_isr	; block 22 END_ADDR
  4422  0BB4  00000038           	ddw	__ccov129_start_blk12	; block 12 START_ADDR
  4423  0BB8  0000003D           	ddw	__ccov129_end_blk12	; block 12 END_ADDR
  4424  0BBC  00000004           	ddw	_my_isr	; block 0 START_ADDR
  4425  0BC0  0000000A           	ddw	__ccov121_end_blk0	; block 0 END_ADDR
  4426                           
  4427                           ; Function: checkState1, coverage: 3,2,80,0
  4428  0BC4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4429  0BC8  00000024           	ddw	__ccovbit3_30/(0+8)	; CC_ADDR
  4430  0BCC  00000001           	ddw	1	; NUM_POINTS
  4431  0BD0  00000000           	ddw	__ccovbit3_30& (0+7)	; OFFSET
  4432  0BD4  00000000           	ddw	0	; Reserved
  4433  0BD8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4434  0BDC  00000004           	ddw	4	; NUM_RANGES
  4435  0BE0  00000092           	ddw	__ccov139_start_blk3	; block 3 START_ADDR
  4436  0BE4  00000098           	ddw	__ccov139_end_blk3	; block 3 END_ADDR
  4437  0BE8  0000008C           	ddw	__ccov138_start_blk2	; block 2 START_ADDR
  4438  0BEC  00000092           	ddw	__ccov138_end_blk2	; block 2 END_ADDR
  4439  0BF0  000001CC           	ddw	__ccov177_start_blk80	; block 80 START_ADDR
  4440  0BF4  000001F2           	ddw	__ccov177_end_blk80	; block 80 END_ADDR
  4441  0BF8  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  4442  0BFC  0000008C           	ddw	__ccov137_end_blk0	; block 0 END_ADDR
  4443                           
  4444                           ; Function: checkState1, coverage: 4,80,0
  4445  0C00  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4446  0C04  00000023           	ddw	__ccovbit4_31/(0+8)	; CC_ADDR
  4447  0C08  00000001           	ddw	1	; NUM_POINTS
  4448  0C0C  00000007           	ddw	__ccovbit4_31& (0+7)	; OFFSET
  4449  0C10  00000000           	ddw	0	; Reserved
  4450  0C14  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4451  0C18  00000003           	ddw	3	; NUM_RANGES
  4452  0C1C  00000098           	ddw	__ccov140_start_blk4	; block 4 START_ADDR
  4453  0C20  0000009F           	ddw	__ccov140_end_blk4	; block 4 END_ADDR
  4454  0C24  000001CC           	ddw	__ccov177_start_blk80	; block 80 START_ADDR
  4455  0C28  000001F2           	ddw	__ccov177_end_blk80	; block 80 END_ADDR
  4456  0C2C  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  4457  0C30  0000008C           	ddw	__ccov137_end_blk0	; block 0 END_ADDR
  4458                           
  4459                           ; Function: checkState1, coverage: 6,80,0
  4460  0C34  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4461  0C38  00000023           	ddw	__ccovbit6_32/(0+8)	; CC_ADDR
  4462  0C3C  00000001           	ddw	1	; NUM_POINTS
  4463  0C40  00000006           	ddw	__ccovbit6_32& (0+7)	; OFFSET
  4464  0C44  00000000           	ddw	0	; Reserved
  4465  0C48  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4466  0C4C  00000003           	ddw	3	; NUM_RANGES
  4467  0C50  0000009F           	ddw	__ccov141_start_blk6	; block 6 START_ADDR
  4468  0C54  000000A8           	ddw	__ccov141_end_blk6	; block 6 END_ADDR
  4469  0C58  000001CC           	ddw	__ccov177_start_blk80	; block 80 START_ADDR
  4470  0C5C  000001F2           	ddw	__ccov177_end_blk80	; block 80 END_ADDR
  4471  0C60  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  4472  0C64  0000008C           	ddw	__ccov137_end_blk0	; block 0 END_ADDR
  4473                           
  4474                           ; Function: checkState1, coverage: 7,80,0
  4475  0C68  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4476  0C6C  00000023           	ddw	__ccovbit7_33/(0+8)	; CC_ADDR
  4477  0C70  00000001           	ddw	1	; NUM_POINTS
  4478  0C74  00000005           	ddw	__ccovbit7_33& (0+7)	; OFFSET
  4479  0C78  00000000           	ddw	0	; Reserved
  4480  0C7C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4481  0C80  00000003           	ddw	3	; NUM_RANGES
  4482  0C84  000000A8           	ddw	__ccov142_start_blk7	; block 7 START_ADDR
  4483  0C88  000000AD           	ddw	__ccov142_end_blk7	; block 7 END_ADDR
  4484  0C8C  000001CC           	ddw	__ccov177_start_blk80	; block 80 START_ADDR
  4485  0C90  000001F2           	ddw	__ccov177_end_blk80	; block 80 END_ADDR
  4486  0C94  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  4487  0C98  0000008C           	ddw	__ccov137_end_blk0	; block 0 END_ADDR
  4488                           
  4489                           ; Function: checkState1, coverage: 8,80,0
  4490  0C9C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4491  0CA0  00000023           	ddw	__ccovbit8_34/(0+8)	; CC_ADDR
  4492  0CA4  00000001           	ddw	1	; NUM_POINTS
  4493  0CA8  00000004           	ddw	__ccovbit8_34& (0+7)	; OFFSET
  4494  0CAC  00000000           	ddw	0	; Reserved
  4495  0CB0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4496  0CB4  00000003           	ddw	3	; NUM_RANGES
  4497  0CB8  000000AD           	ddw	__ccov143_start_blk8	; block 8 START_ADDR
  4498  0CBC  000000B4           	ddw	__ccov143_end_blk8	; block 8 END_ADDR
  4499  0CC0  000001CC           	ddw	__ccov177_start_blk80	; block 80 START_ADDR
  4500  0CC4  000001F2           	ddw	__ccov177_end_blk80	; block 80 END_ADDR
  4501  0CC8  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  4502  0CCC  0000008C           	ddw	__ccov137_end_blk0	; block 0 END_ADDR
  4503                           
  4504                           ; Function: checkState1, coverage: 10,80,0
  4505  0CD0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4506  0CD4  00000023           	ddw	__ccovbit10_35/(0+8)	; CC_ADDR
  4507  0CD8  00000001           	ddw	1	; NUM_POINTS
  4508  0CDC  00000003           	ddw	__ccovbit10_35& (0+7)	; OFFSET
  4509  0CE0  00000000           	ddw	0	; Reserved
  4510  0CE4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4511  0CE8  00000003           	ddw	3	; NUM_RANGES
  4512  0CEC  000000B4           	ddw	__ccov144_start_blk10	; block 10 START_ADDR
  4513  0CF0  000000BD           	ddw	__ccov144_end_blk10	; block 10 END_ADDR
  4514  0CF4  000001CC           	ddw	__ccov177_start_blk80	; block 80 START_ADDR
  4515  0CF8  000001F2           	ddw	__ccov177_end_blk80	; block 80 END_ADDR
  4516  0CFC  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  4517  0D00  0000008C           	ddw	__ccov137_end_blk0	; block 0 END_ADDR
  4518                           
  4519                           ; Function: checkState1, coverage: 11,80,0
  4520  0D04  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4521  0D08  00000023           	ddw	__ccovbit11_36/(0+8)	; CC_ADDR
  4522  0D0C  00000001           	ddw	1	; NUM_POINTS
  4523  0D10  00000002           	ddw	__ccovbit11_36& (0+7)	; OFFSET
  4524  0D14  00000000           	ddw	0	; Reserved
  4525  0D18  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4526  0D1C  00000003           	ddw	3	; NUM_RANGES
  4527  0D20  000000BD           	ddw	__ccov145_start_blk11	; block 11 START_ADDR
  4528  0D24  000000C4           	ddw	__ccov145_end_blk11	; block 11 END_ADDR
  4529  0D28  000001CC           	ddw	__ccov177_start_blk80	; block 80 START_ADDR
  4530  0D2C  000001F2           	ddw	__ccov177_end_blk80	; block 80 END_ADDR
  4531  0D30  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  4532  0D34  0000008C           	ddw	__ccov137_end_blk0	; block 0 END_ADDR
  4533                           
  4534                           ; Function: checkState1, coverage: 14,13,10,80,0
  4535  0D38  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4536  0D3C  00000023           	ddw	__ccovbit14_37/(0+8)	; CC_ADDR
  4537  0D40  00000001           	ddw	1	; NUM_POINTS
  4538  0D44  00000001           	ddw	__ccovbit14_37& (0+7)	; OFFSET
  4539  0D48  00000000           	ddw	0	; Reserved
  4540  0D4C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4541  0D50  00000005           	ddw	5	; NUM_RANGES
  4542  0D54  000000C8           	ddw	__ccov147_start_blk14	; block 14 START_ADDR
  4543  0D58  000000CE           	ddw	__ccov147_end_blk14	; block 14 END_ADDR
  4544  0D5C  000000C4           	ddw	__ccov146_start_blk13	; block 13 START_ADDR
  4545  0D60  000000C8           	ddw	__ccov146_end_blk13	; block 13 END_ADDR
  4546  0D64  000000B4           	ddw	__ccov144_start_blk10	; block 10 START_ADDR
  4547  0D68  000000BD           	ddw	__ccov144_end_blk10	; block 10 END_ADDR
  4548  0D6C  000001CC           	ddw	__ccov177_start_blk80	; block 80 START_ADDR
  4549  0D70  000001F2           	ddw	__ccov177_end_blk80	; block 80 END_ADDR
  4550  0D74  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  4551  0D78  0000008C           	ddw	__ccov137_end_blk0	; block 0 END_ADDR
  4552                           
  4553                           ; Function: checkState1, coverage: 17,80,0
  4554  0D7C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4555  0D80  00000023           	ddw	__ccovbit17_38/(0+8)	; CC_ADDR
  4556  0D84  00000001           	ddw	1	; NUM_POINTS
  4557  0D88  00000000           	ddw	__ccovbit17_38& (0+7)	; OFFSET
  4558  0D8C  00000000           	ddw	0	; Reserved
  4559  0D90  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4560  0D94  00000003           	ddw	3	; NUM_RANGES
  4561  0D98  000000CE           	ddw	__ccov148_start_blk17	; block 17 START_ADDR
  4562  0D9C  000000D0           	ddw	__ccov148_end_blk17	; block 17 END_ADDR
  4563  0DA0  000001CC           	ddw	__ccov177_start_blk80	; block 80 START_ADDR
  4564  0DA4  000001F2           	ddw	__ccov177_end_blk80	; block 80 END_ADDR
  4565  0DA8  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  4566  0DAC  0000008C           	ddw	__ccov137_end_blk0	; block 0 END_ADDR
  4567                           
  4568                           ; Function: checkState1, coverage: 19,80,0
  4569  0DB0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4570  0DB4  00000022           	ddw	__ccovbit19_39/(0+8)	; CC_ADDR
  4571  0DB8  00000001           	ddw	1	; NUM_POINTS
  4572  0DBC  00000007           	ddw	__ccovbit19_39& (0+7)	; OFFSET
  4573  0DC0  00000000           	ddw	0	; Reserved
  4574  0DC4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4575  0DC8  00000003           	ddw	3	; NUM_RANGES
  4576  0DCC  000000D0           	ddw	__ccov149_start_blk19	; block 19 START_ADDR
  4577  0DD0  000000DF           	ddw	__ccov149_end_blk19	; block 19 END_ADDR
  4578  0DD4  000001CC           	ddw	__ccov177_start_blk80	; block 80 START_ADDR
  4579  0DD8  000001F2           	ddw	__ccov177_end_blk80	; block 80 END_ADDR
  4580  0DDC  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  4581  0DE0  0000008C           	ddw	__ccov137_end_blk0	; block 0 END_ADDR
  4582                           
  4583                           ; Function: checkState1, coverage: 22,19,80,0
  4584  0DE4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4585  0DE8  00000022           	ddw	__ccovbit22_40/(0+8)	; CC_ADDR
  4586  0DEC  00000001           	ddw	1	; NUM_POINTS
  4587  0DF0  00000006           	ddw	__ccovbit22_40& (0+7)	; OFFSET
  4588  0DF4  00000000           	ddw	0	; Reserved
  4589  0DF8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4590  0DFC  00000004           	ddw	4	; NUM_RANGES
  4591  0E00  000000DF           	ddw	__ccov150_start_blk22	; block 22 START_ADDR
  4592  0E04  000000E6           	ddw	__ccov150_end_blk22	; block 22 END_ADDR
  4593  0E08  000000D0           	ddw	__ccov149_start_blk19	; block 19 START_ADDR
  4594  0E0C  000000DF           	ddw	__ccov149_end_blk19	; block 19 END_ADDR
  4595  0E10  000001CC           	ddw	__ccov177_start_blk80	; block 80 START_ADDR
  4596  0E14  000001F2           	ddw	__ccov177_end_blk80	; block 80 END_ADDR
  4597  0E18  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  4598  0E1C  0000008C           	ddw	__ccov137_end_blk0	; block 0 END_ADDR
  4599                           
  4600                           ; Function: checkState1, coverage: 28,36,27,26,25,80,0
  4601  0E20  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4602  0E24  00000022           	ddw	__ccovbit28_41/(0+8)	; CC_ADDR
  4603  0E28  00000001           	ddw	1	; NUM_POINTS
  4604  0E2C  00000005           	ddw	__ccovbit28_41& (0+7)	; OFFSET
  4605  0E30  00000000           	ddw	0	; Reserved
  4606  0E34  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4607  0E38  00000007           	ddw	7	; NUM_RANGES
  4608  0E3C  000000F5           	ddw	__ccov154_start_blk28	; block 28 START_ADDR
  4609  0E40  000000F9           	ddw	__ccov154_end_blk28	; block 28 END_ADDR
  4610  0E44  000000FF           	ddw	__ccov157_start_blk36	; block 36 START_ADDR
  4611  0E48  00000112           	ddw	__ccov157_end_blk36	; block 36 END_ADDR
  4612  0E4C  000000F0           	ddw	__ccov153_start_blk27	; block 27 START_ADDR
  4613  0E50  000000F5           	ddw	__ccov153_end_blk27	; block 27 END_ADDR
  4614  0E54  000000EA           	ddw	__ccov152_start_blk26	; block 26 START_ADDR
  4615  0E58  000000F0           	ddw	__ccov152_end_blk26	; block 26 END_ADDR
  4616  0E5C  000000E6           	ddw	__ccov151_start_blk25	; block 25 START_ADDR
  4617  0E60  000000EA           	ddw	__ccov151_end_blk25	; block 25 END_ADDR
  4618  0E64  000001CC           	ddw	__ccov177_start_blk80	; block 80 START_ADDR
  4619  0E68  000001F2           	ddw	__ccov177_end_blk80	; block 80 END_ADDR
  4620  0E6C  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  4621  0E70  0000008C           	ddw	__ccov137_end_blk0	; block 0 END_ADDR
  4622                           
  4623                           ; Function: checkState1, coverage: 29,36,27,26,25,80,0
  4624  0E74  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4625  0E78  00000022           	ddw	__ccovbit29_42/(0+8)	; CC_ADDR
  4626  0E7C  00000001           	ddw	1	; NUM_POINTS
  4627  0E80  00000004           	ddw	__ccovbit29_42& (0+7)	; OFFSET
  4628  0E84  00000000           	ddw	0	; Reserved
  4629  0E88  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4630  0E8C  00000007           	ddw	7	; NUM_RANGES
  4631  0E90  000000F9           	ddw	__ccov155_start_blk29	; block 29 START_ADDR
  4632  0E94  000000FD           	ddw	__ccov155_end_blk29	; block 29 END_ADDR
  4633  0E98  000000FF           	ddw	__ccov157_start_blk36	; block 36 START_ADDR
  4634  0E9C  00000112           	ddw	__ccov157_end_blk36	; block 36 END_ADDR
  4635  0EA0  000000F0           	ddw	__ccov153_start_blk27	; block 27 START_ADDR
  4636  0EA4  000000F5           	ddw	__ccov153_end_blk27	; block 27 END_ADDR
  4637  0EA8  000000EA           	ddw	__ccov152_start_blk26	; block 26 START_ADDR
  4638  0EAC  000000F0           	ddw	__ccov152_end_blk26	; block 26 END_ADDR
  4639  0EB0  000000E6           	ddw	__ccov151_start_blk25	; block 25 START_ADDR
  4640  0EB4  000000EA           	ddw	__ccov151_end_blk25	; block 25 END_ADDR
  4641  0EB8  000001CC           	ddw	__ccov177_start_blk80	; block 80 START_ADDR
  4642  0EBC  000001F2           	ddw	__ccov177_end_blk80	; block 80 END_ADDR
  4643  0EC0  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  4644  0EC4  0000008C           	ddw	__ccov137_end_blk0	; block 0 END_ADDR
  4645                           
  4646                           ; Function: checkState1, coverage: 33,36,27,26,25,80,0
  4647  0EC8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4648  0ECC  00000022           	ddw	__ccovbit33_43/(0+8)	; CC_ADDR
  4649  0ED0  00000001           	ddw	1	; NUM_POINTS
  4650  0ED4  00000003           	ddw	__ccovbit33_43& (0+7)	; OFFSET
  4651  0ED8  00000000           	ddw	0	; Reserved
  4652  0EDC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4653  0EE0  00000007           	ddw	7	; NUM_RANGES
  4654  0EE4  000000FD           	ddw	__ccov156_start_blk33	; block 33 START_ADDR
  4655  0EE8  000000FF           	ddw	__ccov156_end_blk33	; block 33 END_ADDR
  4656  0EEC  000000FF           	ddw	__ccov157_start_blk36	; block 36 START_ADDR
  4657  0EF0  00000112           	ddw	__ccov157_end_blk36	; block 36 END_ADDR
  4658  0EF4  000000F0           	ddw	__ccov153_start_blk27	; block 27 START_ADDR
  4659  0EF8  000000F5           	ddw	__ccov153_end_blk27	; block 27 END_ADDR
  4660  0EFC  000000EA           	ddw	__ccov152_start_blk26	; block 26 START_ADDR
  4661  0F00  000000F0           	ddw	__ccov152_end_blk26	; block 26 END_ADDR
  4662  0F04  000000E6           	ddw	__ccov151_start_blk25	; block 25 START_ADDR
  4663  0F08  000000EA           	ddw	__ccov151_end_blk25	; block 25 END_ADDR
  4664  0F0C  000001CC           	ddw	__ccov177_start_blk80	; block 80 START_ADDR
  4665  0F10  000001F2           	ddw	__ccov177_end_blk80	; block 80 END_ADDR
  4666  0F14  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  4667  0F18  0000008C           	ddw	__ccov137_end_blk0	; block 0 END_ADDR
  4668                           
  4669                           ; Function: checkState1, coverage: 38,36,27,26,25,80,0
  4670  0F1C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4671  0F20  00000022           	ddw	__ccovbit38_44/(0+8)	; CC_ADDR
  4672  0F24  00000001           	ddw	1	; NUM_POINTS
  4673  0F28  00000002           	ddw	__ccovbit38_44& (0+7)	; OFFSET
  4674  0F2C  00000000           	ddw	0	; Reserved
  4675  0F30  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4676  0F34  00000007           	ddw	7	; NUM_RANGES
  4677  0F38  00000112           	ddw	__ccov158_start_blk38	; block 38 START_ADDR
  4678  0F3C  0000011D           	ddw	__ccov158_end_blk38	; block 38 END_ADDR
  4679  0F40  000000FF           	ddw	__ccov157_start_blk36	; block 36 START_ADDR
  4680  0F44  00000112           	ddw	__ccov157_end_blk36	; block 36 END_ADDR
  4681  0F48  000000F0           	ddw	__ccov153_start_blk27	; block 27 START_ADDR
  4682  0F4C  000000F5           	ddw	__ccov153_end_blk27	; block 27 END_ADDR
  4683  0F50  000000EA           	ddw	__ccov152_start_blk26	; block 26 START_ADDR
  4684  0F54  000000F0           	ddw	__ccov152_end_blk26	; block 26 END_ADDR
  4685  0F58  000000E6           	ddw	__ccov151_start_blk25	; block 25 START_ADDR
  4686  0F5C  000000EA           	ddw	__ccov151_end_blk25	; block 25 END_ADDR
  4687  0F60  000001CC           	ddw	__ccov177_start_blk80	; block 80 START_ADDR
  4688  0F64  000001F2           	ddw	__ccov177_end_blk80	; block 80 END_ADDR
  4689  0F68  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  4690  0F6C  0000008C           	ddw	__ccov137_end_blk0	; block 0 END_ADDR
  4691                           
  4692                           ; Function: checkState1, coverage: 40,26,25,80,0
  4693  0F70  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4694  0F74  00000022           	ddw	__ccovbit40_45/(0+8)	; CC_ADDR
  4695  0F78  00000001           	ddw	1	; NUM_POINTS
  4696  0F7C  00000001           	ddw	__ccovbit40_45& (0+7)	; OFFSET
  4697  0F80  00000000           	ddw	0	; Reserved
  4698  0F84  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4699  0F88  00000005           	ddw	5	; NUM_RANGES
  4700  0F8C  0000011D           	ddw	__ccov159_start_blk40	; block 40 START_ADDR
  4701  0F90  00000126           	ddw	__ccov159_end_blk40	; block 40 END_ADDR
  4702  0F94  000000EA           	ddw	__ccov152_start_blk26	; block 26 START_ADDR
  4703  0F98  000000F0           	ddw	__ccov152_end_blk26	; block 26 END_ADDR
  4704  0F9C  000000E6           	ddw	__ccov151_start_blk25	; block 25 START_ADDR
  4705  0FA0  000000EA           	ddw	__ccov151_end_blk25	; block 25 END_ADDR
  4706  0FA4  000001CC           	ddw	__ccov177_start_blk80	; block 80 START_ADDR
  4707  0FA8  000001F2           	ddw	__ccov177_end_blk80	; block 80 END_ADDR
  4708  0FAC  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  4709  0FB0  0000008C           	ddw	__ccov137_end_blk0	; block 0 END_ADDR
  4710                           
  4711                           ; Function: checkState1, coverage: 41,80,0
  4712  0FB4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4713  0FB8  00000022           	ddw	__ccovbit41_46/(0+8)	; CC_ADDR
  4714  0FBC  00000001           	ddw	1	; NUM_POINTS
  4715  0FC0  00000000           	ddw	__ccovbit41_46& (0+7)	; OFFSET
  4716  0FC4  00000000           	ddw	0	; Reserved
  4717  0FC8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4718  0FCC  00000003           	ddw	3	; NUM_RANGES
  4719  0FD0  00000126           	ddw	__ccov160_start_blk41	; block 41 START_ADDR
  4720  0FD4  0000012B           	ddw	__ccov160_end_blk41	; block 41 END_ADDR
  4721  0FD8  000001CC           	ddw	__ccov177_start_blk80	; block 80 START_ADDR
  4722  0FDC  000001F2           	ddw	__ccov177_end_blk80	; block 80 END_ADDR
  4723  0FE0  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  4724  0FE4  0000008C           	ddw	__ccov137_end_blk0	; block 0 END_ADDR
  4725                           
  4726                           ; Function: checkState1, coverage: 46,45,80,0
  4727  0FE8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4728  0FEC  00000021           	ddw	__ccovbit46_47/(0+8)	; CC_ADDR
  4729  0FF0  00000001           	ddw	1	; NUM_POINTS
  4730  0FF4  00000007           	ddw	__ccovbit46_47& (0+7)	; OFFSET
  4731  0FF8  00000000           	ddw	0	; Reserved
  4732  0FFC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4733  1000  00000004           	ddw	4	; NUM_RANGES
  4734  1004  00000138           	ddw	__ccov162_start_blk46	; block 46 START_ADDR
  4735  1008  0000013F           	ddw	__ccov162_end_blk46	; block 46 END_ADDR
  4736  100C  0000012B           	ddw	__ccov161_start_blk45	; block 45 START_ADDR
  4737  1010  00000138           	ddw	__ccov161_end_blk45	; block 45 END_ADDR
  4738  1014  000001CC           	ddw	__ccov177_start_blk80	; block 80 START_ADDR
  4739  1018  000001F2           	ddw	__ccov177_end_blk80	; block 80 END_ADDR
  4740  101C  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  4741  1020  0000008C           	ddw	__ccov137_end_blk0	; block 0 END_ADDR
  4742                           
  4743                           ; Function: checkState1, coverage: 48,45,80,0
  4744  1024  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4745  1028  00000021           	ddw	__ccovbit48_48/(0+8)	; CC_ADDR
  4746  102C  00000001           	ddw	1	; NUM_POINTS
  4747  1030  00000006           	ddw	__ccovbit48_48& (0+7)	; OFFSET
  4748  1034  00000000           	ddw	0	; Reserved
  4749  1038  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4750  103C  00000004           	ddw	4	; NUM_RANGES
  4751  1040  0000013F           	ddw	__ccov163_start_blk48	; block 48 START_ADDR
  4752  1044  00000146           	ddw	__ccov163_end_blk48	; block 48 END_ADDR
  4753  1048  0000012B           	ddw	__ccov161_start_blk45	; block 45 START_ADDR
  4754  104C  00000138           	ddw	__ccov161_end_blk45	; block 45 END_ADDR
  4755  1050  000001CC           	ddw	__ccov177_start_blk80	; block 80 START_ADDR
  4756  1054  000001F2           	ddw	__ccov177_end_blk80	; block 80 END_ADDR
  4757  1058  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  4758  105C  0000008C           	ddw	__ccov137_end_blk0	; block 0 END_ADDR
  4759                           
  4760                           ; Function: checkState1, coverage: 51,50,80,0
  4761  1060  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4762  1064  00000021           	ddw	__ccovbit51_49/(0+8)	; CC_ADDR
  4763  1068  00000001           	ddw	1	; NUM_POINTS
  4764  106C  00000005           	ddw	__ccovbit51_49& (0+7)	; OFFSET
  4765  1070  00000000           	ddw	0	; Reserved
  4766  1074  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4767  1078  00000004           	ddw	4	; NUM_RANGES
  4768  107C  0000014A           	ddw	__ccov165_start_blk51	; block 51 START_ADDR
  4769  1080  00000157           	ddw	__ccov165_end_blk51	; block 51 END_ADDR
  4770  1084  00000146           	ddw	__ccov164_start_blk50	; block 50 START_ADDR
  4771  1088  0000014A           	ddw	__ccov164_end_blk50	; block 50 END_ADDR
  4772  108C  000001CC           	ddw	__ccov177_start_blk80	; block 80 START_ADDR
  4773  1090  000001F2           	ddw	__ccov177_end_blk80	; block 80 END_ADDR
  4774  1094  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  4775  1098  0000008C           	ddw	__ccov137_end_blk0	; block 0 END_ADDR
  4776                           
  4777                           ; Function: checkState1, coverage: 67,66,65,64,63,62,56,55,80,0
  4778  109C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4779  10A0  00000021           	ddw	__ccovbit67_50/(0+8)	; CC_ADDR
  4780  10A4  00000001           	ddw	1	; NUM_POINTS
  4781  10A8  00000004           	ddw	__ccovbit67_50& (0+7)	; OFFSET
  4782  10AC  00000000           	ddw	0	; Reserved
  4783  10B0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4784  10B4  0000000A           	ddw	10	; NUM_RANGES
  4785  10B8  000001B8           	ddw	__ccov173_start_blk67	; block 67 START_ADDR
  4786  10BC  000001BD           	ddw	__ccov173_end_blk67	; block 67 END_ADDR
  4787  10C0  000001AF           	ddw	__ccov172_start_blk66	; block 66 START_ADDR
  4788  10C4  000001B8           	ddw	__ccov172_end_blk66	; block 66 END_ADDR
  4789  10C8  000001AD           	ddw	__ccov171_start_blk65	; block 65 START_ADDR
  4790  10CC  000001AF           	ddw	__ccov171_end_blk65	; block 65 END_ADDR
  4791  10D0  000001A0           	ddw	__ccov170_start_blk64	; block 64 START_ADDR
  4792  10D4  000001AD           	ddw	__ccov170_end_blk64	; block 64 END_ADDR
  4793  10D8  00000170           	ddw	__ccov169_start_blk63	; block 63 START_ADDR
  4794  10DC  000001A0           	ddw	__ccov169_end_blk63	; block 63 END_ADDR
  4795  10E0  00000162           	ddw	__ccov168_start_blk62	; block 62 START_ADDR
  4796  10E4  00000170           	ddw	__ccov168_end_blk62	; block 62 END_ADDR
  4797  10E8  0000015E           	ddw	__ccov167_start_blk56	; block 56 START_ADDR
  4798  10EC  00000162           	ddw	__ccov167_end_blk56	; block 56 END_ADDR
  4799  10F0  00000157           	ddw	__ccov166_start_blk55	; block 55 START_ADDR
  4800  10F4  0000015E           	ddw	__ccov166_end_blk55	; block 55 END_ADDR
  4801  10F8  000001CC           	ddw	__ccov177_start_blk80	; block 80 START_ADDR
  4802  10FC  000001F2           	ddw	__ccov177_end_blk80	; block 80 END_ADDR
  4803  1100  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  4804  1104  0000008C           	ddw	__ccov137_end_blk0	; block 0 END_ADDR
  4805                           
  4806                           ; Function: checkState1, coverage: 68,64,63,62,56,55,80,0
  4807  1108  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4808  110C  00000021           	ddw	__ccovbit68_51/(0+8)	; CC_ADDR
  4809  1110  00000001           	ddw	1	; NUM_POINTS
  4810  1114  00000003           	ddw	__ccovbit68_51& (0+7)	; OFFSET
  4811  1118  00000000           	ddw	0	; Reserved
  4812  111C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4813  1120  00000008           	ddw	8	; NUM_RANGES
  4814  1124  000001BD           	ddw	__ccov174_start_blk68	; block 68 START_ADDR
  4815  1128  000001C1           	ddw	__ccov174_end_blk68	; block 68 END_ADDR
  4816  112C  000001A0           	ddw	__ccov170_start_blk64	; block 64 START_ADDR
  4817  1130  000001AD           	ddw	__ccov170_end_blk64	; block 64 END_ADDR
  4818  1134  00000170           	ddw	__ccov169_start_blk63	; block 63 START_ADDR
  4819  1138  000001A0           	ddw	__ccov169_end_blk63	; block 63 END_ADDR
  4820  113C  00000162           	ddw	__ccov168_start_blk62	; block 62 START_ADDR
  4821  1140  00000170           	ddw	__ccov168_end_blk62	; block 62 END_ADDR
  4822  1144  0000015E           	ddw	__ccov167_start_blk56	; block 56 START_ADDR
  4823  1148  00000162           	ddw	__ccov167_end_blk56	; block 56 END_ADDR
  4824  114C  00000157           	ddw	__ccov166_start_blk55	; block 55 START_ADDR
  4825  1150  0000015E           	ddw	__ccov166_end_blk55	; block 55 END_ADDR
  4826  1154  000001CC           	ddw	__ccov177_start_blk80	; block 80 START_ADDR
  4827  1158  000001F2           	ddw	__ccov177_end_blk80	; block 80 END_ADDR
  4828  115C  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  4829  1160  0000008C           	ddw	__ccov137_end_blk0	; block 0 END_ADDR
  4830                           
  4831                           ; Function: checkState1, coverage: 70,64,63,62,56,55,80,0
  4832  1164  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4833  1168  00000021           	ddw	__ccovbit70_52/(0+8)	; CC_ADDR
  4834  116C  00000001           	ddw	1	; NUM_POINTS
  4835  1170  00000002           	ddw	__ccovbit70_52& (0+7)	; OFFSET
  4836  1174  00000000           	ddw	0	; Reserved
  4837  1178  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4838  117C  00000008           	ddw	8	; NUM_RANGES
  4839  1180  000001C1           	ddw	__ccov175_start_blk70	; block 70 START_ADDR
  4840  1184  000001C8           	ddw	__ccov175_end_blk70	; block 70 END_ADDR
  4841  1188  000001A0           	ddw	__ccov170_start_blk64	; block 64 START_ADDR
  4842  118C  000001AD           	ddw	__ccov170_end_blk64	; block 64 END_ADDR
  4843  1190  00000170           	ddw	__ccov169_start_blk63	; block 63 START_ADDR
  4844  1194  000001A0           	ddw	__ccov169_end_blk63	; block 63 END_ADDR
  4845  1198  00000162           	ddw	__ccov168_start_blk62	; block 62 START_ADDR
  4846  119C  00000170           	ddw	__ccov168_end_blk62	; block 62 END_ADDR
  4847  11A0  0000015E           	ddw	__ccov167_start_blk56	; block 56 START_ADDR
  4848  11A4  00000162           	ddw	__ccov167_end_blk56	; block 56 END_ADDR
  4849  11A8  00000157           	ddw	__ccov166_start_blk55	; block 55 START_ADDR
  4850  11AC  0000015E           	ddw	__ccov166_end_blk55	; block 55 END_ADDR
  4851  11B0  000001CC           	ddw	__ccov177_start_blk80	; block 80 START_ADDR
  4852  11B4  000001F2           	ddw	__ccov177_end_blk80	; block 80 END_ADDR
  4853  11B8  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  4854  11BC  0000008C           	ddw	__ccov137_end_blk0	; block 0 END_ADDR
  4855                           
  4856                           ; Function: checkState1, coverage: 71,62,56,55,80,0
  4857  11C0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4858  11C4  00000021           	ddw	__ccovbit71_53/(0+8)	; CC_ADDR
  4859  11C8  00000001           	ddw	1	; NUM_POINTS
  4860  11CC  00000001           	ddw	__ccovbit71_53& (0+7)	; OFFSET
  4861  11D0  00000000           	ddw	0	; Reserved
  4862  11D4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4863  11D8  00000006           	ddw	6	; NUM_RANGES
  4864  11DC  000001C8           	ddw	__ccov176_start_blk71	; block 71 START_ADDR
  4865  11E0  000001CC           	ddw	__ccov176_end_blk71	; block 71 END_ADDR
  4866  11E4  00000162           	ddw	__ccov168_start_blk62	; block 62 START_ADDR
  4867  11E8  00000170           	ddw	__ccov168_end_blk62	; block 62 END_ADDR
  4868  11EC  0000015E           	ddw	__ccov167_start_blk56	; block 56 START_ADDR
  4869  11F0  00000162           	ddw	__ccov167_end_blk56	; block 56 END_ADDR
  4870  11F4  00000157           	ddw	__ccov166_start_blk55	; block 55 START_ADDR
  4871  11F8  0000015E           	ddw	__ccov166_end_blk55	; block 55 END_ADDR
  4872  11FC  000001CC           	ddw	__ccov177_start_blk80	; block 80 START_ADDR
  4873  1200  000001F2           	ddw	__ccov177_end_blk80	; block 80 END_ADDR
  4874  1204  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  4875  1208  0000008C           	ddw	__ccov137_end_blk0	; block 0 END_ADDR
  4876                           
  4877                           ; Function: checkState1, coverage: 82,80,0
  4878  120C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  4879  1210  00000021           	ddw	__ccovbit82_54/(0+8)	; CC_ADDR
  4880  1214  00000001           	ddw	1	; NUM_POINTS
  4881  1218  00000000           	ddw	__ccovbit82_54& (0+7)	; OFFSET
  4882  121C  00000000           	ddw	0	; Reserved
  4883  1220  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  4884  1224  00000003           	ddw	3	; NUM_RANGES
  4885  1228  000001F2           	ddw	__ccov178_start_blk82	; block 82 START_ADDR
  4886  122C  000001F4           	ddw	__end_of_checkState1	; block 82 END_ADDR
  4887  1230  000001CC           	ddw	__ccov177_start_blk80	; block 80 START_ADDR
  4888  1234  000001F2           	ddw	__ccov177_end_blk80	; block 80 END_ADDR
  4889  1238  0000008B           	ddw	_checkState1	; block 0 START_ADDR
  4890  123C  0000008C           	ddw	__ccov137_end_blk0	; block 0 END_ADDR
  4891  007E                     btemp	set	126	;btemp
  4892  007E                     int$flags	set	126
  4893  007E                     wtemp0	set	126
  4894                           
  4895                           	psect	config
  4896                           
  4897                           ;Config register CONFIG1 @ 0x8007
  4898                           ;	Oscillator Selection
  4899                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  4900                           ;	Watchdog Timer Enable
  4901                           ;	WDTE = SWDTEN, WDT controlled by the SWDTEN bit in the WDTCON register
  4902                           ;	Power-up Timer Enable
  4903                           ;	PWRTE = OFF, PWRT disabled
  4904                           ;	MCLR Pin Function Select
  4905                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  4906                           ;	Flash Program Memory Code Protection
  4907                           ;	CP = OFF, Program memory code protection is disabled
  4908                           ;	Data Memory Code Protection
  4909                           ;	CPD = OFF, Data memory code protection is disabled
  4910                           ;	Brown-out Reset Enable
  4911                           ;	BOREN = OFF, Brown-out Reset disabled
  4912                           ;	Clock Out Enable
  4913                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4914                           ;	Internal/External Switchover
  4915                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4916                           ;	Fail-Safe Clock Monitor Enable
  4917                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4918  8007                     	org	32775
  4919  8007  09EC               	dw	2540
  4920                           
  4921                           ;Config register CONFIG2 @ 0x8008
  4922                           ;	Flash Memory Self-Write Protection
  4923                           ;	WRT = OFF, Write protection off
  4924                           ;	PLL Enable
  4925                           ;	PLLEN = OFF, 4x PLL disabled
  4926                           ;	Stack Overflow/Underflow Reset Enable
  4927                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
  4928                           ;	Brown-out Reset Voltage Selection
  4929                           ;	BORV = HI, Brown-out Reset Voltage (Vbor), high trip point selected.
  4930                           ;	Low-Voltage Programming Enable
  4931                           ;	LVP = ON, Low-voltage programming enabled
  4932  8008                     	org	32776
  4933  8008  38FF               	dw	14591

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         28
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            79      8      39
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_getBatteryVoltage
    _checkState1->_getBatteryVoltage

Critical Paths under _my_isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_checkState1
    _checkState1->___awdiv

Critical Paths under _my_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     310
                                              6 BANK0      2     2      0
                            ___awdiv
                        _checkState1
             _disable_watchdog_timer
          _enable_external_interrupt
                  _getBatteryVoltage
           _set_watchdog_timer_128ms
                        _timer2_init
       _watch_dog_incrementing_timer
 ---------------------------------------------------------------------------------
 (1) _watch_dog_incrementing_timer                         1     1      0       0
                                              2 COMMON     1     1      0
           _set_watchdog_timer_128ms
              _set_watchdog_timer_1s
           _set_watchdog_timer_256ms
            _set_watchdog_timer_256s
              _set_watchdog_timer_4s
 ---------------------------------------------------------------------------------
 (2) _set_watchdog_timer_4s                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _set_watchdog_timer_256s                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _set_watchdog_timer_256ms                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _set_watchdog_timer_1s                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer2_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkState1                                          2     2      0     155
                                              4 BANK0      2     2      0
                            ___awdiv
         _disable_external_interrupt
             _disable_watchdog_timer
          _enable_external_interrupt
              _enable_watchdog_timer
                  _getBatteryVoltage
           _set_watchdog_timer_128ms
 ---------------------------------------------------------------------------------
 (2) _set_watchdog_timer_128ms                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getBatteryVoltage                                    7     5      2      25
                                              2 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (2) _enable_watchdog_timer                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _enable_external_interrupt                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _disable_watchdog_timer                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _disable_external_interrupt                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     130
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _my_isr                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   _checkState1
     ___awdiv
     _disable_external_interrupt
     _disable_watchdog_timer
     _enable_external_interrupt
     _enable_watchdog_timer
     _getBatteryVoltage
     _set_watchdog_timer_128ms
   _disable_watchdog_timer
   _enable_external_interrupt
   _getBatteryVoltage
   _set_watchdog_timer_128ms
   _timer2_init
   _watch_dog_incrementing_timer
     _set_watchdog_timer_128ms
     _set_watchdog_timer_1s
     _set_watchdog_timer_256ms
     _set_watchdog_timer_256s
     _set_watchdog_timer_4s

 _my_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              6F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            4F      0       5       4        6.3%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               4F      8      27       5       49.4%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            20      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
ABS                  0      0      35       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      35       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue May 04 23:46:53 2021

                    __ccov116_end_blk1 040D                      __ccov108_end_blk1 03F8  
                    __ccov140_end_blk4 009F                      __ccov124_end_blk5 001B  
                   __ccov132_end_blk15 0056                    __ccov103_start_blk0 03F8  
                  __ccov111_start_blk0 03E3                     __pcodecov_info_hdr 0000  
                  __ccov84_start_blk16 03C5                      __ccov117_end_blk0 040E  
                    __ccov109_end_blk0 03E1                      __ccov125_end_blk6 001D  
                    __ccov141_end_blk6 00A8                           ___awdiv@sign 0041  
                    __ccov118_end_blk1 0410                      __ccov126_end_blk7 0022  
                    __ccov142_end_blk7 00AD                     __ccov133_end_blk16 0064  
                                  l140 039D                                    l300 01F2  
                                  l142 03A1                                    l143 03AE  
                                  l137 03DA                                    l146 03CB  
                                  l163 03FD                                    l172 03E1  
                                  l181 040B                                    l157 0335  
                                  l166 03EF                                    l271 00CE  
                                  l175 03E8                                    l184 040E  
                                  l280 00F9                                    l169 03F6  
                                  l178 0407                                    l603 0396  
                                  l187 0411                                    l283 00FD  
                                  l292 01C8                                    l293 01BD  
                                  l278 00F5                                    l288 0146  
                                  u130 03A1                                    u131 03A0  
                                  u140 03B2                                    u220 02DA  
                                  u141 03B1                                    u221 02D9  
                                  u230 02F2                                    u231 02F1  
                                  u240 030A                                    u241 0309  
                                  u225 02D6                                    u250 0322  
                                  u251 0321                                    u235 02EE  
                                  u245 0306                                    u255 031E  
                                  u610 0378                                    u611 0377  
                                  u605 036A                                    u630 0388  
                                  u550 033D                                    u710 01AD  
                                  u631 0387                                    u615 0374  
                                  u551 033C                                    u711 01AC  
                                  u640 038D                                    u560 0348  
                                  u641 038C                                    u625 037E  
                                  u561 0347                                    u705 0188  
                                  u570 0359                                    u650 00BD  
                                  u730 0290                                    u571 0358  
                                  u715 01A9                                    u651 00BC  
                                  u731 028F                                    u660 00DE  
                                  u740 02BE                                    u661 00DD  
                                  u741 02BD                                    u725 026B  
                                  u590 0369                                    u670 00F0  
                                  u591 0368                                    u671 00EF  
                                  u735 028C                                    u680 0138  
                                  u585 035D                                    u681 0137  
                                  u665 00DA                                    u690 0170  
                                  u691 016F                                    u685 0134  
                                  u757 0246                                    u695 016C  
                                  u767 0296                                    u777 01B3  
                                  u787 03A6                   __ccov158_start_blk38 0112  
                 __ccov166_start_blk55 0157                   __ccov174_start_blk68 01BD  
                    __ccov119_end_blk0 0411                      __ccov143_end_blk8 00B4  
                                  wreg 0009                  _set_watchdog_timer_1s 03F1  
                _set_watchdog_timer_4s 03DC                     __ccov150_end_blk22 00E6  
                   __ccov134_end_blk17 006A                    __ccov120_start_blk1 0411  
                  __ccov104_start_blk1 03FD                    __ccov112_start_blk1 03E8  
                                 l2020 0344                                   l2012 0337  
                                 l1220 0409                                   l2100 0112  
                                 l2030 0359                                   l2022 0348  
                                 l2014 0339                                   l1230 03A9  
                                 l1222 0397                                   l2110 0138  
                                 l2102 011D                                   l2040 0378  
                                 l2032 035C                                   l2024 034D  
                                 l2016 033D                                   l1240 03C3  
                                 l1232 03AC                                   l1224 039C  
                                 l2120 0157                                   l2112 013F  
                                 l2104 0126                                   l1400 0327  
                                 l2200 0211                                   l2050 038D  
                                 l2042 037C                                   l2034 0361  
                                 l2026 0351                                   l2018 0342  
                                 l1242 03C5                                   l1234 03AD  
                                 l1226 03A3                                   l2130 0162  
                                 l2122 015E                                   l2114 014A  
                                 l1250 03EA                                   l1402 032C  
                                 l2210 021A                                   l2202 0212  
                                 l2052 0392                                   l2044 037D  
                                 l2036 0365                                   l2028 0353  
                                 l1260 0410                                   l1236 03AD  
                                 l1228 03A5                                   l2140 01B8  
                                 l2132 0170                                   l2108 012B  
                                 l2060 0092                                   l1252 03F1  
                                 l1404 0331                                   l2220 0223  
                                 l2212 021C                                   l2204 0213  
                                 l2046 0382                                   l2038 0369  
                                 l1246 040D                                   l1238 03B2  
                                 l2142 01C1                                   l2134 01A0  
                                 l2070 00B4                                   l2062 0098  
                                 l1262 03CD                                   l1254 03DC  
                                 l2230 0234                                   l2222 0228  
                                 l2214 021E                                   l2206 0218  
                                 l2048 0388                                   l1248 03F8  
                                 l2136 01AD                                   l2072 00BD  
                                 l2064 009F                                   l2056 008B  
                                 l1264 03D0                                   l1256 03E3  
                                 l2240 023D                                   l2232 0236  
                                 l2224 022C                                   l2216 021F  
                                 l2208 0219                                   l1258 0405  
                                 l2138 01AF                                   l2090 00EA  
                                 l2082 00D0                                   l2074 00C4  
                                 l2066 00A8                                   l2058 008C  
                                 l1266 03D9                                   l2250 0253  
                                 l2242 0240                                   l2234 0237  
                                 l2226 0230                                   l2218 0221  
                                 l2170 01FE                                   l2162 01F4  
                                 l2092 00F0                                   l2076 00C8  
                                 l2068 00AD                                   l2148 01CC  
                                 l1380 02DA                                   l2260 0292  
                                 l2252 025A                                   l2244 024C  
                                 l2236 0239                                   l2228 0232  
                                 l2180 0203                                   l2172 01FF  
                                 l2164 01F6                                   l2086 00DF  
                                 l1390 02FC                                   l1382 02DF  
                                 l2270 02A8                                   l2262 029B  
                                 l2254 0273                                   l2246 024D  
                                 l2238 023A                                   l2190 0209  
                                 l2182 0204                                   l2174 0200  
                                 l2166 01F9                                   l2088 00E6  
                                 l1392 030A                                   l1384 02E4  
                                 l2280 02B3                                   l2272 02A9  
                                 l2264 029E                                   l2256 0283  
                                 l2248 0252                                   l2192 020B  
                                 l2184 0206                                   l2176 0201  
                                 l2168 01FA                                   l2434 0107  
                                 l2098 00FF                                   l1394 030F  
                                 l1386 02F2                                   l1378 02CC  
                                 l2290 02C3                                   l2282 02B5  
                                 l2274 02AC                                   l2266 02A3  
                                 l2258 0290                                   l2194 020D  
                                 l2186 0207                                   l2178 0202  
                                 l2436 01D5                                   l1396 0314  
                                 l1388 02F7                                   l2292 02C6  
                                 l2284 02B7                                   l2276 02AF  
                                 l2268 02A7                                   l2196 020E  
                                 l2188 0208                                   l1398 0322  
                                 l2286 02BA                                   l2278 02B1  
                                 l2198 020F                                   l2288 02BE  
             getBatteryVoltage@adc_val 007A                      __ccov137_end_blk0 008C  
                                 _INTE 005C                                   _INTF 0059  
                                 _PIR1 0011                                   _PIR2 0012  
                        _state_machine 003E                      __ccov138_end_blk2 0092  
                                 _main 01F4                     __ccov127_end_blk10 0035  
                   __ccov151_end_blk25 00EA                     __ccov135_end_blk19 006D  
                                 fsr0h 0005                                   indf0 0000  
                                 fsr0l 0004                                   btemp 007E  
       ??_watch_dog_incrementing_timer 0075                    __ccov22_start_blk21 0213  
                  __ccov14_start_blk13 0208                    __ccov30_start_blk29 0223  
                                 start 0071                      __ccov139_end_blk3 0098  
              ??_enable_watchdog_timer 0075                     _sleep_64ms_counter 0032  
                   __ccov144_end_blk10 00BD                     __ccov128_end_blk11 0038  
                   __ccov136_end_blk22 0071                     __ccov160_end_blk41 012B  
                   __ccov152_end_blk26 00F0                    __ccov121_start_blk0 0004  
                  __ccov113_start_blk0 0405                    __ccov105_start_blk0 03EA  
                  __ccov85_start_blk18 03CB                                  ?_main 0073  
                      __end_of___awdiv 0397                           __ccovbit10_8 038D  
                         __ccovbit14_9 038C                           __ccovbit50_1 0394  
                         __ccovbit18_5 0390                     __ccov145_end_blk11 00C4  
                   __ccov129_end_blk12 003D                     __ccov153_end_blk27 00F5  
                   __ccov161_end_blk45 0138                           __ccovbit65_2 0393  
                         __ccovbit68_3 0392                           __ccovbit1_12 0389  
                         __ccovbit1_20 0381                           __ccovbit1_13 0388  
                         __ccovbit1_21 0380                           __ccovbit1_14 0387  
                         __ccovbit1_15 0386                           __ccovbit1_16 0385  
                         __ccovbit1_17 0384                           __ccovbit1_18 0383  
                         __ccovbit1_19 0382                        ___awdiv@divisor 0075  
                         __ccovbit3_22 0128                           __ccovbit3_30 0120  
                         __ccovbit4_31 011F                           __ccovbit6_32 011E  
                                _IOCAF 0393                           __ccovbit7_23 0127  
                         __ccovbit7_33 011D                           __ccovbit8_34 011C  
                                i1l200 006D                                  i1l192 0038  
                                i1l194 0010                                  i1l195 0035  
                                i1l198 0056                        ___awdiv@counter 0040  
                 __ccov159_start_blk40 011D                   __ccov175_start_blk70 01C1  
                 __ccov167_start_blk56 015E                                  u30_20 000F  
                                u30_21 000E                                  u31_20 003D  
                                u31_21 003C                                  u32_20 0043  
                                u32_21 0042                                  u33_20 0050  
                                u33_21 004F                                  u33_25 004C  
                                u34_20 0064                                  u34_21 0063  
                                u34_25 0060                                  u29_20 000A  
                                u29_21 0009                   __size_of_checkState1 0169  
                   __ccov146_end_blk13 00C8                     __ccov154_end_blk28 00F9  
                   __ccov162_end_blk46 013F                     __ccov170_end_blk64 01AD  
                  __ccov122_start_blk1 000A                    __ccov114_start_blk1 0407  
                  __ccov106_start_blk1 03EF                         __pbitbssCOMMON 0380  
                                status 0003                                  wtemp0 007E  
                   __ccov147_end_blk14 00CE                     __ccov155_end_blk29 00FD  
                   __ccov163_end_blk48 0146                     __ccov171_end_blk65 01AF  
                       __pcodecov_info 0000                         _state_selftest 003A  
                  __ccov31_start_blk30 0228                    __ccov23_start_blk22 0218  
                  __ccov15_start_blk14 0209                        __initialization 0075  
                         __end_of_main 02CC                     __ccov156_end_blk33 00FF  
                   __ccov148_end_blk17 00D0                     __ccov164_end_blk50 014A  
                   __ccov172_end_blk66 01B8                    __ccov115_start_blk0 0409  
                  __ccov107_start_blk0 03F1                    __ccov123_start_blk3 0010  
              _set_watchdog_timer_256s 03E3                    __ccov94_start_blk10 030F  
                               ??_main 0046                     __ccov165_end_blk51 0157  
                   __ccov149_end_blk19 00DF                     __ccov157_end_blk36 0112  
                   __ccov173_end_blk67 01BD                   __ccov168_start_blk62 0162  
                 __ccov176_start_blk71 01C8                 ?_set_watchdog_timer_1s 0073  
               ?_set_watchdog_timer_4s 0073             ?_enable_external_interrupt 0073  
                   __ccov158_end_blk38 011D                     __ccov166_end_blk55 015E  
                   __ccov174_end_blk68 01C1                          __ccovbit10_35 011B  
                        __ccovbit11_24 0126                          __ccovbit11_36 011A  
                        __ccovbit13_25 0125                          __ccovbit22_11 038A  
                               _ADRESH 009C                          __ccovbit22_40 0116  
                               _ADRESL 009B                    __ccov116_start_blk1 040B  
                  __ccov108_start_blk1 03F6                          __ccovbit22_29 0121  
                        __ccovbit14_37 0119                    __ccov140_start_blk4 0098  
                  __ccov124_start_blk5 001A                          __ccovbit15_26 0124  
                        __ccovbit17_10 038B                          __ccovbit40_45 0111  
                        __ccovbit17_27 0123                          __ccovbit33_43 0113  
                        __ccovbit17_38 0118                          __ccovbit41_46 0110  
                        __ccovbit19_28 0122                          __ccovbit19_39 0117  
                        __ccovbit28_41 0115                          __ccovbit51_49 010D  
                        __ccovbit29_42 0114                       ___awdiv@dividend 0077  
                        __ccovbit38_44 0112                          __ccovbit70_52 010A  
                        __ccovbit46_47 010F                          __ccovbit71_53 0109  
                        __ccovbit48_48 010E                          __ccovbit82_54 0108  
                        __ccovbit67_50 010C                          __ccovbit68_51 010B  
                               _ANSELA 018C                                 i1l1540 000A  
                               i1l1560 0064                                 i1l1544 001A  
                               i1l1552 0022                                 i1l1562 006A  
                               i1l1554 003D                                 i1l1546 001B  
                               i1l1538 0006                                 i1l1556 0043  
                               i1l1548 001D                                 i1l1558 0050  
                               i1l2438 002D                                 _FVRCON 0117  
                     __ccov10_end_blk9 0204                     __ccov159_end_blk40 0126  
                   __ccov175_end_blk70 01C8                     __ccov167_end_blk56 0162  
                   _DoorStateAfterPrel 003C                    __ccov32_start_blk31 022C  
                  __ccov24_start_blk23 0219                    __ccov16_start_blk15 020B  
                  __ccov40_start_blk39 023D                     __ccov168_end_blk62 0170  
                   __ccov176_end_blk71 01CC                              ??___awdiv 0079  
                  __ccov117_start_blk0 040D                    __ccov109_start_blk0 03DC  
                  __ccov125_start_blk6 001B                    __ccov141_start_blk6 009F  
                         ?_timer2_init 0073                    __ccov95_start_blk12 0314  
                 __ccov130_start_blk13 003D                       ___awdiv@quotient 0042  
                               _my_isr 0004                     __ccov169_end_blk63 01A0  
                   __ccov177_end_blk80 01F2                   __ccov169_start_blk63 0170  
                 __ccov177_start_blk80 01CC                     __ccov178_end_blk82 01F4  
               _NewStateChangeDetected 0397                    __ccov118_start_blk1 040E  
                  __ccov126_start_blk7 001D                    __ccov142_start_blk7 00A8  
              __end_of__initialization 0088                    __ccov41_start_blk40 0240  
                  __ccov33_start_blk32 0230                    __ccov25_start_blk24 021A  
                  __ccov17_start_blk16 020D              ??_set_watchdog_timer_256s 0075  
                   _state_output_pulse 003B                         __pcstackCOMMON 0073  
                  __ccov119_start_blk0 0410                    __ccov143_start_blk8 00AD  
                  __ccov96_start_blk13 0322                   __ccov131_start_blk14 0043  
             _set_watchdog_timer_128ms 03F8               _set_watchdog_timer_256ms 03EA  
                     __ccov70_end_blk3 03DC                       __ccov71_end_blk0 039C  
                       _OPTION_REGbits 0095                   __ccov178_start_blk82 01F2  
                     __ccov72_end_blk1 039D                     __ccov70_start_blk3 03DA  
                      __ccov1_end_blk0 01F6                       __ccov73_end_blk3 03A1  
                           __pbssBANK0 0026               ??_disable_watchdog_timer 0075  
                      __ccov2_end_blk1 01F9                       __ccov74_end_blk4 03A3  
                     __ccov90_end_blk5 02F7                        _NewDoorPolarity 0396  
                      __ccov3_end_blk2 01FA                       __ccov67_end_blk0 03D0  
                     __ccov75_end_blk5 03A5                       __ccov91_end_blk6 02FC  
                  __ccov42_start_blk41 024C                    __ccov34_start_blk33 0232  
                  __ccov26_start_blk25 021C                    __ccov18_start_blk17 020E  
                  __ccov50_start_blk49 0292                        __ccov4_end_blk3 01FE  
                           __pmaintext 01F4                       __ccov68_end_blk1 03D9  
                   __ccov71_start_blk0 0397                       __ccov76_end_blk6 03A9  
                     __ccov92_end_blk8 030A         __size_of_enable_watchdog_timer 0004  
        __end_of_enable_watchdog_timer 0409                        __ccov5_end_blk4 01FF  
                           __pintentry 0004                       __ccov69_end_blk2 03DA  
                     __ccov77_end_blk7 03AC                       __ccov93_end_blk9 030F  
                  __ccov137_start_blk0 008B                    __ccov97_start_blk14 0327  
                 __ccov132_start_blk15 0050                        __ccov6_end_blk5 0200  
                              ?_my_isr 0073                       __ccov86_end_blk0 02DA  
                     __ccov78_end_blk8 03AD                        __ccov7_end_blk6 0201  
                     __ccov87_end_blk1 02DF        __end_of_set_watchdog_timer_256s 03EA  
                      __ccov8_end_blk7 0202                       __ccov88_end_blk2 02E4  
                   __ccov72_start_blk1 039C                    _DoorStateBeforePrel 003D  
                      __ccov9_end_blk8 0203                       __ccov89_end_blk4 02F2  
                  __ccov138_start_blk2 008C                      __ccov11_end_blk10 0206  
                    __ccov1_start_blk0 01F4                      __ccov12_end_blk11 0207  
                    __ccov20_end_blk19 0212                    __ccov51_start_blk50 029B  
                  __ccov43_start_blk42 024D                    __ccov35_start_blk34 0234  
                  __ccov27_start_blk26 021E                    __ccov19_start_blk18 020F  
                   __ccov73_start_blk3 039D           ??_disable_external_interrupt 0075  
                              ___awdiv 0337                    __ccov139_start_blk3 0092  
                  __ccov98_start_blk16 032C                      __ccov21_end_blk20 0213  
                    __ccov13_end_blk12 0208                   __ccov133_start_blk16 0056  
                              __ptext1 02CC                                __ptext2 03DC  
                              __ptext3 03E3                                __ptext4 03EA  
                              __ptext5 03F1                                __ptext6 03CD  
                              __ptext7 008B                                __ptext8 03F8  
                              __ptext9 0397                   __size_of_timer2_init 000F  
                      __size_of_my_isr 006D                ??_set_watchdog_timer_1s 0075  
              ??_set_watchdog_timer_4s 0075                          ??_checkState1 0044  
                    __ccov2_start_blk1 01F6                              _T2CONbits 001C  
                    __ccov22_end_blk21 0218                      __ccov14_end_blk13 0209  
                    __ccov30_end_blk29 0228                             _millivolts 0038  
                            _MDCONbits 039C                     __ccov74_start_blk4 03A1  
                   __ccov90_start_blk5 02F2            ??_enable_external_interrupt 0075  
                              clrloop0 0400                   end_of_initialization 0088  
                    __ccov31_end_blk30 022C                      __ccov23_end_blk22 0219  
                    __ccov15_end_blk14 020B        __size_of_disable_watchdog_timer 0004  
                            _MDSRCbits 039D    __size_of_disable_external_interrupt 0003  
                    __ccov3_start_blk2 01F9                      __ccov32_end_blk31 0230  
                    __ccov24_end_blk23 021A                      __ccov16_end_blk15 020D  
                    __ccov40_end_blk39 0240                    __ccov44_start_blk43 0252  
                  __ccov36_start_blk35 0236                    __ccov28_start_blk27 021F  
                  __ccov60_start_blk60 02B3                    __ccov52_start_blk52 029E  
                            _RCSTAbits 019D                     __ccov67_start_blk0 03CD  
                   __ccov75_start_blk5 03A3                     __ccov91_start_blk6 02F7  
                   _sleep_256s_counter 0028                    __ccov99_start_blk17 0331  
                    __ccov41_end_blk40 024C                      __ccov33_end_blk32 0232  
                    __ccov25_end_blk24 021C                      __ccov17_end_blk16 020E  
                 __ccov150_start_blk22 00DF                   __ccov134_start_blk17 0064  
                            _PORTAbits 000C                      __ccov4_start_blk3 01FA  
                        _WakeUpCounter 0026                              _TRISAbits 008C  
                    __ccov42_end_blk41 024D                      __ccov34_end_blk33 0234  
                    __ccov26_end_blk25 021E                      __ccov18_end_blk17 020F  
                    __ccov50_end_blk49 029B                     __ccov68_start_blk1 03D0  
                   __ccov76_start_blk6 03A5                     __ccov92_start_blk8 02FC  
                  __end_of_checkState1 01F4                             _state_door 003F  
                    __ccov51_end_blk50 029E                      __ccov43_end_blk42 0252  
                    __ccov35_end_blk34 0236                      __ccov27_end_blk26 021F  
                    __ccov19_end_blk18 0211                            _CM1CON0bits 0111  
                            _TXSTAbits 019E                      __ccov5_start_blk4 01FE  
           ??_set_watchdog_timer_128ms 0075             ??_set_watchdog_timer_256ms 0075  
                    __ccov44_end_blk43 0253                      __ccov36_end_blk35 0237  
                    __ccov28_end_blk27 0221                      __ccov60_end_blk60 02B5  
                    __ccov52_end_blk52 02A3                    __ccov45_start_blk44 0253  
                  __ccov37_start_blk36 0237                    __ccov29_start_blk28 0221  
                  __ccov61_start_blk61 02B5                    __ccov53_start_blk53 02A3  
            _enable_external_interrupt 040D                     __ccov69_start_blk2 03D9  
                   __ccov77_start_blk7 03A9                     __ccov93_start_blk9 030A  
                          __ccovbit2_6 038F                            __ccovbit3_4 0391  
                          __ccovbit6_7 038E                 _disable_watchdog_timer 0409  
                    __ccov45_end_blk44 025A                      __ccov37_end_blk36 0239  
                    __ccov29_end_blk28 0223                      __ccov61_end_blk61 02B7  
                    __ccov53_end_blk53 02A7                   __ccov127_start_blk10 0022  
                 __ccov151_start_blk25 00E6                   __ccov135_start_blk19 006A  
                        __pbitbssBANK0 0108                         __end_of_my_isr 0071  
                    __ccov6_start_blk5 01FF                    start_initialization 0075  
                    __ccov46_end_blk45 0273                      __ccov38_end_blk37 023A  
                    __ccov62_end_blk62 02BA                      __ccov54_end_blk54 02A8  
                   __ccov86_start_blk0 02CC                     __ccov78_start_blk8 03AC  
                          ___powerdown 0103                      __ccov47_end_blk46 0283  
                    __ccov39_end_blk38 023D                      __ccov55_end_blk55 02A9  
                    __ccov63_end_blk64 02BE                      __ccov7_start_blk6 0200  
   __end_of_disable_external_interrupt 0413             _disable_external_interrupt 0410  
                    __ccov80_end_blk10 03AE                      __ccov48_end_blk47 0290  
                    __ccov56_end_blk56 02AC                      __ccov64_end_blk65 02C3  
                  __ccov46_start_blk45 025A                    __ccov38_start_blk37 0239  
                  __ccov62_start_blk62 02B7                    __ccov54_start_blk54 02A7  
                   __ccov87_start_blk1 02DA                               ??_my_isr 0073  
                    __ccov81_end_blk12 03B2                      __ccov49_end_blk48 0292  
                    __ccov57_end_blk57 02AF                      __ccov65_end_blk67 02C6  
                 __ccov144_start_blk10 00B4                   __ccov128_start_blk11 0035  
                 __ccov136_start_blk22 006D                   __ccov160_start_blk41 0126  
                 __ccov152_start_blk26 00EA                            _checkState1 008B  
                    __ccov8_start_blk7 0201                            __pbssCOMMON 007C  
                            ___latbits 0000                          __pcstackBANK0 0040  
                    __ccov82_end_blk14 03C3                      __ccov58_end_blk58 02B1  
                    __ccov66_end_blk68 02CB                     __ccov88_start_blk2 02DF  
                            ___timeout 0104                      __ccov83_end_blk15 03C5  
             ?_set_watchdog_timer_256s 0073                      __ccov59_end_blk59 02B3  
                    __ccov9_start_blk8 0202                      __ccov84_end_blk16 03CB  
                  __ccov47_start_blk46 0273                    __ccov39_start_blk38 023A  
                  __ccov55_start_blk55 02A8                    __ccov63_start_blk64 02BA  
                   __ccov89_start_blk4 02E4                               ?___awdiv 0075  
                _enable_watchdog_timer 0405                      __ccov85_end_blk18 03CD  
                 __ccov145_start_blk11 00BD                   __ccov129_start_blk12 0038  
                 __ccov153_start_blk27 00F0                   __ccov161_start_blk45 012B  
       __size_of_set_watchdog_timer_1s 0007         __size_of_set_watchdog_timer_4s 0007  
        __end_of_set_watchdog_timer_1s 03F8          __end_of_set_watchdog_timer_4s 03E3  
                    __ccov94_end_blk10 0314                       _sleep_1s_counter 002C  
                    __ccov95_end_blk12 0322                               _LATAbits 010C  
     __end_of_set_watchdog_timer_128ms 03FF       __end_of_set_watchdog_timer_256ms 03F1  
                            clear_ram0 03FF                               _PIE1bits 0091  
                     _sleep_4s_counter 002A                               _PIR1bits 0011  
                    __ccov96_end_blk13 0327                    __ccov80_start_blk10 03AD  
                  __ccov48_start_blk47 0283                    __ccov56_start_blk56 02A9  
                  __ccov64_start_blk65 02BE                          ??_timer2_init 0075  
                    _getBatteryVoltage 0397                             _ADCON0bits 009D  
                    __ccov97_end_blk14 032C                             _ADCON1bits 009E  
                 __ccov146_start_blk13 00C4                   __ccov154_start_blk28 00F5  
                 __ccov162_start_blk46 0138                   __ccov170_start_blk64 01A0  
   __size_of_enable_external_interrupt 0003                     ?_getBatteryVoltage 0075  
                             _WPUAbits 020C                    main@output_polarity 0395  
                    __ccov98_end_blk16 0331                    ??_getBatteryVoltage 0077  
                    __ccov99_end_blk17 0335                          _ihcPulseTimer 0034  
              ?_disable_watchdog_timer 0073                    __ccov81_start_blk12 03AE  
                  __ccov49_start_blk48 0290                    __ccov57_start_blk57 02AC  
                  __ccov65_start_blk67 02C3                   __ccov100_start_blk22 0335  
               ?_enable_watchdog_timer 0073              __end_of_getBatteryVoltage 03CD  
                     __size_of___awdiv 0060                   __ccov147_start_blk14 00C8  
                 __ccov155_start_blk29 00F9                   __ccov163_start_blk48 013F  
                 __ccov171_start_blk65 01AD                             _ANSELAbits 018C  
                  __end_of_timer2_init 03DC      __end_of_enable_external_interrupt 0410  
                  _sleep_128ms_counter 0030                               __ptext10 0405  
                             __ptext11 040D                               __ptext12 0409  
                             __ptext13 0410                               __ptext14 0337  
 __end_of_watch_dog_incrementing_timer 0337  __size_of_watch_dog_incrementing_timer 006B  
         _watch_dog_incrementing_timer 02CC                           _SSP1CON1bits 0215  
                           _MDCARHbits 039F                             _MDCARLbits 039E  
                        __size_of_main 00D8                    __ccov11_start_blk10 0204  
       __end_of_disable_watchdog_timer 040D            ?_disable_external_interrupt 0073  
                   __ccov100_end_blk22 0337                    __ccov82_start_blk14 03B2  
                  __ccov58_start_blk58 02AF                    __ccov66_start_blk68 02C6  
                             int$flags 007E                   __ccov156_start_blk33 00FD  
                 __ccov148_start_blk17 00CE                   __ccov164_start_blk50 0146  
                 __ccov172_start_blk66 01AF                           ?_checkState1 0073  
    __size_of_set_watchdog_timer_128ms 0007      __size_of_set_watchdog_timer_256ms 0007  
            ?_set_watchdog_timer_128ms 0073              ?_set_watchdog_timer_256ms 0073  
                           _INTCONbits 000B                     __ccov10_start_blk9 0203  
                           _FVRCONbits 0117          ?_watch_dog_incrementing_timer 0073  
                             intlevel1 0000                            _prelCounter 0036  
                  __ccov12_start_blk11 0206                    __ccov20_start_blk19 0211  
                       _BatteryVoltage 007C                             _OSCCONbits 0099  
                  __ccov83_start_blk15 03C3                    __ccov59_start_blk59 02B1  
           __size_of_getBatteryVoltage 0036                            _timer2_init 03CD  
     __size_of_set_watchdog_timer_256s 0007                      __ccov110_end_blk1 03E3  
                 __ccov165_start_blk51 014A                   __ccov149_start_blk19 00D0  
                 __ccov157_start_blk36 00FF                   __ccov173_start_blk67 01B8  
                    __ccov103_end_blk0 03FD                      __ccov111_end_blk0 03E8  
                           _SRCON0bits 011A                      __ccov120_end_blk1 0413  
                    __ccov104_end_blk1 03FF                      __ccov112_end_blk1 03EA  
                  _sleep_256ms_counter 002E                     __ccov130_end_blk13 0043  
                           _WDTCONbits 0097                    __ccov110_start_blk1 03E1  
                    __ccov121_end_blk0 000A                      __ccov113_end_blk0 0407  
                    __ccov105_end_blk0 03EF                      __ccov122_end_blk1 0010  
                    __ccov114_end_blk1 0409                      __ccov106_end_blk1 03F1  
                   __ccov131_end_blk14 0050                    __ccov21_start_blk20 0212  
                  __ccov13_start_blk12 0207                      __ccov115_end_blk0 040B  
                    __ccov107_end_blk0 03F6                      __ccov123_end_blk3 001A  
